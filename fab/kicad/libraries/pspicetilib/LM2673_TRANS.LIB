*$
* LM2673
*****************************************************************************
* (C) Copyright 2019 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer
*****************************************************************************
*
* This model is subject to change without notice. Texas Instruments
* Incorporated is not responsible for updating this model.
*
*****************************************************************************
*
** Released by: Texas Instruments Inc.
* Part: LM2673
* Date: 17JULY2019
* Model Type: Transient  
* Simulator: PSPICE
* Simulator Version: 16.2.0.p001
* EVM Order Number: AN-1135 LM267X
* EVM Users Guide: SNVA013D – December 2000 – Revised April 2013
* Datasheet: SNVS030O –APRIL 2000–REVISED JUNE 2016
* Topology supported: Buck
*
* Model Version: Final 1.10
*
*****************************************************************************
*
* Updates:
*
* Final 1.10
* 10ns RC delay is added in high side current sensing circuit
*
* Final 1.00
* Release to Web.
*
*****************************************************************************
.SUBCKT LM2673_TRANS VIN FB CB VSW CURRENT_ADJ GND SOFTSTART
E_BSTARTUP ENABLE GND value = { IF(V(VIN,GND) > 7.90 , 5 , 0)}
E_B12V REFV GND value = { IF(V(VIN,GND) > 7.90 , 1.215 , 0)}
E_BREF REF5V GND value = { IF(V(VIN,GND) > 7.90 , 5 , 0)}
G_BSSClamp GND SOFTSTART value = { IF(V(VIN) > 3.3 & V(SOFTSTART) < 5 , 3.7E-6 , 0 )}
CSS SOFTSTART GND 26.37P
E_BSSCL 361 Gnd value = { IF(V(101) > 1.1 , 0 , 5  )}
DSS SOFTSTART 361 DSS
.MODEL DSS D RS=10k
XSW2 31 30 VSW NATIONALFET3A_0
X_H1    VIN 31 HS_CUR_INT GND STARTUP_H1
R58 HS_CUR_INT HS_CUR 1
C58 HS_CUR 0 10n
E_BVRSEN 102 GND value = { IF( V(HS_CUR) > V(CL) , 5m , 0)}
E_BFS2 103 GND value = { IF( V(HS_CUR) > 1.18*V(CL) , 5-(V(HS_CUR)*.12*.3)  , 5)}
VICL CURRENT_ADJ GND DC=1.21
E_BICL CL GND value = { IF(37125 * -1* I(VICL) / 1.21 > 4.6 , 4.6  , 37125 * -1 * I(VICL) / 1.21 )}
E_CBB VIN_INT GND value = {V(VIN)}
X4 VIN_INT CB REG1MA_0
X1 VSW CB LZEN10_0
RREG 50 52 0.33
CREF 52 GND 1N
V3 REF5V 50
RFB2 FB EA1 1.0E-6
RFB1 EA1 0 1000000.0
GM1 GND 15 EA1 REFV 6.73E-4
G_BGM2 GND 17 value = {V(REFV,15) * V(13)}
XA1 VIN_INT 13 PWL2
D1 17 REF5V _D
D2 400 17 _D
VD2 400 Gnd 0.9 
.MODEL _D D
R3 REFV 16 10K
R4 15 16 2K
L1 16 REFV 20MH
R5 17 18 15K
C1 18 GND 10NF IC = 2.5
C6 17 18 105P
R10 17 GND 300K
E1 ErrOut Gnd 17 Gnd 0.8 
E_BSSERR 360 Gnd value = { IF(V(SOFTSTART) < V(ErrOut) , V(SOFTSTART) , V(ErrOut) )}
X3 RTCT 360 COMPOUT COMP_BASIC_GEN
S1 26 GND RTCT GND _S1
.MODEL _S1 vswitch VT=1.9 VH=1.3 RON=.01 ROFF=1MEG
G_BDISCH RTCT GND value = { IF(V(26) < 0.6 & V(REF5V) > 3.2 , .46M , 0)}
RPULL 26 REF5V 100K
RT RTCT 33 100K
CT RTCT 9 .0399N
VM 9 GND
E_BVM PULSE300N GND value = { IF(I(VM) < 0 , 1 , 0)}
R103 103 33 200
C103 33 GND 1N IC=5
R101 102 101 200
C101 101 GND 1N
X2 35 REF5V 32 GND QB Q FFLOP_0
E_BR 32 GND value = { IF(V(COMPOUT) > 2 , 5 , IF( V(101) > 1 , 5 , 0))}
E_BS 35 GND value = { IF(V(PULSE300N) < .5 , 5 , 0)}
E_BD 30 VSW value = { IF(V(Q) > 2.5 & V(SOFTSTART) > .63 & V(ENABLE) > 1.4 & V(PULSE300N) <.5 , 10 , 0)}
.ENDS LM2673_TRANS
*$
.subckt STARTUP_H1 1 2 3 4  
H_H1         3 4 VH_H1 1
VH_H1         1 2 0V
.ends STARTUP_H1
*$
.SUBCKT PWL2 1 2 
E_PWL  2 0 TABLE = {V(1,0)} ((10 1.48M) (20 0.673M) (40 0.48M))
.ENDS PWL2
*$
.SUBCKT FFLOP_0     1  2  11 12  5  6
X1 7 4 2 8 NAND3_0
X2 8 3 10 9 NAND3_1
X3 1 8 10 7 NAND3_1
X4 4 9 1 10 NAND3_0
X5 4 7 6 5 NAND3_1
X6 5 10 3 6 NAND3_0
X7 11 4 INV_0
X8 12 3 INV_0
.ENDS FFLOP_0
*$
.SUBCKT NAND3_0 1 2 3 4
E_B1 5 0 value = {IF(~((V(1)>1.5)&(V(2)>1.5)&(V(3)>1.5)),3.5,0.3)}
R1 5 4 400
C1 4 0 20P IC=0
.ENDS NAND3_0
*$
.SUBCKT NAND3_1 1 2 3 4
E_B1 5 0 value = {IF(~((V(1)>1.5)&(V(2)>1.5)&(V(3)>1.5)),3.5,0.3)}
R1 5 4 400
C1 4 0 20P IC=3.5000
.ENDS NAND3_1
*$
.SUBCKT INV_0 1 2
E_B1 3 0 value = {IF(~((V(1)>1.5)),3.5,0.3)}
R1 3 2 100
C1 2 0 10P IC=3.5000
.ENDS INV_0
*$
.SUBCKT NATIONALFET3A_0 10 20 40
M1   1  2  3  3  DMOS L=1U W=1U
RD  10  1  70.5M
RS  30  3  4.75M
RG  20  2  50
CGS  2  3  336.6P
EGD 12  0  2  1  1
VFB 14  0  0
FFB  2  1  VFB  1
CGD 13 14  0.606N
R1  13  0  1
D1  12 13  DLIM
DDG 15 14  DCGD
R2  12 15  1
D2  15  0  DLIM
DSD  3 10  DSUB
LS  30 40  .1N
.MODEL DMOS NMOS (LEVEL=3 VMAX=125K THETA=58.1M ETA=2M VTO=3.1 KP=8.983)
.MODEL DCGD D (VJ=0.6 M=0.68)
.MODEL DSUB D ( IS=1e-15 TT=10p Rs=0.0005 N=.001  )
.MODEL DLIM D ( IS=1e-15 TT=10p Rs=0.0005 N=.001  )
.ENDS NATIONALFET3A_0
*$
.SUBCKT REG1MA_0  1  2
JFET 1 2 2 JREG1MA
.MODEL JREG1MA NJF (VTO=-1.35 BETA=.67M LAMBDA=1.0M RD=49  RS=125 IS=1.56F PB=1 FC=.5 CGS=5P CGD=3.8P)
.ENDS REG1MA_0
*$
.SUBCKT LZEN10_0 1 2
D1 1 2 DZEN
.MODEL DZEN D
.ENDS LZEN10_0
*$
.SUBCKT COMP_BASIC_GEN INP INM Y 	
E_ABM Yint 0 VALUE {IF (V(INP) > V(INM), 5, 0)}
R1 Yint Y 1
C1 Y 0 5n
.ENDS COMP_BASIC_GEN
*$
.MODEL D1 D ( IS=7.98u RS=13.4m BV=70.0 IBV=500u 
+ CJO=370p  M=0.333 N=1.13 TT=1.44n )
*$
.SUBCKT COUT 2 4  PARAMs: IC=0
R1 2 3 0.025
C1 3 1 9.120000000000001E-5 IC = {IC}
R3 5 4 150
R2 2 4 1.0964912280701753E7
R4 3 26 3.125E9
R6 3 7 3125.0
C5 7 1 3.648E-5 IC = {IC}
R7 3 10 3125.0
C6 10 1 3.648E-5 IC = {IC}
R8 3 13 3125.0
C7 13 1 3.648E-5 IC = {IC}
C2 26 1 3.648E-5 IC = {IC}
R9 3 28 3.125E7
C3 28 1 3.648E-5 IC = {IC}
R10 3 29 312500.0
C4 29 1 3.648E-5 IC = {IC}
L8 1 5 0.2e-9
R24 1 5 0.07500000000000001
L12 5 4 10e-18
.ENDS COUT
*$
.SUBCKT LDCR IN OUT
+ PARAMs:  L=1u DCR=0.01 IC=0
L	IN 1  {L} IC={IC}
RDCR	1 OUT {DCR}
.ENDS LDCR
*$