* TPA301
*****************************************************************************
* (C) Copyright 2013 Texas Instruments Incorporated. All rights reserved.
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer.
*****************************************************************************
*
** Released by: WEBENCH(R) Design Center, Texas Instruments Inc.
* Part: TPA301
* Date: 06/20/2013
* Model Type: All In One
* Simulator: PSPICE 
* Simulator Version: 16.2.0.p001
* EVM Order Number: N/A 
* EVM Users Guide:  SLOU014A
* Datasheet: SLOS208E–JANUARY 1998 –REVISED JUNE 2004
*
* Model Version: 1.0
*
*****************************************************************************
*
* Updates:
*
* Version 1.0 : Release to Web
*
*****************************************************************************
* Notes:
*
* Due to similarity in performance between 3.3V and 5V supply, the model
* can be used for across supply variation
*
* 1. The following parameters are modeled: 
*    Output offset voltage, PSRR, Supply Current, Shutdown current, IIH, 
*    IIL, Full Power Bandwidth, Unity Gain Bandwidth, and BTL Noise 
*    output Voltage. 
*
* 2. The following parameters are not modeled: 
*    Total Harmonic Distortion
*
*****************************************************************************



.subckt TPA301 BYPASS GND IN_NEG IN_POS SD VDD VO_NEG VO_POS
XI0 BYPASS GND IN_NEG IN_POS SD VDD VO_NEG VO_POS TPA301_HT1
.ends







.subckt ANALOG_BUFFER VOUT VIN
R0 VIN 0 1e9
R1 VOUT 0 1e9
E0 VOUT 0 VIN 0 1
.ends ANALOG_BUFFER


.subckt TPA301_HT1 BYPASS GND IN_NEG IN_POS SD VDD VO_NEG VO_POS
I0 0 SD DC 1e-6
XAHDLI9 SD SD_INT VDD GND NET039 GND DIGLEVSHIFT
XI5 NET034 IN_POS ANALOG_BUFFER
V1 VO_POS NET053 DC 0
V2 NET039 0 DC 1
V0 NET049 VO_NEG DC 5e-3
E1 NET043 0 GND 0 1
E0 NET032 0 VDD 0 1
XI2 IN_NEG NET034 VDD GND NET053 SD_INT TPA301_Amp_HT1
XI14 NET17 NET034 VDD GND NET049 SD_INT TPA301_Amp_HT1
R3 BYPASS NET043 500e3
R2 NET032 BYPASS 500e3
R1 NET17 NET049 1e3
R0 NET17 NET053 1e3
.ends TPA301_HT1




.SUBCKT DIGLEVSHIFT 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) < (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1e-12
.ENDS


.SUBCKT TPA301_Amp_HT1 Vinm Vinp VCC VEE Vout SD
X1 VCC VEE Vinp Vinm Vout SD AMP

.ENDS


.SUBCKT  AMP  VDD VSS VIP VIM VO PD


XU101        12 13 GNDF GNDF  IBIAS_NEW2
+ PARAMS: IBIAS = 1p IBIASOFFSET = 1p


Vos         12 20 0.0m



XU15         VDD VSS VIMON PD  ILOAD_NEW_PD
+ PARAMS: VON = 0.5

XU1         7 8 PD  OUT_CURRENT_CLAMP_PD
+ PARAMS: RSER = 0.1 ROFF = 1G VON = 0.5 IMAX = 2 IMIN = 2



VXU9 9 7 0

VXU100 10 10a 0

XU5         VDD VSS 10a 9 VIMON GNDF VDD_CLP VSS_CLP VCLAMP_W_CLAW
+ PARAMS: VMAXIO = 1 VMINIO = 1 SLOPE = 0

VXU10 11 10 0 

XU13         VDD VSS 12 13 14 15 GNDF CMR
+ PARAMS: VMAX = 0.0 VMIN = 0.0

XU11         VDD VSS GNDF GND_FLOAT_NEW

XU14        14 15 11 GNDF  GBW_SLEW_SE_TANH
+ PARAMS: AOL = 85 GBW = 1.6MEG SRP = 0.075MEG SRN = 0.075MEG IT = 1M TANHONOFF=0


XU12         VDD VSS PD  IQ_PD
+ PARAMS: VON = 0.5 IQQ = 0.35m  IOFF = 75n





XD4         VSS 13 IDEAL_DIODE
+ PARAMS: EMCO = 0.01 BRKV = 60 IBRKV = 1M
XD3         13 VDD IDEAL_DIODE
+ PARAMS: EMCO = 0.01 BRKV = 60 IBRKV = 1M
XD2         VSS 12 IDEAL_DIODE
+ PARAMS: EMCO = 0.01 BRKV = 60 IBRKV = 1M
XD1         12 VDD IDEAL_DIODE
+ PARAMS: EMCO = 0.01 BRKV = 60 IBRKV = 1M

XU6         8 VO VIMON AMETER
+ PARAMS: GAIN = 1


VXU8 21 13 0


XU7       VDD VSS 22 21 GNDF PSRR_NEW2
+ PARAMS: PSRRP = 80 FPSRRP = 100
+ PSRRN = 80 FPSRRN = 100


XU3         23 20 VNSE
+ PARAMS: NLF = 23 FLW = 0.1 NVR = 22.80

XU2         VIP VIM 23 22 GNDF INPUT
+ PARAMS: RCM = 0.1 CCM = 1f CDM = 1f

.ENDS


.SUBCKT TPA301_IQ_PD VDD VSS PD


.PARAM IQQ_X1 = { 2.5 }
.PARAM IQQ_Y1 = { 1.26m }

.PARAM IQQ_X2 = { 5.5 }
.PARAM IQQ_Y2 = { 1.50m }

.PARAM IQQ_SLOPE = { ( IQQ_Y2-IQQ_Y1 ) / ( IQQ_X2-IQQ_X1 ) }
.PARAM IQQ_INTCP ={ IQQ_Y1 - IQQ_SLOPE * IQQ_X1 }

EIQQ IQQ 0 VALUE = { IQQ_SLOPE * V(VDD,VSS) + IQQ_INTCP }   


EIOFF IOFF 0 VALUE = 
+ { 0 - 1.7576u * V(VDD,VSS)*V(VDD,VSS)*V(VDD,VSS)*V(VDD,VSS) +
+       25.677u * V(VDD,VSS)*V(VDD,VSS)*V(VDD,VSS) -
+	125.71u * V(VDD,VSS)*V(VDD,VSS) + 
+	255.22u * V(VDD,VSS) - 
+	182.73u
+ }


G1 VDD VSS VALUE = { IF( V(PD) < 0.5 , V(IQQ)/2, V(IOFF)/2 ) }

.ENDS










.SUBCKT IDEAL_DIODE  A C 
+PARAMS: EMCO = 0.01 BRKV = 60 IBRKV = 1M
D1 A C IDIODE
.MODEL IDIODE D(N = {EMCO} BV = {BRKV} IBV = {IBRKV})
.ENDS


.SUBCKT GND_FLOAT_NEW  VDD VSS GNDF 

EGNDF_int  GNDF_int 0 VALUE = {(V(VDD)+V(VSS))*0.5}
GRGNDF_int2 GNDF_int GNDF_int2 VALUE = {V(GNDF_int,GNDF_int2)/1E3}
CGNDF_int2  GNDF_int2 0 1E3
EGNDF GNDF 0 GNDF_int2 0 1

.ENDS


.SUBCKT AMETER   VI  VO VIMON
+ PARAMS: GAIN = 1
VSENSE VI VO DC = 0
EMETER VIMON 0 VALUE = {I(VSENSE)*GAIN}
.ENDS



.SUBCKT VCLAMP_W_CLAW   VDD  VSS  VI  VO VIMON  GNDF VDD_CLP VSS_CLP
+ PARAMS: VMAXIO = 0 VMINIO = 0 SLOPE = 0
EPCLIP  VDD_CLP 0 VALUE = {V(VDD,GNDF) - SLOPE*V(VIMON) - VMAXIO}
ENCLIP  VSS_CLP 0 VALUE = {V(VSS,GNDF) - SLOPE*V(VIMON) + VMINIO}
ECLAMP  VO GNDF VALUE = {LIMIT(V(VI,GNDF), V(VDD_CLP), V(VSS_CLP))}


.ENDS



.SUBCKT TF   VI  VO  GNDF
+ PARAMS: FZ1 = 10G FZ2 = 10G FZ3 = 10G FZ4 = 10G FZ5 = 10G
+ FP1 = 1 FP2 = 10G FP3 = 10G FP4 = 10G
.PARAM GM = 1M
.PARAM RO = {1/GM}
.PARAM PI = 3.141592

GP1  GNDF VP1 VI GNDF {GM}
GRP1 VP1 GNDF VALUE = {V(VP1,GNDF)/RO}
CP1  VP1 GNDF {1/(2*PI*RO*FP1)}

GP2  GNDF VP2 VP1 GNDF {GM}
GRP2 VP2 GNDF VALUE = {V(VP2,GNDF)/RO}
CP2  VP2 GNDF {1/(2*PI*RO*FP2)}

GP3  GNDF VP3 VP2 GNDF {GM}
GRP3 VP3 GNDF VALUE = {V(VP3,GNDF)/RO}
CP3  VP3 GNDF {1/(2*PI*RO*FP3)}

GP4  GNDF VP4 VP3 GNDF {GM}
GRP4 VP4 GNDF VALUE = {V(VP4,GNDF)/RO}
CP4  VP4 GNDF {1/(2*PI*RO*FP4)}

GZ1  GNDF VZ1 VP4 GNDF {GM}
GRZ1  VZ1 VX1 VALUE =  {V(VZ1,VX1)/RO}
LZ1  VX1 GNDF {RO/(2*PI*FZ1)}

GZ2  GNDF VZ2 VZ1 GNDF {GM}
GRZ2  VZ2 VX2 VALUE =  {V(VZ2,VX2)/RO}
LZ2  VX2 GNDF {RO/(2*PI*FZ2)}
 
GZ3  GNDF VZ3 VZ2 GNDF {GM}
GRZ3  VZ3 VX3 VALUE =  {V(VZ3,VX3)/RO}
LZ3  VX3 GNDF {RO/(2*PI*FZ3)}

GZ4  GNDF VZ4 VZ3 GNDF {GM}
GRZ4  VZ4 VX4 VALUE =  {V(VZ4,VX4)/RO}
LZ4  VX4 GNDF {RO/(2*PI*FZ4)}

GZ5  GNDF VO VZ4 GNDF {GM}
GRZ5  VO VX5  VALUE = {V(VO,VX5)/RO}
LZ5  VX5 GNDF {RO/(2*PI*FZ5)}

.ENDS






.SUBCKT GBW_SLEW_SE_TANH   VIP  VIM  VO_FINAL  GNDF 
+ PARAMS: AOL = 100  GBW = 1MEG  SRP = 1MEG  SRN = 1MEG IT = 1M TANHONOFF=1

.PARAM PI = 3.141592
.PARAM IP = {IF(SRP <= SRN,IT,IT*(SRP/SRN))}
.PARAM IN = {IF(SRN <= SRP,-IT,-IT*(SRN/SRP))}
.PARAM CC = {IF(SRP <= SRN,IT/SRP,IT/SRN)}
.PARAM FP = {GBW/PWR(10,AOL/20)}
.PARAM RC = {1/(2*PI*CC*FP)}
.PARAM GC = {PWR(10,AOL/20)/RC}
.PARAM VILR_MULT     = 1
.PARAM TANHONOFFINV  = {1-TANHONOFF}

G1          GNDF VO VALUE = { LIMIT ( IT * ( TANHONOFF     * TANH ( GC/IT *
+ 1/VILR_MULT * ( V(VIP) - V(VIM) ) ) +

+                                            TANHONOFFINV  *      ( GC/IT *
+ 1/VILR_MULT * ( V(VIP) - V(VIM) ) )   

+                                          ), IP, IN) }

C1          VO GNDF {CC} 
GR1          VO GNDF VALUE =  {V(VO,GNDF)/RC}
E1 VO_FINAL 0 VALUE = { VILR_MULT * V(VO,GNDF) }

.ENDS






.SUBCKT ILOAD_NEW  VDD VSS VIMON
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0,V(VIMON),0)}
G2 VSS 0 VALUE = {IF(V(VIMON) < 0,V(VIMON),0)}
.ENDS


.SUBCKT ILOAD_NEW_PD  VDD VSS VIMON PD
+ PARAMS: VON = 0.5
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0 & V(PD) < VON,V(VIMON),0)}
G2 VSS 0 VALUE = {IF(V(VIMON) < 0 & V(PD) < VON,V(VIMON),0)}
.ENDS


.SUBCKT ILOAD_NEW_EN  VDD VSS VIMON EN
+ PARAMS: VON = 0.5
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0 & V(EN) >= VON,V(VIMON),0)}
G2 VSS 0 VALUE = {IF(V(VIMON) < 0 & V(EN) >= VON,V(VIMON),0)}
.ENDS


.SUBCKT IQ  VDD VSS
+ PARAMS: VON = 0.5 IQQ = 1M  IOFF = 1P
G1 VDD VSS VALUE = {IQQ}
.ENDS


.SUBCKT IQ_PD  VDD VSS PD 
+ PARAMS: VON = 0.5 IQQ = 1M  IOFF = 1P
G1 VDD VSS VALUE = {IF(V(PD) < VON,IQQ,IOFF)}
.ENDS


.SUBCKT IQ_EN  VDD VSS EN 
+ PARAMS: VON = 0.5 IQQ = 1M  IOFF = 1P
G1 VDD VSS VALUE = {IF(V(EN) >= VON,IQQ,IOFF)}
.ENDS


.SUBCKT VCLAMP   VDD  VSS  VI  VO  GNDF PARAMS: VMAX = 0.1 VMIN = 0.1
ECLAMP  VO GNDF VALUE = {LIMIT(V(VI,GNDF),V(VDD,GNDF) - VMAX, V(VSS,GNDF) + VMIN)}
.ENDS


.SUBCKT CMR   VDD  VSS  VIP VIM  VOP VOM  GNDF 
+ PARAMS: VMAX = 0.1 VMIN = 0.1
ECLAMPP  VOP GNDF VALUE = {LIMIT(V(VIP,GNDF),V(VDD,GNDF) - VMAX, V(VSS,GNDF) + VMIN)}
ECLAMPM  VOM GNDF VALUE = {LIMIT(V(VIM,GNDF),V(VDD,GNDF) - VMAX, V(VSS,GNDF) + VMIN)}
.ENDS


.SUBCKT ZOUT_1   VI VO  GNDF
+ PARAMS: FZ1 = 1.4 FZ2 = 4.7E6  FZ3 = 91E6
+ FP1 = 212K FP2 = 3.5K FEQ = 1.4 RO = 5K
.PARAM GM = 1M
.PARAM RX = {1/GM}
.PARAM PI = 3.141592

GRI  GNDF VEQ VALUE = {V(GNDF,VEQ)/10MEG}
GRF  VIZ  VEQ VALUE = {V(VIZ,VEQ)/10MEG}
CF  VIZ  VEQ {1/(2*PI*10E6*FEQ)}
EQ  VIZ GNDF VI VEQ 100K

E0  VP0 GNDF VIZ VO 1N

GZ1  GNDF VZ1 VP0 GNDF {GM}
GRZ1  VZ1 VX1 VALUE =  {V(VZ1,VX1)/RX}
LZ1  VX1 GNDF {RX/(2*PI*FZ1)}

EP1  VP1 GNDF VZ1 GNDF 1
GRP1  VP1 VP1X VALUE =  {V(VP1,VP1X)/RX}
CP1  VP1X GNDF {1/(2*PI*RX*FP1)}

GZ2  GNDF VZ2 VP1X GNDF {GM}
GRZ2  VZ2 VX2 VALUE =  {V(VZ2,VX2)/RX}
LZ2  VX2 GNDF {RX/(2*PI*FZ2)}

EP2  VP2 GNDF  VZ2 GNDF 1
GRP2  VP2 VP2X VALUE =  {V(VP2,VP2X)/RX}
CP2  VP2X GNDF {1/(2*PI*RX*FP2)}

GZ3  GNDF VZ3 VP2X GNDF {GM}
GRZ3  VZ3 VX3 VALUE =  {V(VZ3,VX3)/RX}
LZ3  VX3 GNDF {RX/(2*PI*FZ3)}

E1   VOX GNDF VZ3 GNDF 1G

GR1   VOX VO VALUE = {V(VOX,VO)/RO}

.ENDS


.SUBCKT ZOUT_2   VI VO

VZ  VI  VO  0
RD  GNDF GNDF 1

.ENDS


.SUBCKT CMRR_NEW   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VI VO 1a GNDF 1

.ENDS




.SUBCKT PSRR_NEW2   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}

G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}


G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}



E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS



.SUBCKT PSRR_NEW   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VO VI 1a GNDF 1
C2  VDD VSS 10P


.ENDS


.SUBCKT PSRR   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

E1  VO VI VALUE = {V(1,GNDF) + V(3,GNDF)}
C3  VDD VSS 10P
.ENDS


.SUBCKT CMRR   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
E1  VI VO 1 GNDF 1
.ENDS



.SUBCKT FEMT  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS


.SUBCKT VNSE  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS


.SUBCKT INPUT   VIP  VIN  VOP  VON  GNDF PARAMS: RCM = 1  CCM = 100F  CDM = 100F
C1          VOP GNDF {CCM} 
C2          VON GNDF {CCM}
C3          VOP VON {CDM}
G1          VIP VOP VALUE =  {V(VIP,VOP)/RCM}
G2          VIN VON VALUE = {V(VIN,VON)/RCM} 
.ENDS


.SUBCKT INPUT_NEW   VIP  VIN  VOP  VON  GNDF PARAMS: RCM = 1  CCM = 100F  CDM = 100F
C1          VOP GNDF {CCM} 
C2          VON GNDF {CCM}
C3          VOP VON {CDM}
R1          VIP VOP {RCM}
R2          VIN VON {RCM} 
.ENDS












.SUBCKT OUT_CURRENT_CLAMP  IN  OUT  
+PARAMS: RSER = 1 IMAX = 10M  IMIN = 10M
GRES  IN OUT VALUE = {LIMIT(V(IN,OUT)/RSER,IMAX,-IMIN)}
.ENDS


.SUBCKT OUT_CURRENT_CLAMP_PD  IN  OUT  PD  
+PARAMS: RSER = 1 ROFF = 1G   VON = 0.5 IMAX = 10M  IMIN = 10M
GRES  IN OUT VALUE = {LIMIT(IF(V(PD) < VON,1,0)*V(IN,OUT)/RSER
+ + IF(V(PD) < VON,0,1)*V(IN,OUT)/ROFF,IMAX,-IMIN)}
.ENDS


.SUBCKT OUT_CURRENT_CLAMP_EN  IN  OUT  EN 
+PARAMS: RSER = 1 ROFF = 1G   VON = 0.5 IMAX = 10M  IMIN = 10M
GRES  IN OUT VALUE = {LIMIT(IF(V(EN) >= VON,1,0)*V(IN,OUT)/RSER
+ + IF(V(EN) >= VON,0,1)*V(IN,OUT)/ROFF,IMAX,-IMIN)}
.ENDS



.SUBCKT IBIAS VIP  VIM  VDD  VSS
+ PARAMS: IBIASP = 1e-12 IBIASN = 1e-12
IBP  VDD  VIP  {IBIASP}
IBN  VSS  VIM  {IBIASN}
.ENDS


.SUBCKT IBIAS_NEW VIP  VIM  NODE1  NODE2
+ PARAMS: IBIASP = 1e-12 IBIASN = 1e-12
IBP  VIP NODE1   {IBIASP}
IBN  VIM NODE2   {IBIASN}
.ENDS


.SUBCKT IBIAS_NEW2 VIP  VIM  NODE1  NODE2
+ PARAMS: IBIAS = 1e-11 IBIASOFFSET = 1e-12
.PARAM IBIASP = { IBIAS + IBIASOFFSET/2 }
.PARAM IBIASN = { IBIAS - IBIASOFFSET/2 }

IBP  VIP NODE1   {IBIASP}
IBN  VIM NODE2   {IBIASN}
.ENDS



