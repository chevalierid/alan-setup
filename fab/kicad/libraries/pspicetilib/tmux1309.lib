* TMUX1309
*****************************************************************************
* (C) Copyright 2020 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer.
*****************************************************************************
*
* This model is subject to change without notice. Texas Instruments
* Incorporated is not responsible for updating this model.
*
*****************************************************************************
*
** Released by: Texas Instruments Incorporated
* Part: TMUX1309
* Date: 5/11/21
* Model Type: ALL-IN-ONE
* Simulator: PSPICE
* Simulator Version: 16.2.0.p001
* EVM Order Number: N/A
* EVM Users Guide: N/A
* Datasheet: SCDS426D
* Topologies Supported: 
*
* Model Version: New model
*
*****************************************************************************
*
* Updates:
*
* Version 1.0 : New model
*
*****************************************************************************
*
* Model Usage Notes: 
* 
* 1. The following limited specs/feature set have been modeled
*    This model reflects the published specs for 1.8V, 2.5V, 3.3V, and 5.5V supply operation at room temperature (25C):
*       a. DC: On-Resistance (RON), Delta On-Resistance(ΔRON), On-Resistance Flatness (RON FLAT). 
*       b. DC: Supply Current (IDD) (note that the shoot-through current behavior due to slow or floating CMOS inputs is not modeled). (See Application Report: SCBA004)
*       c. DC: Source and Drain switch on/off leakage (IS(OFF), ID(OFF), ID(ON), IS(ON))
*       d. Transient: Break-Before-Make Timing (tBBM)
*       e. Transient: Switching Time Between Channels (tTRAN, tON(EN), tOFF(EN))
*    This model reflects the published specs for 1.8V, 3.3V, and 5.5V supply operation at room temperature (25C):
*       a. DC: Injection Current Coupling (ΔVOUT)
*    This model reflects the published specs for 3.3V supply operation at room temperature (25C):
*       a. DC: Input logic high and low (VIH, VIL)
*       b. AC: Switch Capacitance (CSON, CDON, CSOFF, CDOFF)
*       c. AC: Logic Input Capacitance (CIN)
*       d. AC: Bandwidth, Off-Isolation, and Crosstalk (BW, XTALK, OISO)
*       e. Transient: Charge Injection (QINJ)
* 2. This model may not reflect other published specs and/or features.
* 3. Temperature effects are not modeled. 
* 4. For best DC results us a "DC sweep" simulation instead of a "Transient analysis"
* 5. If convergence errors are encountered, try making simulation parameters:
*    Maximum Step Size = 1ns or 5ns
*	 Transient Pulse rise and fall = 5ns or 10ns
*
*****************************************************************************
.SUBCKT TMUX1309 S0B S2B DB S3B S1B EN NC GND A1 A0 S3A S0A DA S1A S2A VDD THERMALPAD 
V_VSS VSS GND 0Vdc
*Supply currents
X_U1    VDD GND I_VDD
*I/O diodes
X_U2    GND S0A ESD_diode
X_U3    GND S1A ESD_diode
X_U4    GND S2A ESD_diode
X_U5    GND S3A ESD_diode
X_U6    GND S0B ESD_diode
X_U7    GND S1B ESD_diode
X_U8    GND S2B ESD_diode
X_U9    GND S3B ESD_diode
X_U10    GND DA ESD_diode
X_U11    GND DB ESD_diode
*Comparators (VIH/VIL)
X_U12    VDD_L VDD VDD_NL GND COMPARATOR_VDD
X_U13    EN_L EN EN_NL GND COMPARATOR_EN
X_U14    A0_L A0 A0_NL GND COMPARATOR_A0
X_U15    A1_L A1 A1_NL GND COMPARATOR_A1
*Input delays
X_U16    VDD_NL VDD GND VDD_L Delay_VDD
R1    VDD_L  GND    50
X_U17    EN_NL VDD GND EN_L Delay_EN
R2    EN_L  GND    50
X_U18    A1_NL VDD GND A1_L Delay_A1
R3    A1_L  GND    50
X_U19    A0_NL VDD GND A0_L Delay_A0
R4    A0_L  GND    50
*LOGIC
X_U20    VDD_L EN_L A1_L A0_L SW_DA_L SW_S0A_L SW_S1A_L SW_S2A_L SW_S3A_L SW_S0ADA_L SW_S1ADA_L SW_S2ADA_L SW_S3ADA_L SW_DB_L SW_S0B_L SW_S1B_L SW_S2B_L SW_S3B_L SW_S0BDB_L SW_S1BDB_L SW_S2BDB_L SW_S3BDB_L GND LOGIC
*Output delays
X_U21    SW_DA_L VDD GND SW_DA Delay_SW_DA
X_U22    SW_S0A_L VDD GND SW_S0A Delay_SW_S0A
X_U23    SW_S1A_L VDD GND SW_S1A Delay_SW_S1A
X_U24    SW_S2A_L VDD GND SW_S2A Delay_SW_S2A
X_U25    SW_S3A_L VDD GND SW_S3A Delay_SW_S3A
X_U26    SW_S0ADA_L VDD GND SW_S0ADA Delay_SW_S0ADA
X_U27    SW_S1ADA_L VDD GND SW_S1ADA Delay_SW_S1ADA
X_U28    SW_S2ADA_L VDD GND SW_S2ADA Delay_SW_S2ADA
X_U29    SW_S3ADA_L VDD GND SW_S3ADA Delay_SW_S3ADA
X_U30    SW_DB_L VDD GND SW_DB Delay_SW_DB
X_U31    SW_S0B_L VDD GND SW_S0B Delay_SW_S0B
X_U32    SW_S1B_L VDD GND SW_S1B Delay_SW_S1B
X_U33    SW_S2B_L VDD GND SW_S2B Delay_SW_S2B
X_U34    SW_S3B_L VDD GND SW_S3B Delay_SW_S3B
X_U35    SW_S0BDB_L VDD GND SW_S0BDB Delay_SW_S0BDB
X_U36    SW_S1BDB_L VDD GND SW_S1BDB Delay_SW_S1BDB
X_U37    SW_S2BDB_L VDD GND SW_S2BDB Delay_SW_S2BDB
X_U38    SW_S3BDB_L VDD GND SW_S3BDB Delay_SW_S3BDB
*Switch I/O (COFF, CON, ION, IOFF, BW)
X_U39    DA VSS VDD SW_DA GND DA_IO
X_U40    DB VSS VDD SW_DB GND DB_IO
X_U41    S0A VSS VDD SW_S0A GND S0A_IO
X_U42    S1A VSS VDD SW_S1A GND S1A_IO
X_U43    S2A VSS VDD SW_S2A GND S2A_IO
X_U44    S3A VSS VDD SW_S3A GND S3A_IO
X_U45    S0B VSS VDD SW_S0B GND S0B_IO
X_U46    S1B VSS VDD SW_S1B GND S1B_IO
X_U47    S2B VSS VDD SW_S2B GND S2B_IO
X_U48    S3B VSS VDD SW_S3B GND S3B_IO
*Switch blocks (Ron, OISO)
X_U49    S0A DA VSS VDD GND SW_S0ADA SWITCH_S0A
X_U50    S1A DA VSS VDD GND SW_S1ADA SWITCH_S1A
X_U51    S2A DA VSS VDD GND SW_S2ADA SWITCH_S2A
X_U52    S3A DA VSS VDD GND SW_S3ADA SWITCH_S3A
X_U53    S0B DB VSS VDD GND SW_S0BDB SWITCH_S0B
X_U54    S1B DB VSS VDD GND SW_S1BDB SWITCH_S1B
X_U55    S2B DB VSS VDD GND SW_S2BDB SWITCH_S2B
X_U56    S3B DB VSS VDD GND SW_S3BDB SWITCH_S3B
*switch to switch capacitance (XTALK)
C1 S0B S2B 5.032921211719517e-14
C2 S0B S3B 5.032921211719517e-14
C3 S0B S1B 5.032921211719517e-14
C4 S0B S3A 5.032921211719517e-14
C5 S0B S0A 5.032921211719517e-14
C6 S0B S1A 5.032921211719517e-14
C7 S0B S2A 5.032921211719517e-14
C8 S2B S3B 5.032921211719517e-14
C9 S2B S1B 5.032921211719517e-14
C10 S2B S3A 5.032921211719517e-14
C11 S2B S0A 5.032921211719517e-14
C12 S2B S1A 5.032921211719517e-14
C13 S2B S2A 5.032921211719517e-14
C14 S3B S1B 5.032921211719517e-14
C15 S3B S3A 5.032921211719517e-14
C16 S3B S0A 5.032921211719517e-14
C17 S3B S1A 5.032921211719517e-14
C18 S3B S2A 5.032921211719517e-14
C19 S1B S3A 5.032921211719517e-14
C20 S1B S0A 5.032921211719517e-14
C21 S1B S1A 5.032921211719517e-14
C22 S1B S2A 5.032921211719517e-14
C23 S3A S0A 5.032921211719517e-14
C24 S3A S1A 5.032921211719517e-14
C25 S3A S2A 5.032921211719517e-14
C26 S0A S1A 5.032921211719517e-14
C27 S0A S2A 5.032921211719517e-14
C28 S1A S2A 5.032921211719517e-14
C29 DB DA 5.032921211719517e-14
*Charge injection blocks (Qc)
X_U57    S0A VSS VDD DA SW_S0ADA GND GND QC_S0A
X_U58    S1A VSS VDD DA SW_S1ADA GND GND QC_S1A
X_U59    S2A VSS VDD DA SW_S2ADA GND GND QC_S2A
X_U60    S3A VSS VDD DA SW_S3ADA GND GND QC_S3A
X_U61    S0B VSS VDD DB SW_S0BDB GND GND QC_S0B
X_U62    S1B VSS VDD DB SW_S1BDB GND GND QC_S1B
X_U63    S2B VSS VDD DB SW_S2BDB GND GND QC_S2B
X_U64    S3B VSS VDD DB SW_S3BDB GND GND QC_S3B
*Current injection blocks (Iinj)
X_U65    DA VSS VDD GND SW_DA IINJ_DA
X_U66    S0A VSS VDD GND SW_S0A IINJ_S0A
X_U67    S1A VSS VDD GND SW_S1A IINJ_S1A
X_U68    S2A VSS VDD GND SW_S2A IINJ_S2A
X_U69    S3A VSS VDD GND SW_S3A IINJ_S3A
X_U70    DB VSS VDD GND SW_DB IINJ_DB
X_U71    S0B VSS VDD GND SW_S0B IINJ_S0B
X_U72    S1B VSS VDD GND SW_S1B IINJ_S1B
X_U73    S2B VSS VDD GND SW_S2B IINJ_S2B
X_U74    S3B VSS VDD GND SW_S3B IINJ_S3B
.ENDS TMUX1309 
*$
*These circuits add a series diode that simulates an ESD diode from IN (-) to OUT (+)
*This diode will not cause a failure when IN > OUT but may show a large increase in current consumption 
*$
.SUBCKT ESD_Diode IN OUT
*
.MODEL DCLAMP D(IS=1E-15 IBV=1E-13 ISR = 1E-15)
D1 IN OUT DCLAMP
*
.ENDS
*$
*These circuits add a parallel current source/sink to simulate supply current consumption, based on the table
*
.SUBCKT I_VDD VDD GND
*
EI_VDD NVDD GND TABLE {V(VDD,GND)} = 
+ (0.0,0.0)
+ (1.5,1e-06)
+ (1.8,1e-06)
+ (2.5,1e-06)
+ (3.3,1e-06)
+ (5.0,1.2e-06)
*
GVDD VDD GND VALUE = {(V(NVDD)+1p)}
*
.ENDS
*
*These circuits compare the current state and the input voltage to find the new state
*if the current state is on (1) then we will change states if VIN goes below VIL (1 to 0)
*if the current state is on (0) then we will change states if VIN goes above VIH (0 to 1)
.SUBCKT COMPARATOR_VDD  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.399,0)
+ (1.4,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.499,0)
+ (1.5,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_EN  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.669,0)
+ (0.67,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.969,0)
+ (0.97,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_A0  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.669,0)
+ (0.67,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.969,0)
+ (0.97,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_A1  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.669,0)
+ (0.67,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.969,0)
+ (0.97,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
*These circuits handle all the logic for the device
*this does NOT handle timing delays or VIH VIL, all signals here are 1/0 logic
*VDD EN A1 A0    SW_DA SW_S0A SW_S1A SW_S2A SW_S3A SW_S0ADA SW_S1ADA SW_S2ADA SW_S3ADA SW_DB SW_S0B SW_S1B SW_S2B SW_S3B SW_S0BDB SW_S1BDB SW_S2BDB SW_S3BDB 
*1   0  0  0     1     1      0      0      0      1        0        0        0        1     1      0      0      0      1        0        0        0        
*1   0  0  1     1     0      1      0      0      0        1        0        0        1     0      1      0      0      0        1        0        0        
*1   0  1  0     1     0      0      1      0      0        0        1        0        1     0      0      1      0      0        0        1        0        
*1   0  1  1     1     0      0      0      1      0        0        0        1        1     0      0      0      1      0        0        0        1        
*$
.SUBCKT LOGIC  LVDD LEN LA1 LA0 SW_DA SW_S0A SW_S1A SW_S2A SW_S3A SW_S0ADA SW_S1ADA SW_S2ADA SW_S3ADA SW_DB SW_S0B SW_S1B SW_S2B SW_S3B SW_S0BDB SW_S1BDB SW_S2BDB SW_S3BDB GND
*
*convert analog RC to 1/0 digital
ELVDD_DIG LVDD_DIG GND VALUE = {IF (V(LVDD,GND)>0.63,1, 0) }
ELEN_DIG LEN_DIG GND VALUE = {IF (V(LEN,GND)>0.63,1, 0) }
ELA1_DIG LA1_DIG GND VALUE = {IF (V(LA1,GND)>0.63,1, 0) }
ELA0_DIG LA0_DIG GND VALUE = {IF (V(LA0,GND)>0.63,1, 0) }
*Create an inverse of all inputs in case they need to be used
ELVDD_DIGN LVDD_DIGN GND VALUE = { 1 - V(LVDD_DIG, GND)}
ELEN_DIGN LEN_DIGN GND VALUE = { 1 - V(LEN_DIG, GND)}
ELA1_DIGN LA1_DIGN GND VALUE = { 1 - V(LA1_DIG, GND)}
ELA0_DIGN LA0_DIGN GND VALUE = { 1 - V(LA0_DIG, GND)}
*
*Determine output states and rectify outputs
ELSW_DA LSW_DA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GN
+ D) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_DA SW_DA GND VALUE = { IF (V(LSW_DA, GND)>0.5,1,0) }
ELSW_S0A LSW_S0A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S0A SW_S0A GND VALUE = { IF (V(LSW_S0A, GND)>0.5,1,0) }
ELSW_S1A LSW_S1A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S1A SW_S1A GND VALUE = { IF (V(LSW_S1A, GND)>0.5,1,0) }
ELSW_S2A LSW_S2A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S2A SW_S2A GND VALUE = { IF (V(LSW_S2A, GND)>0.5,1,0) }
ELSW_S3A LSW_S3A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S3A SW_S3A GND VALUE = { IF (V(LSW_S3A, GND)>0.5,1,0) }
ELSW_S0ADA LSW_S0ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S0ADA SW_S0ADA GND VALUE = { IF (V(LSW_S0ADA, GND)>0.5,1,0) }
ELSW_S1ADA LSW_S1ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S1ADA SW_S1ADA GND VALUE = { IF (V(LSW_S1ADA, GND)>0.5,1,0) }
ELSW_S2ADA LSW_S2ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S2ADA SW_S2ADA GND VALUE = { IF (V(LSW_S2ADA, GND)>0.5,1,0) }
ELSW_S3ADA LSW_S3ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S3ADA SW_S3ADA GND VALUE = { IF (V(LSW_S3ADA, GND)>0.5,1,0) }
ELSW_DB LSW_DB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GN
+ D) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_DB SW_DB GND VALUE = { IF (V(LSW_DB, GND)>0.5,1,0) }
ELSW_S0B LSW_S0B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S0B SW_S0B GND VALUE = { IF (V(LSW_S0B, GND)>0.5,1,0) }
ELSW_S1B LSW_S1B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S1B SW_S1B GND VALUE = { IF (V(LSW_S1B, GND)>0.5,1,0) }
ELSW_S2B LSW_S2B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S2B SW_S2B GND VALUE = { IF (V(LSW_S2B, GND)>0.5,1,0) }
ELSW_S3B LSW_S3B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S3B SW_S3B GND VALUE = { IF (V(LSW_S3B, GND)>0.5,1,0) }
ELSW_S0BDB LSW_S0BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S0BDB SW_S0BDB GND VALUE = { IF (V(LSW_S0BDB, GND)>0.5,1,0) }
ELSW_S1BDB LSW_S1BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S1BDB SW_S1BDB GND VALUE = { IF (V(LSW_S1BDB, GND)>0.5,1,0) }
ELSW_S2BDB LSW_S2BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S2BDB SW_S2BDB GND VALUE = { IF (V(LSW_S2BDB, GND)>0.5,1,0) }
ELSW_S3BDB LSW_S3BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIGN,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S3BDB SW_S3BDB GND VALUE = { IF (V(LSW_S3BDB, GND)>0.5,1,0) }
*
.ENDS
*$
*These circuits add a RC delay in series to the In and OUT signal
*split delays depending on if IN is going high to low or low to high
*if IN is going high to low, the R needs to be adjusted by /0.46471 to convert the 0.37% time to 0.63%
*TON_TOFF_SUPPLY
.SUBCKT Delay_VDD  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,1.0)
+ (5.0,1.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_EN  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,14.0)
+ (2.5,0.1)
+ (3.3,0.1)
+ (5.0,0.1)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,45.1898)
+ (2.5,12.9114)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_A0  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,20.0)
+ (2.5,5.0)
+ (3.3,1.0)
+ (5.0,1.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,43.0379)
+ (2.5,10.7595)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_A1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,20.0)
+ (2.5,5.0)
+ (3.3,1.0)
+ (5.0,1.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,43.0379)
+ (2.5,10.7595)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S0A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_DA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,1.0)
+ (5.0,1.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S0B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_DB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,1.0)
+ (5.0,1.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S0ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S0BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (1.8,12.0)
+ (2.5,16.0)
+ (3.3,18.0)
+ (5.0,20.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (1.8,2.1519)
+ (2.5,2.1519)
+ (3.3,2.1519)
+ (5.0,2.1519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
.SUBCKT SWITCH_S0A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 2.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S1A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 2.0
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S2A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -2.0
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S3A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -2.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S0B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 2.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S1B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 2.0
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S2B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -2.0
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT SWITCH_S3B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -2.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P1p8m0 NRON_P1p8m0 GND TABLE {V(SX,GND)} = 
+ (0.0,117.2105484)
+ (0.0499999986667,122.4255447)
+ (0.0999999973333,128.5026703)
+ (0.149999996,135.0780945)
+ (0.199999994667,142.7222748)
+ (0.249999993333,151.32254030000001)
+ (0.299999992,161.1886902)
+ (0.349999990667,173.0013733)
+ (0.399999989333,186.7533112)
+ (0.449999988,203.3034821)
+ (0.499999986667,223.3623657)
+ (0.549999985333,247.6284485)
+ (0.599999984,277.3946228)
+ (0.649999982667,313.4040222)
+ (0.699999981333,355.9448853)
+ (0.74999998,404.944458)
+ (0.799999978667,459.224762)
+ (0.849999977333,516.0819702)
+ (0.899999976,571.2001953)
+ (0.949999974667,618.8313599)
+ (0.999999973333,649.9660645)
+ (1.049999972,651.6325684)
+ (1.09999997067,620.6708984)
+ (1.14999996933,560.411499)
+ (1.199999968,495.02008060000003)
+ (1.24999996667,442.9295349)
+ (1.29999996533,402.8550415)
+ (1.349999964,371.450531)
+ (1.39999996267,345.9535522)
+ (1.44999996133,324.8560486)
+ (1.49999996,306.812561)
+ (1.54999995867,291.4338989)
+ (1.59999995733,277.9937744)
+ (1.649999956,266.1188965)
+ (1.69999995467,255.7020264)
+ (1.74999995333,246.2155151)
+ (1.799999952,237.4682007)
ERON_P2p5m0 NRON_P2p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,84.75923157)
+ (0.05,86.88618469)
+ (0.1,89.08399963)
+ (0.15,91.4513092)
+ (0.2,94.03313446)
+ (0.25,96.72545624)
+ (0.3,99.69731903)
+ (0.35,102.8823776)
+ (0.4,106.3607559)
+ (0.45,110.1991272)
+ (0.5,114.3714523)
+ (0.55,118.8047638)
+ (0.6,123.6236801)
+ (0.65,128.3782806)
+ (0.7,133.0091858)
+ (0.75,137.4809113)
+ (0.8,141.8329773)
+ (0.85,146.2807465)
+ (0.9,151.2175598)
+ (0.95,156.7124786)
+ (1.0,162.8353729)
+ (1.05,170.020752)
+ (1.1,178.2630463)
+ (1.15,187.9944916)
+ (1.2,199.3326111)
+ (1.25,212.6686859)
+ (1.3,228.220459)
+ (1.35,245.3859863)
+ (1.4,262.4559937)
+ (1.45,276.0367432)
+ (1.5,282.7744751)
+ (1.55,281.3016357)
+ (1.6,274.2137756)
+ (1.65,264.8138733)
+ (1.7,255.1862793)
+ (1.75,246.0392456)
+ (1.8,237.7097778)
+ (1.85,229.8621368)
+ (1.9,222.8659058)
+ (1.95,216.3040009)
+ (2.0,210.4750977)
+ (2.05,204.9264374)
+ (2.1,199.8991699)
+ (2.15,195.2516785)
+ (2.2,190.7293854)
+ (2.25,186.5341034)
+ (2.3,182.6903076)
+ (2.35,179.0908661)
+ (2.4,175.7250366)
+ (2.45,172.4490814)
+ (2.5,169.3599396)
ERON_P3p3m0 NRON_P3p3m0 GND TABLE {V(SX,GND)} = 
+ (0.0,68.27867889)
+ (0.0499999992727,69.37731171)
+ (0.0999999985455,70.42456055)
+ (0.149999997818,71.57843781)
+ (0.199999997091,72.74586487)
+ (0.249999996364,73.96912384)
+ (0.299999995636,75.26594543)
+ (0.349999994909,76.61301422)
+ (0.399999994182,78.0816803)
+ (0.449999993455,79.53890228)
+ (0.499999992727,81.11814117)
+ (0.549999992,82.70001984)
+ (0.599999991273,84.28951263)
+ (0.649999990545,85.85093689)
+ (0.699999989818,87.12926483)
+ (0.749999989091,88.25125885)
+ (0.799999988364,89.31569672)
+ (0.849999987636,90.30342102)
+ (0.899999986909,91.36264038)
+ (0.949999986182,92.43456268)
+ (0.999999985455,93.56298828)
+ (1.04999998473,94.81268311)
+ (1.099999984,96.12921906)
+ (1.14999998327,97.62269592)
+ (1.19999998255,99.19225311)
+ (1.24999998182,100.9531174)
+ (1.29999998109,102.8679581)
+ (1.34999998036,104.9175262)
+ (1.39999997964,107.2095261)
+ (1.44999997891,109.7320175)
+ (1.49999997818,112.5510941)
+ (1.54999997745,115.6192627)
+ (1.59999997673,118.94104)
+ (1.649999976,122.83181)
+ (1.69999997527,127.15168)
+ (1.74999997455,132.0695343)
+ (1.79999997382,137.6079407)
+ (1.84999997309,143.9835052)
+ (1.89999997236,151.3049316)
+ (1.94999997164,159.5649414)
+ (1.99999997091,168.5187836)
+ (2.04999997018,177.2117767)
+ (2.09999996945,184.0542603)
+ (2.14999996873,187.4682617)
+ (2.199999968,187.4079437)
+ (2.24999996727,185.2210846)
+ (2.29999996655,182.3145752)
+ (2.34999996582,178.9142609)
+ (2.39999996509,175.5315704)
+ (2.44999996436,172.381424)
+ (2.49999996364,169.277298)
+ (2.54999996291,166.50914)
+ (2.59999996218,163.7217865)
+ (2.64999996145,161.100296)
+ (2.69999996073,158.6880341)
+ (2.74999996,156.2574768)
+ (2.79999995927,153.9840088)
+ (2.84999995855,151.7519684)
+ (2.89999995782,149.7160339)
+ (2.94999995709,147.7161407)
+ (2.99999995636,145.9320068)
+ (3.04999995564,144.0799103)
+ (3.09999995491,142.3932648)
+ (3.14999995418,140.5973358)
+ (3.19999995345,139.1439514)
+ (3.24999995273,137.4820557)
+ (3.299999952,135.9623871)
ERON_P5p5m0 NRON_P5p5m0 GND TABLE {V(SX,GND)} = 
+ (0.0,53.4772377)
+ (0.05,53.82852554)
+ (0.1,54.23329926)
+ (0.15,54.64315414)
+ (0.2,55.0994072)
+ (0.25,55.55940247)
+ (0.3,55.96918106)
+ (0.35,56.43362427)
+ (0.4,56.87526703)
+ (0.45,57.34343338)
+ (0.5,57.82622147)
+ (0.55,58.30046082)
+ (0.6,58.75563431)
+ (0.65,59.10673141)
+ (0.7,59.36147308)
+ (0.75,59.547966)
+ (0.8,59.73883057)
+ (0.85,59.8700676)
+ (0.9,60.02110291)
+ (0.95,60.14564133)
+ (1.0,60.35099411)
+ (1.05,60.48193741)
+ (1.1,60.68300247)
+ (1.15,60.90836334)
+ (1.2,61.18860626)
+ (1.25,61.35918427)
+ (1.3,61.62176895)
+ (1.35,61.86459351)
+ (1.4,62.18231964)
+ (1.45,62.51750946)
+ (1.5,62.8121376)
+ (1.55,63.16284943)
+ (1.6,63.56016541)
+ (1.65,63.91316223)
+ (1.7,64.33197021)
+ (1.75,64.76932526)
+ (1.8,65.19628906)
+ (1.85,65.67681122)
+ (1.9,66.19735718)
+ (1.95,66.67938995)
+ (2.0,67.22196198)
+ (2.05,67.76111603)
+ (2.1,68.40776825)
+ (2.15,69.09398651)
+ (2.2,69.72132874)
+ (2.25,70.45515442)
+ (2.3,71.19300079)
+ (2.35,72.00066376)
+ (2.4,72.81412506)
+ (2.45,73.67082977)
+ (2.5,74.61864471)
+ (2.55,75.6193924)
+ (2.6,76.63539124)
+ (2.65,77.74697876)
+ (2.7,78.98182678)
+ (2.75,80.19288635)
+ (2.8,81.53418732)
+ (2.85,82.96887207)
+ (2.9,84.53351593)
+ (2.95,86.24358368)
+ (3.0,88.10348511)
+ (3.05,90.10149384)
+ (3.1,92.23232269)
+ (3.15,94.70934296)
+ (3.2,97.36585236)
+ (3.25,100.3350067)
+ (3.3,103.6489639)
+ (3.35,107.3477859)
+ (3.4,111.4410172)
+ (3.45,115.7230606)
+ (3.5,119.8621063)
+ (3.55,123.2364655)
+ (3.6,125.0678864)
+ (3.65,125.6411591)
+ (3.7,125.2571335)
+ (3.75,124.5286713)
+ (3.8,123.6154099)
+ (3.85,122.6406937)
+ (3.9,121.643013)
+ (3.95,120.656723)
+ (4.0,119.7309647)
+ (4.05,118.8254776)
+ (4.1,117.9407196)
+ (4.15,117.0502777)
+ (4.2,116.2224579)
+ (4.25,115.3821335)
+ (4.3,114.59729)
+ (4.35,113.7874222)
+ (4.4,113.0285416)
+ (4.45,112.3550339)
+ (4.5,111.6261978)
+ (4.55,110.8928146)
+ (4.6,110.202919)
+ (4.65,109.5447617)
+ (4.7,108.9553452)
+ (4.75,108.311882)
+ (4.8,107.6578217)
+ (4.85,107.0825195)
+ (4.9,106.4921112)
+ (4.95,105.9005203)
+ (5.0,105.3424759)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 1.8, V(NRON_P1p8m0) - Ron_offset,
+ IF (V(VDD,GND) <= 2.5, V(NRON_P2p5m0) - Ron_offset,
+ IF (V(VDD,GND) <= 3.3, V(NRON_P3p3m0) - Ron_offset,
+ IF (V(VDD,GND) <= 5.5, V(NRON_P5p5m0) - Ron_offset,
+ 50e15 )))),
+ 50e15 
+ ))) }
*ROFF modeled as a current depending on S to D voltage
EROFF NROFF GND TABLE {V(VDD,GND)} = 
+ (1.8,89484570.89472722)
+ (3.3,6222887.494019233)
+ (5.0,3840249.858780104)
GROFF SX DX VALUE = {V(SX,DX)/(
+ IF (V(SX,GND) > V(VDD,GND), V(NROFF),
+ IF (V(SX,GND) < 0, V(NROFF),
+ 50e15) ))}
*
.ENDS
*$
.SUBCKT QC_S0A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.62,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S1A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S2A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S3A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S0B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S1B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S2B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S3B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 2pF
C2 DX QC_mid 2pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0.0,6.25)
+ (1.4,6.25)
+ (1.5,12.5)
+ (1.65,17.5)
+ (1.7,52.5)
+ (1.8,80.0)
+ (2.0,110.0)
+ (2.25,140.0)
+ (2.4,165.0)
+ (2.5,190.0)
+ (2.75,200.0)
+ (3.0,210.0)
+ (3.3,220.0)
+ (3.7,225.0)
+ (4.0,230.0)
+ (4.4,235.0)
+ (4.8,238.0)
+ (5.0,240.0)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT DA_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,1e-09)
+ (1.8,8.33e-10)
+ (2.5,7.69e-10)
+ (3.3,6.55e-10)
+ (5.0,5.01e-10)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT DB_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,1e-09)
+ (1.8,8.33e-10)
+ (2.5,7.69e-10)
+ (3.3,6.55e-10)
+ (5.0,5.01e-10)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S0A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S1A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S2A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S3A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S0B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S1B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S2B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S3B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 0.001p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 1.0817105958931956p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0.0,-1e-14)
+ (1.5,-1e-09)
+ (5.0,-1e-09)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0.0,1e-14)
+ (1.5,3.9999999999999996e-10)
+ (1.8,3.9999999999999996e-10)
+ (2.5,3.6e-10)
+ (3.3,3.31e-10)
+ (5.0,2.3e-10)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT IINJ_DA IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S0A IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S1A IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S2A IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S3A IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_DB IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S0B IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S1B IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S2B IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
.SUBCKT IINJ_S3B IN VSS VDD GND SWx
*
SW_LOGIC IN SWVDD_IN SWx GND  SWLOGIC
SW_VDD SWVDD_IN GND IN VDD SWVDD
.MODEL SWLOGIC VSWITCH Roff=1e10 Ron=0.01 Voff=0.63V Von=0.37V
.MODEL SWVDD VSWITCH Roff=1e10 Ron=0.01 Voff=0.4V Von=0.7V
*
.ENDS
*$
