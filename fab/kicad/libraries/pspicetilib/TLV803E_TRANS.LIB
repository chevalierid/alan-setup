*$
* TLV803E
*****************************************************************************
* (C) Copyright 2019 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer
*****************************************************************************
*
* This model is subject to change without notice. Texas Instruments
* Incorporated is not responsible for updating this model.
*
*****************************************************************************
*
** Released by: Texas Instruments Inc.
* Part: TLV803E
* Date: 09MAY2019
* Model Type: TRANSIENT 
* Simulator: PSPICE
* Simulator Version: 16.2.0.p001
* EVM Order Number: NA
* EVM Users Guide: NA
* Datasheet: SLVSES2 â€“AUGUST 2018
* Topologies Supported: NA
* Model Version: Final 1.00
*
*****************************************************************************
*
* Updates:
*
* Final 1.00
* Release to Web.
*
*****************************************************************************
*
* Model Usage Notes:
* 1. The following features have been modeled
*      a. Supply Current
*      b. Glitch Immunity
*      c. Reset Timeout Period
*      d. Propagation Delay from VDD to RESET pin
* 2. The following features have been not been modeled
*      a. Temperature Effects
*      b. Operating Quiescent Current
*      c. Thermal Shutdown Characteristics
*
*****************************************************************************
.SUBCKT TLV803E_TRANS GND RESET_N VDD  
X_U75         VDD_VALID VDD_VALID_N INV_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=500E-3
V_V4         N16806695 0 2.965
R_R11         N167719461 N127629  1  
X_U76         VDD_INT N16806695 N16807226 OUT1 COMPHYS_BASIC_GEN PARAMS: VDD=1
+  VSS=0 VTHRESH=0.5
E_ABM7         N167719461 0 VALUE { LIMIT((((V(VDD_INT)/2.93)-1)*(-100)),5,40) 
+    }
R_R15         N127973 N128055  1  
X_U74         OUT1 VDD_VALID COMP_OUT AND2_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=500E-3
C_C15         0 N147006  1n  
G_ABMII4         VDD 0 VALUE { IF(V(VDD) < 0, 0, (IF(V(VDD) < 1.67,
+  V(VDD)*95.8n, (718.42624188p*pwr(V(VDD),6) - 15.698560357n*pwr(V(VDD),5) +
+  135.80115682n*pwr(V(VDD),4) - 588.14854992n*pwr(V(VDD),3) +
+  1.3232903035u*pwr(V(VDD),2) - 1.3917813989u*V(VDD) + 663.26975234n))))    }
R_R23         N435029 RESET_CTRL_BAR  288.54k  
E_GAIN2         VDD_INT 0 VALUE {1 * V(VDD)}
X_U72         N147006 N16780215 BUF_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
X_S8    N16780215 0 RESET_N 0 TLV803E_TOPLEVEL_S8 
C_C12         0 TIMER_RAMP  1.99  
C_C25         0 RESET_CTRL_BAR  1u  
R_R16         N146088 N147006  1  
G_ABMII2         N127479 TIMER_RAMP VALUE { 1/V(N128055)    }
V_V3         N194185 0 0.41
C_C26         0 N192225  1.42u  
X_U71         OVDRIVE_N OVDRIVE INV_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=500E-3
D_D6         TIMER_RAMP N127479 D_D1 
D_D5         N192225 RESET_CTRL D_D1special 
D_D3         RESET_CTRL_BAR N435029 D_D1special 
C_C14         0 N128055  1n  
X_S6    COMP_OUT 0 TIMER_RAMP 0 TLV803E_TOPLEVEL_S6 
C_C11         0 N127629  1n  
E_ABM15         N146088 0 VALUE { IF(V(VDD_VALID)<0.5,0,V(N192225))    }
R_R24         RESET_CTRL N192225  20  
X_U73         TIMER_RAMP OVDRIVE_N INV_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=500E-3
X_U70         VDD_INT N194185 VDD_VALID COMP_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=0.5
X_U69         RESET_CTRL_BAR RESET_CTRL INV_BASIC_GEN PARAMS: VDD=1 VSS=0
+  VTHRESH=500E-3
E_ABM16         N127973 0 VALUE { (236.354326005366000000f*pwr(V(N127629),6) -
+  35.3543659625746000000p*pwr(V(N127629),5) +
+  2.05924218553884000000n*pwr(V(N127629),4) -
+  59.0592255484256000000n*pwr(V(N127629),3) +
+  874.111287605116000000n*pwr(V(N127629),2) - 6.58946600018344000000u*V(N127629)
+  + 29.2903225452625000000u)    }
V_V7         N127479 0 1
X_S7    VDD_VALID_N N127917 TIMER_RAMP N127917 TLV803E_TOPLEVEL_S7 
V_V5         N16807226 0 35m
R_R2         0 GND  1  
E_GAIN1         N435029 0 VALUE {1 * V(OVDRIVE_N)}
V_V6         N127917 0 1
.ENDS TLV803E_TRANS
*$
.subckt TLV803E_TOPLEVEL_S8 1 2 3 4  
S_S8         3 4 1 2 _S8
RS_S8         1 2 1G
.MODEL         _S8 VSWITCH Roff=60e6 Ron=100 Voff=0.2 Von=0.8
.ends TLV803E_TOPLEVEL_S8
*$
.subckt TLV803E_TOPLEVEL_S6 1 2 3 4  
S_S6         3 4 1 2 _S6
RS_S6         1 2 1G
.MODEL         _S6 VSWITCH Roff=100e6 Ron=1f Voff=0.2 Von=0.8
.ends TLV803E_TOPLEVEL_S6
*$
.subckt TLV803E_TOPLEVEL_S7 1 2 3 4  
S_S7         3 4 1 2 _S7
RS_S7         1 2 1G
.MODEL         _S7 VSWITCH Roff=100e6 Ron=0.1 Voff=0.2 Von=0.8
.ends TLV803E_TOPLEVEL_S7
*$
.model D_D1 d
+ is=1e-015
+ tt=1e-011
+ rs=0.05
+ n=0.1
*$
.MODEL D_D1special D( IS=1e-15 TT=10p Rs=0.05 N=.01  )
*$
.SUBCKT INV_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS INV_BASIC_GEN
*$
.SUBCKT COMPHYS_BASIC_GEN INP INM HYS OUT PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
EIN INP1 INM1 INP INM 1 
EHYS INP1 INP2 VALUE { IF( V(1) > {VTHRESH},-V(HYS),0) }
EOUT OUT 0 VALUE { IF( V(INP2)>V(INM1), {VDD} ,{VSS}) }
R1 OUT 1 1
C1 1 0 5n
RINP1 INP1 0 1K
.ENDS COMPHYS_BASIC_GEN
*$
.SUBCKT AND2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS AND2_BASIC_GEN
*$
.SUBCKT BUF_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS BUF_BASIC_GEN
*$
.SUBCKT COMP_BASIC_GEN INP INM Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
E_ABM Yint 0 VALUE {IF (V(INP) > 
+ V(INM), {VDD},{VSS})}
R1 Yint Y 1
C1 Y 0 1n
.ENDS COMP_BASIC_GEN
*$
