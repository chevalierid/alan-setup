* LMH6401
*****************************************************************************
* (C) Copyright 2015 Texas Instruments Incorporated. All rights reserved.
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer.
*****************************************************************************
*
** Released by: WEBENCH(R) Design Center, Texas Instruments Inc.
* Part: LMH6401
* Date: 05/04/2015 
* Model Type: All In One
* Simulator: TINA
* Simulator Version: 9.3.50.40 SF-TI
* EVM Order Number: N/A 
* EVM Users Guide:  N/A 
* Datasheet: SBOS730A –APRIL 2015–REVISED APRIL 2015
*
* Model Version: 1.0
*
*****************************************************************************
*
* Updates:
*
* Version 1.0 : Release to Web
*
*****************************************************************************
* Notes:
* The following parameters are modeled: 
* Frequency Response, Gain Parameters, Noise, Input Voltage Range, 
* Output Voltage Range, CMRR, Input Resistance, Output Resistance, 
* Quiescent Current, Supply Voltage Range, Power Down Current    
*
*****************************************************************************



.subckt LMH6401 B0 B1 B2 B3 B4 B5 INM INP OUTM OUTP PD VCC VEE VOCM
XI0 B0 B1 B2 B3 B4 B5 INM INP OUTM OUTP PD VCC VEE VOCM LMH6401_HT1
.ends







.subckt BALUN V VCM VN VP
R9 V NET023 1e-6
R4 NET035 VCM 1e-6
R5 NET023 NET016 1e-6
R3 NET027 VN 1e-6
R6 0 NET021 1e-6
R7 NET023 NET019 1e-6
R8 0 NET017 1e-6
R1 NET022 VP 1e-6
XTRANSFORMEREK0 NET016 NET021 NET022 NET035 TRANSFORMEREK0
XTRANSFORMEREK1 NET019 NET017 NET035 NET027 TRANSFORMEREK1
.ends BALUN


.subckt LMH6401_NOISE_HT1 G21DB G22DB G23DB G24DB G25DB G26DB VIN VOUT
XI6 NET27 VOUT G21DB LMH6401_SWITCHIDEAL_HT1
XI5 NET29 VOUT G24DB LMH6401_SWITCHIDEAL_HT1
XI4 NET31 VOUT G25DB LMH6401_SWITCHIDEAL_HT1
XI3 NET33 VOUT G22DB LMH6401_SWITCHIDEAL_HT1
XI2 NET35 VOUT G23DB LMH6401_SWITCHIDEAL_HT1
XI0 NET37 VOUT G26DB LMH6401_SWITCHIDEAL_HT1
R9 VIN NET33 121
R10 VIN NET31 113.6
R12 VIN NET27 121.5
R11 VIN NET29 116.8
R8 VIN NET35 119.5
R0 VIN NET37 109.5
.ends LMH6401_NOISE_HT1


.subckt LMH6401_SUPPLYRANGE_HT1 PD PD_INT VCC VEE
V1 NET5 0 1.99
V3 NET7 0 3.99
V5 NET9 0 5.26
XAHDLI12 NET40 NET35 NET13 VCC VEE HPA_OR2
XAHDLI11 NET30 PD NET18 VCC VEE HPA_OR2
XAHDLI10 NET13 NET18 PD_INT VCC VEE HPA_OR2
XAHDLI13 NET5 VCC NET30 VCC VEE HPA_COMP
XAHDLI15 NET7 VCCVEE NET35 VCC VEE HPA_COMP
XAHDLI18 VCCVEE NET9 NET40 VCC VEE HPA_COMP
E0 VCCVEE 0 VCC VEE 1
.ends LMH6401_SUPPLYRANGE_HT1


.subckt LMH6401_FDA_VINRANGE_HT1 VCC VEE VIN VOUT
R0 VIN NET011 1e-3
DIL NET9 NET011 Vinrange_DIDEAL
DIH NET011 NET8 Vinrange_DIDEAL
V0 NET011 VOUT 0
VIL NET9 VEE 1.5
VIH VCC NET8 1.5
.ends LMH6401_FDA_VINRANGE_HT1


.subckt LMH6401_FDA_ZIN_HT1 IN1 IN2 OUT1 OUT2
C3 OUT1 OUT2 1e-15
C2 OUT2 0 1e-15
C1 0 OUT1 1e-15
R2 IN2 OUT2 100e-3
R1 IN1 OUT1 100e-3
R3 OUT1 OUT2 1e9
.ends LMH6401_FDA_ZIN_HT1


.subckt LMH6401_FDA_CMFB_VINRANGE_HT1 VCC VEE VIH VIL VIN VOUT
R0 VIN NET011 1e-3
DVIL VIL NET011 Cmfb_Vinrange_DIDEAL
DVIH NET011 VIH Cmfb_Vinrange_DIDEAL
V0 NET011 VOUT 0
VVIL VIL VEE 0
VVIH VCC VIH 0
.ends LMH6401_FDA_CMFB_VINRANGE_HT1


.subckt LMH6401_FDA_CMFB_HT1 PD VCC VEE VOCM VOUT VOUTM VOUTP
XAHDLI44 PD CMFBVIHVILSIGNAL NET043 VCC VEE HPA_AND2
XI5 NET026 NET8 0 VOUT NET043 VCC VEE LMH6401_FDA_Cmfb_GmItail_HT1
XAHDLINV0 NET055 CMFBVIHVILSIGNAL VCC VEE HPA_INV
XAHDLI41 NET026 NET047 NET031 VCC VEE HPA_COMP_IDEAL
XAHDLI42 NET050 NET026 NET036 VCC VEE HPA_COMP_IDEAL
XAHDLI43 NET031 NET036 NET055 VCC VEE HPA_OR2
V22 VIH NET047 10e-3
VCMFBOFFSET NET029 VOCM 2e-3
V23 NET050 VIL 10e-3
ICMFBINBIAS 0 VOCM 1e-15
XI1 VCC VEE VIH VIL NET029 NET026 LMH6401_FDA_CMFB_VINRANGE_HT1
CCMFBIN VOCM 0 1.2e-12
CCMFB VOUT 0 1e-15
RCMFB VOUT 0 2e6
RCMFBIN1 VCC VOCM 93.6e3
RCMFBIN2 VEE VOCM 94.4e3
RCMFBAVG2 VOUTM NET8 1e6
RCMFBAVG1 VOUTP NET8 1e6
.ends LMH6401_FDA_CMFB_HT1


.subckt ANALOG_BUFFER VOUT VIN
R0 VIN 0 1e9
R1 VOUT 0 1e9
E0 VOUT 0 VIN 0 1
.ends ANALOG_BUFFER


.subckt LMH6401_FDA_OUTPUTCIR_HT1 PD VCC VCCMAIN VEE VEEMAIN VIN VOUT
XI6 NET22 NET053 0 NET043 VCC VEE RECOVERYSIGNAL LMH6401_FDA_OutputCir_RecoveryAssist_HT1
XAHDLI43 NET055 NET054 RECOVERYSIGNAL VCC VEE HPA_OR2
XAHDLI41 VOUT NET067 NET055 VCC VEE HPA_COMP_IDEAL
XAHDLI42 NET059 VOUT NET054 VCC VEE HPA_COMP_IDEAL
HVIMON VIMON 0 VCURSOURCEDETECT  1
RVIMON VIMON 0 1e9
RISC NET092 NET15 100e-3
ROUTMINOR NET053 NET17 1
XI11 NET76 NET15 ANALOG_BUFFER
XI2 NET22 VIN ANALOG_BUFFER
DVOL VOL NET15 OutputCir_VOHVOL_DIDEAL
DVOH NET15 VOH OutputCir_VOHVOL_DIDEAL
DISOURCE NET092 NET75 OutputCir_Isc_DIDEAL
DISINK NET76 NET79 OutputCir_Isc_DIDEAL
VPROBE2 NET043 NET053 0
VTRIGGERVOL NET059 VOL 10e-3
VTRIGGERVOH VOH NET067 10e-3
VVOL NET31 VEE 1
VCURSOURCEDETECT NET15 NET34 0
VCURSINKDETECT VOUT NET34 0
VVOH VCC NET41 1
VPROBE1 NET53 NET17 0
HVOH NET41 VOH POLY(1) Vcursourcedetect  0  1e-9  0  0  1e-9  0  0  0  0  0  1e-9
HVOL VOL NET31 POLY(1) Vcursinkdetect  0  1e-9  0  0  1e-9  0  0  0  0  0  1e-9
XI0 VCCMAIN VEEMAIN VIMON PD LMH6401_FDA_OutputCir_ILOAD_HT1
LOUT NET17 NET092 100e-12
COUT NET22 NET053 1e-12
XI1 NET53 NET22 VIMON LMH6401_FDA_OutputCir_Rout_HT1
EISOURCE NET75 NET76 POLY(1) VCC VEE  15e-3  0
EISINK NET79 NET092 POLY(1) VCC VEE  15e-3  0
.ends LMH6401_FDA_OUTPUTCIR_HT1


.subckt LMH6401_FDA_NONDOMPOLE_HT1 VIN VOUT
XI23 NET4 VIN ANALOG_BUFFER
C1 VOUT 0 35e-12
R1 VOUT NET4 1
.ends LMH6401_FDA_NONDOMPOLE_HT1


.subckt LMH6401_FDA_RECOVERYCIRCUIT_HT1 A B VCC VEE
DRECL NET9 NET014 RecoveryCircuit_DIDEAL
DRECH NET014 NET8 RecoveryCircuit_DIDEAL
VBRIDGE NET014 A 0
VPROBE A B 0
VRECL NET9 VEE -100
VRECH VCC NET8 -100
.ends LMH6401_FDA_RECOVERYCIRCUIT_HT1


.subckt LMH6401_FDA_DOMPOLE_HT1 A B
R0 B A 15.1e3
C0 A 0 800e-15
.ends LMH6401_FDA_DOMPOLE_HT1


.subckt LMH6401_FDA_HT1 VOUTM VOUTP VOCM VINP VEE VCC PD VINM
XI21 NET048 NET047 LMH6401_FDA_CMRR_HT1
XI19 VCC_INT VEE_INT NET054 NET048 LMH6401_FDA_PSRR_HT1
XI18 NET050 NET054 LMH6401_FDA_Inoise_HT1
XI17 NET055 NET050 LMH6401_FDA_Vnoise_HT1
IBIASM NET049 0 1e-6
IBIASP NET045 0 1e-6
XI25 VCC_INT VEE_INT NET047 NET045 LMH6401_FDA_VINRANGE_HT1
XI24 VCC_INT VEE_INT NET0112 NET049 LMH6401_FDA_VINRANGE_HT1
XI33 VINM VINP NET055 NET054 LMH6401_FDA_ZIN_HT1
XI43 NET045 NET049 NET058 NET40 VEE_INT VCC_INT POWER LMH6401_FDA_GmItail_HT1
R0 VEE_INT PD 10e6
XAHDLINV3 PD POWER VCC_INT VEE_INT HPA_INV_IDEAL
XI40 VCC VEE POWER VEE_INT VCC_INT LMH6401_FDA_Iq_HT1
XI32 POWER VCC_INT VEE_INT VOCM NET10 VOUTM_INT VOUTP_INT LMH6401_FDA_CMFB_HT1
XI31 POWER VCC_INT VCC VEE_INT VEE NET0105 VOUTM_INT LMH6401_FDA_OUTPUTCIR_HT1
XI30 POWER VCC_INT VCC VEE_INT VEE NET062 VOUTP_INT LMH6401_FDA_OUTPUTCIR_HT1
XI26 NET057 NET062 LMH6401_FDA_NONDOMPOLE_HT1
XI27 NET061 NET0105 LMH6401_FDA_NONDOMPOLE_HT1
XI29 NET0124 NET061 VCC_INT VEE_INT LMH6401_FDA_RECOVERYCIRCUIT_HT1
XI28 NET0122 NET057 VCC_INT VEE_INT LMH6401_FDA_RECOVERYCIRCUIT_HT1
XI16 NET34 NET10 LMH6401_FDA_DOMPOLE_HT1
XI11 NET20 NET10 LMH6401_FDA_DOMPOLE_HT1
VPROBE3A VOUTP_INT VOUTP 0
VPROBE3B VOUTM_INT VOUTM 0
VINOFFSET NET050 NET0112 100e-6
VPROBE1A NET40 NET20
VPROBE2A NET20 NET0122
VPROBE2B NET34 NET0124
VPROBE1B NET058 NET34
XI12 VCC_INT VCC ANALOG_BUFFER
XI13 VEE_INT VEE ANALOG_BUFFER
.ends LMH6401_FDA_HT1


.subckt LMH6401_ATT_HT1 B0DB B6DB B12DB B18DB B25DB B26DB B27DB B24252627DB VBIAS VIN VOUT
XI29 VIN NET0105 NET065 NET069 NET0118 VOUT B0DB B6DB B12DB B18DB B24252627DB LMH6401_ATT_LOGIC_HT1
XI13 NET020 NET0118 B27DB LMH6401_SWITCHIDEAL_HT1
XI0 NET023 NET0118 B25DB LMH6401_SWITCHIDEAL_HT1
XI11 NET017 NET0118 B26DB LMH6401_SWITCHIDEAL_HT1
R7 VBIAS NET023 136
R2 VBIAS NET017 64.3
R5 VBIAS NET020 40.3
R4 VIN NET0105 25
R3 VBIAS NET0105 50
R10 NET0105 NET065 25
R11 NET069 NET0118 25
R14 NET065 NET069 25
R9 VBIAS NET065 50
R13 VBIAS NET069 50
R12 VBIAS NET0118 25
.ends LMH6401_ATT_HT1


.subckt LMH6401_HT1 B0 B1 B2 B3 B4 B5 INM INP OUTM OUTP PD VCC VEE VOCM
XAHDLI23 PD NET053 NET084 0 VCC VEE DIGLEVSHIFT
XI22 G21DB G22DB G23DB G24DB G25DB G26DB VINT1B NET059 LMH6401_NOISE_HT1
XI21 G21DB G22DB G23DB G24DB G25DB G26DB VINT1A NET051 LMH6401_NOISE_HT1
XI20 NET053 PD_INT VCC VEE LMH6401_SUPPLYRANGE_HT1
XI5 NET051 NET050 G26DB G25DB VOCM G24DB G23DB G22DB G21DB LMH6401_GAIN_HT1
XI6 NET059 NET058 G26DB G25DB VOCM G24DB G23DB G22DB G21DB LMH6401_GAIN_HT1
XI7 B6DB B18DB B24252627DB B5 B4 B3 B2 B1 B0 B25DB G23DB G22DB G24DB G25DB G26DB
+ NET084 G21DB 0 B26DB B27DB B12DB B0DB LMH6401_LOGIC_HT1

R0 NET050 VINT3A 7.51781
R4 NET058 VINT3B 7.51781
R2 NET085 OUTM 10
R3 NET087 OUTP 10
R10 VINT3B NET085 151.3
R5 VINT3A NET087 151.3
V0 NET084 0 2.39
V4 NET039 VINT3A 0
V2 NET041 VINT3B 0
XI0 NET085 NET087 VOCM NET041 VEE VCC PD_INT NET039 LMH6401_FDA_HT1
XI3 B0DB B6DB B12DB B18DB B25DB B26DB B27DB B24252627DB VOCM INM VINT1A LMH6401_ATT_HT1
XI1 B0DB B6DB B12DB B18DB B25DB B26DB B27DB B24252627DB VOCM INP VINT1B LMH6401_ATT_HT1
.ends LMH6401_HT1




.SUBCKT HPA_OR2 1 2 3 VDD VSS
E1 4 0 VALUE = { IF( ((V(1)< (V(VDD)+V(VSS))/2 ) & (V(2)< (V(VDD)+V(VSS))/2 )), V(VSS), V(VDD) ) }
R1 4 3 1
C1 3 0 1e-12
.ENDS


.SUBCKT HPA_AND2 1 2 3 VDD VSS
E1 4 0 VALUE = { IF( ((V(1)> (V(VDD)+V(VSS))/2 ) & (V(2)> (V(VDD)+V(VSS))/2 )), V(VDD), V(VSS) ) }
R1 4 3 1
C1 3 0 1e-12
.ENDS


.SUBCKT HPA_INV 1 2 VDD VSS
E1 3 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
R1 3 2 1
C1 2 0 1e-12
.ENDS


.SUBCKT HPA_INV_IDEAL 1 2 VDD VSS
E1 2 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
.ENDS


.SUBCKT DIGLEVSHIFT 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) < (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1e-12
.ENDS


.SUBCKT HPA_COMP INP INN OUT VDD VSS
E1 4 0 VALUE = { IF( (V(INP) > V(INN)), V(VDD), V(VSS) ) }
R1 4 OUT 1
C1 OUT 0 1e-12
.ENDS


.SUBCKT HPA_COMP_IDEAL INP INN OUT VDD VSS
E1 OUT 0 VALUE = { IF( (V(INP) > V(INN)), V(VDD), V(VSS) ) }
.ENDS
*
.SUBCKT TRANSFORMEREK0 1 2 3 4
K1 L1 L2 0.5
L1 1 2 10uH
L2 3 4 10uH
.ends
*
.SUBCKT TRANSFORMEREK1 1 2 3 4
K1 L1 L2 0.5
L1 1 2 10uH
L2 3 4 10uH
.ends
*
.SUBCKT LMH6401_LOGIC_HT1 
+ B6dB B18dB B24252627dB B5 B4 B3 B2 B1 B0 
+ B25dB G23dB G22dB G24dB G25dB G26dB VDD G21dB 
+ VSS B26dB B27dB B12dB B0dB
*
X05 B5 B5inv VDD VSS LMH6401_INV_HT1
X04 B4 B4inv VDD VSS LMH6401_INV_HT1
X03 B3 B3inv VDD VSS LMH6401_INV_HT1
X02 B2 B2inv VDD VSS LMH6401_INV_HT1
X01 B1 B1inv VDD VSS LMH6401_INV_HT1
X00 B0 B0inv VDD VSS LMH6401_INV_HT1
*
XB5invB4invB3invB2invB1invB0   B5inv B4inv B3inv B2inv B1inv B0  
+ B5invB4invB3invB2invB1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2invB1B0   B5inv B4inv B3inv B2inv B1 B0  
+ B5invB4invB3invB2invB1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2B1invB0inv   B5inv B4inv B3inv B2 B1inv B0inv  
+ B5invB4invB3invB2B1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2invB1invB0inv   B5inv B4inv B3inv B2inv B1inv B0inv  
+ B5invB4invB3invB2invB1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2invB1B0inv  B5inv B4inv B3inv B2inv B1 B0inv  
+ B5invB4invB3invB2invB1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2B1invB0  B5inv B4inv B3inv B2 B1inv B0
+ B5invB4invB3invB2B1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2B1B0  B5inv B4inv B3inv B2 B1 B0  
+ B5invB4invB3invB2B1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2invB1invB0   B5inv B4inv B3 B2inv B1inv B0  
+ B5invB4invB3B2invB1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3invB2B1B0inv  B5inv B4inv B3inv B2 B1 B0inv  
+ B5invB4invB3invB2B1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2invB1invB0inv   B5inv B4inv B3 B2inv B1inv B0inv  
+ B5invB4invB3B2invB1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2invB1B0inv   B5inv B4inv B3 B2inv B1 B0inv  
+ B5invB4invB3B2invB1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2invB1B0  B5inv B4inv B3 B2inv B1 B0
+ B5invB4invB3B2invB1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2B1invB0   B5inv B4inv B3 B2 B1inv B0  
+ B5invB4invB3B2B1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2B1B0  B5inv B4inv B3 B2 B1 B0  
+ B5invB4invB3B2B1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2B1invB0inv  B5inv B4inv B3 B2 B1inv B0inv  
+ B5invB4invB3B2B1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4invB3B2B1B0inv  B5inv B4inv B3 B2 B1 B0inv  
+ B5invB4invB3B2B1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2invB1invB0inv  B5inv B4 B3inv B2inv B1inv B0inv  
+ B5invB4B3invB2invB1invB0inv  VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2invB1invB0  B5inv B4 B3inv B2inv B1inv B0
+ B5invB4B3invB2invB1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2B1invB0   B5inv B4 B3inv B2 B1inv B0  
+ B5invB4B3invB2B1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2invB1B0   B5inv B4 B3inv B2inv B1 B0  
+ B5invB4B3invB2invB1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2B1invB0inv  B5inv B4 B3inv B2 B1inv B0inv  
+ B5invB4B3invB2B1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2B1B0inv  B5inv B4 B3inv B2 B1 B0inv  
+ B5invB4B3invB2B1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2invB1B0inv   B5inv B4 B3inv B2inv B1 B0inv  
+ B5invB4B3invB2invB1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3invB2B1B0  B5inv B4 B3inv B2 B1 B0
+ B5invB4B3invB2B1B0 VDD VSS LMH6401_AND6_HT1
*
XB5B4invB3invB2invB1invB0inv   B5 B4inv B3inv B2inv B1inv B0inv  
+ B5B4invB3invB2invB1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2invB1invB0  B5inv B4 B3 B2inv B1inv B0  
+ B5invB4B3B2invB1invB0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2invB1B0  B5inv B4 B3 B2inv B1 B0  
+ B5invB4B3B2invB1B0 VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2B1invB0inv   B5inv B4 B3 B2 B1inv B0inv  
+ B5invB4B3B2B1invB0inv  VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2invB1invB0inv  B5inv B4 B3 B2inv B1inv B0inv  
+ B5invB4B3B2invB1invB0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2invB1B0inv  B5inv B4 B3 B2inv B1 B0inv  
+ B5invB4B3B2invB1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2B1B0inv   B5inv B4 B3 B2 B1 B0inv  
+ B5invB4B3B2B1B0inv VDD VSS LMH6401_AND6_HT1
*
XB5invB4B3B2B0  B5inv B4 B3 B2 B0
+ B5invB4B3B2B0 VDD VSS LMH6401_AND5_HT1
*
XB5invB4B3B2B1B0  B5inv B4 B3 B2 B1 B0
+ B5invB4B3B2B1B0 VDD VSS LMH6401_AND6_HT1
*
XB0dB  B5invB4invB3invB2invB1invB0 
+ B5invB4invB3invB2invB1B0 
+ B5invB4invB3invB2B1invB0inv 
+ B5invB4invB3invB2invB1invB0inv 
+ B5invB4invB3invB2invB1B0inv 
+ B5invB4invB3invB2B1invB0 B0dB_int VDD VSS LMH6401_OR6_HT1
*
XB6dB  B5invB4invB3invB2B1B0 
+ B5invB4invB3B2invB1invB0 
+ B5invB4invB3invB2B1B0inv 
+ B5invB4invB3B2invB1invB0inv 
+ B5invB4invB3B2invB1B0inv 
+ B5invB4invB3B2invB1B0 B6dB_int VDD VSS LMH6401_OR6_HT1
*
XB12dB  B5invB4invB3B2B1invB0 
+ B5invB4invB3B2B1B0 
+ B5invB4invB3B2B1invB0inv 
+ B5invB4invB3B2B1B0inv 
+ B5invB4B3invB2invB1invB0inv 
+ B5invB4B3invB2invB1invB0 B12dB_int VDD VSS LMH6401_OR6_HT1
*
XB18dB  B5invB4B3invB2B1invB0 
+ B5invB4B3invB2invB1B0 
+ B5invB4B3invB2B1invB0inv 
+ B5invB4B3invB2B1B0inv 
+ B5invB4B3invB2invB1B0inv 
+ B5invB4B3invB2B1B0 B18dB_int VDD VSS LMH6401_OR6_HT1
*
XB24252627dB  B5
+ B5invB4B3B2invB1invB0 
+ B5invB4B3B2invB1B0 
+ B5invB4B3B2B1invB0inv 
+ B5invB4B3B2invB1invB0inv 
+ B5invB4B3B2invB1B0inv 
+ B5invB4B3B2B1B0inv 
+ B5invB4B3B2B0 B24252627dB_int VDD VSS LMH6401_OR8_HT1
*
XG26dB  B5invB4invB3B2B1invB0inv 
+ B5invB4invB3invB2B1B0inv 
+ B5invB4B3invB2invB1B0inv 
+ B5invB4invB3invB2invB1invB0inv 
+ B5invB4B3B2invB1invB0inv G26dB_int VDD VSS LMH6401_OR5_HT1
*
XG25dB  B5invB4invB3B2B1invB0 
+ B5invB4invB3invB2B1B0 
+ B5invB4B3invB2invB1B0 
+ B5invB4invB3invB2invB1invB0 
+ B5invB4B3B2invB1invB0 G25dB_int VDD VSS LMH6401_OR5_HT1
*
XG24dB  B5invB4invB3B2B1B0inv 
+ B5invB4B3invB2B1invB0inv 
+ B5invB4invB3B2invB1invB0inv 
+ B5invB4invB3invB2invB1B0inv 
+ B5invB4B3B2invB1B0inv G24dB_int VDD VSS LMH6401_OR5_HT1
*
XG23dB  B5invB4invB3B2B1B0 
+ B5invB4B3invB2B1invB0 
+ B5invB4invB3B2invB1invB0 
+ B5invB4invB3invB2invB1B0 
+ B5invB4B3B2invB1B0 G23dB_int VDD VSS LMH6401_OR5_HT1
*
XG22dB  B5invB4B3invB2B1B0inv 
+ B5invB4invB3invB2B1invB0inv 
+ B5invB4invB3B2invB1B0inv 
+ B5invB4B3invB2invB1invB0inv 
+ B5invB4B3B2B1invB0inv G22dB_int VDD VSS LMH6401_OR5_HT1
*
XG21dB  B5
+ B5invB4B3invB2B1B0 
+ B5invB4invB3invB2B1invB0 
+ B5invB4invB3B2invB1B0 
+ B5invB4B3invB2invB1invB0 
+ B5invB4B3B2B1B0inv 
+ B5invB4B3B2B0 G21dB_int VDD VSS LMH6401_OR7_HT1
*
V0 VSS0 0 0 
V1 VDD1 0 1
*
XDLSB0dB 		B0dB_int 			B0dB 		VDD VSS VDD1 VSS0 DLS
XDLSB6dB 		B6dB_int 			B6dB 		VDD VSS VDD1 VSS0 DLS
XDLSB12dB 		B12dB_int 			B12dB 		VDD VSS VDD1 VSS0 DLS
XDLSB18dB 		B18dB_int 			B18dB 		VDD VSS VDD1 VSS0 DLS
XDLSB24252627dB 	B24252627dB_int 		B24252627dB 	VDD VSS VDD1 VSS0 DLS
XDLSB25dB 		B5invB4B3B2B1B0inv 		B25dB 		VDD VSS VDD1 VSS0 DLS
XDLSB26dB 		B5invB4B3B2B1B0			B26dB 		VDD VSS VDD1 VSS0 DLS
XDLSB27dB 		B5				B27dB 		VDD VSS VDD1 VSS0 DLS
*
XDLSG26dB 		G26dB_int 			G26dB 		VDD VSS VDD1 VSS0 DLS
XDLSG25dB 		G25dB_int 			G25dB 		VDD VSS VDD1 VSS0 DLS
XDLSG24dB 		G24dB_int 			G24dB 		VDD VSS VDD1 VSS0 DLS
XDLSG23dB 		G23dB_int 			G23dB 		VDD VSS VDD1 VSS0 DLS
XDLSG22dB 		G22dB_int 			G22dB 		VDD VSS VDD1 VSS0 DLS
XDLSG21dB 		G21dB_int 			G21dB 		VDD VSS VDD1 VSS0 DLS
*
.ENDS
*
.SUBCKT LMH6401_INV_HT1 IN OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( V(IN)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS
*
*
.SUBCKT LMH6401_AND5_HT1 IN1 IN2 IN3 IN4 IN5 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) > (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) > (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) > (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) > (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN5) > (V(VDD)+V(VSS))/2 ) ), V(VDD), V(VSS) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
*
.SUBCKT LMH6401_AND6_HT1 IN1 IN2 IN3 IN4 IN5 IN6 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) > (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) > (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) > (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) > (V(VDD)+V(VSS))/2 ) &
+				( V(IN5) > (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN6) > (V(VDD)+V(VSS))/2 ) ), V(VDD), V(VSS) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
*
.SUBCKT LMH6401_OR5_HT1 IN1 IN2 IN3 IN4 IN5 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) < (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) < (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN5) < (V(VDD)+V(VSS))/2 ) ), V(VSS), V(VDD) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
*
.SUBCKT LMH6401_OR6_HT1 IN1 IN2 IN3 IN4 IN5 IN6 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) < (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN5) < (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN6) < (V(VDD)+V(VSS))/2 ) ), V(VSS), V(VDD) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
.SUBCKT LMH6401_OR7_HT1 IN1 IN2 IN3 IN4 IN5 IN6 IN7 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) < (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN5) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN6) < (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN7) < (V(VDD)+V(VSS))/2 ) ), V(VSS), V(VDD) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
.SUBCKT LMH6401_OR8_HT1 IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8 OUT VDD VSS
E1 OUT_INT 0 VALUE = { IF( (    ( V(IN1) < (V(VDD)+V(VSS))/2 ) & 
+                     	        ( V(IN2) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN3) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN4) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN5) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN6) < (V(VDD)+V(VSS))/2 ) &
+				( V(IN7) < (V(VDD)+V(VSS))/2 ) &
+		            	( V(IN8) < (V(VDD)+V(VSS))/2 ) ), V(VSS), V(VDD) ) }
R1 OUT_INT OUT 1
C1 OUT 0 1p
.ENDS 
*
.SUBCKT LMH6401_GAIN_HT1 Vin Vout G26dB G25dB Vbias G24dB G23dB G22dB G21dB
E1 Vout 0 VALUE = { ( V(Vin) - V(Vbias) ) *
+                   ( 1.000000*V(G26dB) + 0.891251*V(G25dB) +
+                     0.794328*V(G24dB) + 0.707946*V(G23dB) + 
+                     0.630957*V(G22dB) + 0.562341*V(G21dB) ) + V(Vbias)  }
*
.ENDS
*
.SUBCKT LMH6401_ATT_LOGIC_HT1 S0dB S6dB S12dB S18dB S24252627dB Vout 
+ B0dB B6dB B12dB B18dB B24252627dB
*
E1 Vout 0 VALUE = { V(S0dB)*V(B0dB) + 1.0024*V(S6dB)*V(B6dB) + 
+                   1.005*V(S12dB)*V(B12dB) + 1.007*V(S18dB)*V(B18dB) + 
+                   1.009*V(S24252627dB)*V(B24252627dB) } 
*
.ENDS
*
.SUBCKT LMH6401_SWITCHIDEAL_HT1 A B C
.PARAM Ron  = 10m
.PARAM Roff = 1G
*
G1 A B VALUE = { V(A,B) * 1 / LIMIT ( Ron * V(C) + Roff * ( 1-V(C) ), Ron, Roff ) }
R1 A 0 10G
R2 B 0 10G
*
.ENDS
*
*
.SUBCKT LMH6401_FDA_CMRR_HT1 A B
* 
*
X1 A B 0 CMRR_NEW PARAMS: CMRR = 42 FCMRR = 22000k
.ENDS
*
*
.SUBCKT LMH6401_FDA_Cmfb_GmItail_HT1  Vinp Vinm Ioutp Ioutm PD VCC VEE
*
X1 PD PDINV VCC VEE LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1
*
G1 IOUTP IOUTM VALUE = { LIMIT ( 3.25m * V(VINP,VINM) * ( 1-V(PDINV) ) , -140u, 140u ) }
*
.ENDS
*
*
.SUBCKT LMH6401_FDA_GmItail_HT1  Vinp Vinm Ioutp Ioutm VEE VCC PD
*
*
X1 PD PDINV VCC VEE LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1
*
*
.PARAM ITAILMAX_X1 = { 3.0 }
.PARAM ITAILMAX_Y1 = { 200m }
*
.PARAM ITAILMAX_X2 = { 5.0 }
.PARAM ITAILMAX_Y2 = { 200m }
*
.PARAM ITAILMAX_SLOPE = 
+ { ( ITAILMAX_Y2 - ITAILMAX_Y1 ) / ( ITAILMAX_X2 - ITAILMAX_X1 ) }
.PARAM ITAILMAX_INTCP = 
+ { ITAILMAX_Y1 - ITAILMAX_SLOPE * ITAILMAX_X1 }
*
EITAILMAX ITAILMAX 0 VALUE = 
+ { ITAILMAX_SLOPE * V(VCC,VEE) + ITAILMAX_INTCP  }
*
.PARAM ITAILMIN_X1 = { 3.0 }
.PARAM ITAILMIN_Y1 = { 200m }
*
.PARAM ITAILMIN_X2 = { 5.0 }
.PARAM ITAILMIN_Y2 = { 200m }
*
.PARAM ITAILMIN_SLOPE = 
+ { ( ITAILMIN_Y2 - ITAILMIN_Y1 ) / ( ITAILMIN_X2 - ITAILMIN_X1 ) }
.PARAM ITAILMIN_INTCP = 
+ { ITAILMIN_Y1 - ITAILMIN_SLOPE * ITAILMIN_X1 }
*
EITAILMIN ITAILMIN 0 VALUE = 
+ { ITAILMIN_SLOPE * V(VCC,VEE) + ITAILMIN_INTCP  }
*
G1 IOUTP IOUTM VALUE = { LIMIT ( 105m * V(VINP,VINM) * ( 1-V(PDINV) ) , -V(ITAILMIN),
+ V(ITAILMAX) ) }
*
.ENDS
*
.SUBCKT LMH6401_FDA_Inoise_HT1 A B
.PARAM X = { 1  }
.PARAM Y = { 1e0 }
.PARAM Z = { 1e0 }
X1 A B FEMT PARAMS: NLFF = { Y }  FLWF = { X } NVRF = { Z }
.ENDS
*
.subckt LMH6401_FDA_Iq_HT1 VCCmain VEEmain PD VEE VCC
*
.PARAM IOFF = { 3m }
*
.PARAM ION_X1 = { 3.0 }
.PARAM ION_Y1 = { 70m }
*
.PARAM ION_X2 = { 5.0 }
.PARAM ION_Y2 = { 70m }
*
.PARAM ION_SLOPE = 
+ { ( ION_Y2 - ION_Y1 ) / ( ION_X2 - ION_X1 ) }
.PARAM ION_INTCP = 
+ { ION_Y1 - ION_SLOPE * ION_X1 }
*
EION ION 0 VALUE = 
+ { ION_SLOPE * V(VCC,VEE) + ION_INTCP  }
*
X1 PD PDINV VCC VEE LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1
*
G1 VCCMAIN VEEMAIN VALUE = 
+ { ( ION_INTCP + ION_SLOPE * V(VCC,VEE) ) * ( 1-V(PDINV) ) + IOFF * V(PDINV) }  
*
.ends
*
.SUBCKT LMH6401_FDA_OUTPUTCIR_ILOAD_HT1  VDD VSS VIMON PD
*
X1 PD PDINV VDD VSS LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1
*
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0, V(VIMON)*( 1-V(PDINV) ), 0)}
G2 VSS 0 VALUE = {IF(V(VIMON)  < 0, V(VIMON)*( 1-V(PDINV) ), 0)}
*
.ENDS
*
.SUBCKT LMH6401_FDA_OutputCir_RecoveryAssist_HT1  VINP VINM IOUTP IOUTM VCC VEE RecoverySignal
*
X1 RecoverySignal RS VCC VEE LOGIC1 0 DLS
VLOGIC1 LOGIC1 0 1
*
G1 IOUTP IOUTM VALUE = { LIMIT ( 1m * V(VINP,VINM) *  V(RS) , -10m, 10m ) }
*
.ENDS
*
.SUBCKT LMH6401_FDA_OutputCir_Rout_HT1 B A VIMON
.PARAM Ro_Iout_0A = 1
.PARAM Multiplier = 0
*
G1 A B VALUE = { V(A,B) * 1/ LIMIT ( ( Ro_Iout_0A - Multiplier * ABS( V(VIMON) ) ), 1m, 1e6 ) }
*
.ENDS
*
.SUBCKT LMH6401_FDA_PSRR_HT1 VDD VSS A B
*
X1 VDD VSS A B 0 PSRR_DUAL_NEW PARAMS:
+ PSRRP = 60 FPSRRP = 100k
+ PSRRN = 60 FPSRRN = 100k
.ENDS
*
.SUBCKT LMH6401_FDA_Vnoise_HT1 A B
.PARAM X = { 1  }
.PARAM Y = { 0.00185 }
.PARAM Z = { 0.00185 }
X1 A B VNSE PARAMS: NLF = { Y } FLW = { X }  NVR = { Z }
.ENDS
*
.SUBCKT VNSE  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS
*
.SUBCKT FEMT  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS
*
*
*
.SUBCKT PSRR_SINGLE   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}
E1  VO VI 1 GNDF 1
C2  VDD VSS 10P
.ENDS
*
.SUBCKT PSRR_SINGLE_NEW   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}
*
EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}
*
E1  VO VI 1a GNDF 1
C2  VDD VSS 10P
.ENDS
*
.SUBCKT PSRR_DUAL   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}
*
G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}
*
E1  VO VI VALUE = {V(1,GNDF) + V(3,GNDF)}
C3  VDD VSS 10P
.ENDS
*
.SUBCKT PSRR_DUAL_NEW   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
*
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}
*
EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}
*
*
G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}
*
EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}
*
*
E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS
*
*
*
.SUBCKT CMRR   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
E1  VI VO 1 GNDF 1
.ENDS
*
.SUBCKT CMRR_NEW   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
*
EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}
*
E1  VI VO 1a GNDF 1
.ENDS
*
.SUBCKT DLS 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) < (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS
.SUBCKT DLSINV 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) > (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS
.MODEL VINRANGE_DIDEAL         D N=1m
.MODEL RECOVERYCIRCUIT_DIDEAL  D N=1m
.MODEL CMFB_VINRANGE_DIDEAL    D N=1m
.MODEL OUTPUTCIR_ISC_DIDEAL    D N=0.1m
.MODEL OUTPUTCIR_VOHVOL_DIDEAL D N=1m