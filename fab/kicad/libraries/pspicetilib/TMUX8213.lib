.SUBCKT TMUX8213 S1 D1 SEL1 VSS GND SEL4 D4 S4 S3 D3 SEL3 NC VDD SEL2 D2 S2 
*Supply currents
X_U1    VSS GND I_VSS
X_U2    VDD GND I_VDD
*I/O diodes
X_U3    VSS S1 ESD_diode
X_U4    S1 VDD ESD_diode
X_U5    VSS S2 ESD_diode
X_U6    S2 VDD ESD_diode
X_U7    VSS S3 ESD_diode
X_U8    S3 VDD ESD_diode
X_U9    VSS S4 ESD_diode
X_U10    S4 VDD ESD_diode
X_U11    VSS D1 ESD_diode
X_U12    D1 VDD ESD_diode
X_U13    VSS D2 ESD_diode
X_U14    D2 VDD ESD_diode
X_U15    VSS D3 ESD_diode
X_U16    D3 VDD ESD_diode
X_U17    VSS D4 ESD_diode
X_U18    D4 VDD ESD_diode
*Comparators (VIH/VIL)
X_U19    VDD_L VDD VDD_NL GND COMPARATOR_VDD
X_U20    SEL1_L SEL1 SEL1_NL GND COMPARATOR_SEL1
X_U21    SEL2_L SEL2 SEL2_NL GND COMPARATOR_SEL2
X_U22    SEL3_L SEL3 SEL3_NL GND COMPARATOR_SEL3
X_U23    SEL4_L SEL4 SEL4_NL GND COMPARATOR_SEL4
*Input delays
X_U24    VDD_NL VDD GND VDD_L Delay_VDD
R1    VDD_L  GND    50
X_U25    SEL1_NL VDD GND SEL1_L Delay_SEL1
R2    SEL1_L  GND    50
X_U26    SEL2_NL VDD GND SEL2_L Delay_SEL2
R3    SEL2_L  GND    50
X_U27    SEL3_NL VDD GND SEL3_L Delay_SEL3
R4    SEL3_L  GND    50
X_U28    SEL4_NL VDD GND SEL4_L Delay_SEL4
R5    SEL4_L  GND    50
*LOGIC
X_U29    VDD_L SEL1_L SEL2_L SEL3_L SEL4_L SW_S1_L SW_D1_L SW_S1D1_L SW_S2_L SW_D2_L SW_S2D2_L SW_S3_L SW_D3_L SW_S3D3_L SW_S4_L SW_D4_L SW_S4D4_L GND LOGIC
*Output delays
X_U30    SW_S1_L VDD GND SW_S1 Delay_SW_S1
X_U31    SW_D1_L VDD GND SW_D1 Delay_SW_D1
X_U32    SW_S1D1_L VDD GND SW_S1D1 Delay_SW_S1D1
X_U33    SW_S2_L VDD GND SW_S2 Delay_SW_S2
X_U34    SW_D2_L VDD GND SW_D2 Delay_SW_D2
X_U35    SW_S2D2_L VDD GND SW_S2D2 Delay_SW_S2D2
X_U36    SW_S3_L VDD GND SW_S3 Delay_SW_S3
X_U37    SW_D3_L VDD GND SW_D3 Delay_SW_D3
X_U38    SW_S3D3_L VDD GND SW_S3D3 Delay_SW_S3D3
X_U39    SW_S4_L VDD GND SW_S4 Delay_SW_S4
X_U40    SW_D4_L VDD GND SW_D4 Delay_SW_D4
X_U41    SW_S4D4_L VDD GND SW_S4D4 Delay_SW_S4D4
*Switch I/O (COFF, CON, ION, IOFF, BW)
X_U42    S1 VSS VDD SW_S1 GND S1_IO
X_U43    S2 VSS VDD SW_S2 GND S2_IO
X_U44    S3 VSS VDD SW_S3 GND S3_IO
X_U45    S4 VSS VDD SW_S4 GND S4_IO
X_U46    D1 VSS VDD SW_D1 GND D1_IO
X_U47    D2 VSS VDD SW_D2 GND D2_IO
X_U48    D3 VSS VDD SW_D3 GND D3_IO
X_U49    D4 VSS VDD SW_D4 GND D4_IO
*Switch blocks (Ron, OISO)
X_U50    S1 D1 VSS VDD GND SW_S1D1 SWITCH_S1
X_U51    S2 D2 VSS VDD GND SW_S2D2 SWITCH_S2
X_U52    S3 D3 VSS VDD GND SW_S3D3 SWITCH_S3
X_U53    S4 D4 VSS VDD GND SW_S4D4 SWITCH_S4
*switch to switch capacitance (XTALK)
C1 S1 S4 5.032921211719517e-14
C2 S1 S3 5.032921211719517e-14
C3 S1 S2 5.032921211719517e-14
C4 S4 S3 5.032921211719517e-14
C5 S4 S2 5.032921211719517e-14
C6 S3 S2 5.032921211719517e-14
C7 D1 D4 5.032921211719517e-14
C8 D1 D3 5.032921211719517e-14
C9 D1 D2 5.032921211719517e-14
C10 D4 D3 5.032921211719517e-14
C11 D4 D2 5.032921211719517e-14
C12 D3 D2 5.032921211719517e-14
*Charge injection blocks (Qc)
X_U54    S1 VSS VDD D1 SW_S1D1 GND GND QC_S1
X_U55    S2 VSS VDD D2 SW_S2D2 GND GND QC_S2
X_U56    S3 VSS VDD D3 SW_S3D3 GND GND QC_S3
X_U57    S4 VSS VDD D4 SW_S4D4 GND GND QC_S4
.ENDS TMUX8213 
*$
*These circuits add a series diode that simulates an ESD diode from IN (-) to OUT (+)
*This diode will not cause a failure when IN > OUT but may show a large increase in current consumption 
*$
.SUBCKT ESD_Diode IN OUT
*
.MODEL DCLAMP D(IS=1E-15 IBV=1E-13 ISR = 1E-15)
D1 IN OUT DCLAMP
*
.ENDS
*$
*These circuits add a parallel current source/sink to simulate supply current consumption, based on the table
*
.SUBCKT I_VDD VDD GND
*
EI_VDD NVDD GND TABLE {V(VDD,GND)} = 
+ (0.0,0.0)
+ (4.4,0.0001)
+ (4.5,0.00011)
+ (72.0,0.0004)
+ (100.0,0.0004)
*
GVDD VDD GND VALUE = {(V(NVDD)+1p)}
*
.ENDS
.SUBCKT I_VSS VSS GND
*
EI_VSS NVSS GND TABLE {V(VSS,GND)} = 
+ (-50.0,-0.0004)
+ (-36.0,-0.0004)
+ (-5.0,-0.00011)
+ (0.0,0.0)
*
GVSS VSS GND VALUE = {(V(NVSS)+1p)}
*
.ENDS
*
*These circuits compare the current state and the input voltage to find the new state
*if the current state is on (1) then we will change states if VIN goes below VIL (1 to 0)
*if the current state is on (0) then we will change states if VIN goes above VIH (0 to 1)
.SUBCKT COMPARATOR_VDD  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (4.399,0)
+ (4.4,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (4.199,0)
+ (4.2,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_SEL1  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_SEL2  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_SEL3  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_SEL4  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
*These circuits handle all the logic for the device
*this does NOT handle timing delays or VIH VIL, all signals here are 1/0 logic
*VDD SEL1 SEL2 SEL3 SEL4    SW_S1 SW_D1 SW_S1D1 SW_S2 SW_D2 SW_S2D2 SW_S3 SW_D3 SW_S3D3 SW_S4 SW_D4 SW_S4D4 
*1   0    0    0    0       1     1     1       0     0     0       0     0     0       1     1     1       
*1   0    0    0    1       1     1     1       0     0     0       0     0     0       0     0     0       
*1   0    0    1    0       1     1     1       0     0     0       1     1     1       1     1     1       
*1   0    0    1    1       1     1     1       0     0     0       1     1     1       0     0     0       
*1   0    1    0    0       1     1     1       1     1     1       0     0     0       1     1     1       
*1   0    1    0    1       1     1     1       1     1     1       0     0     0       0     0     0       
*1   0    1    1    0       1     1     1       1     1     1       1     1     1       1     1     1       
*1   0    1    1    1       1     1     1       1     1     1       1     1     1       0     0     0       
*1   1    0    0    0       0     0     0       0     0     0       0     0     0       1     1     1       
*1   1    0    0    1       0     0     0       0     0     0       0     0     0       0     0     0       
*1   1    0    1    0       0     0     0       0     0     0       1     1     1       1     1     1       
*1   1    0    1    1       0     0     0       0     0     0       1     1     1       0     0     0       
*1   1    1    0    0       0     0     0       1     1     1       0     0     0       1     1     1       
*1   1    1    0    1       0     0     0       1     1     1       0     0     0       0     0     0       
*1   1    1    1    0       0     0     0       1     1     1       1     1     1       1     1     1       
*1   1    1    1    1       0     0     0       1     1     1       1     1     1       0     0     0       
*$
.SUBCKT LOGIC  LVDD LSEL1 LSEL2 LSEL3 LSEL4 SW_S1 SW_D1 SW_S1D1 SW_S2 SW_D2 SW_S2D2 SW_S3 SW_D3 SW_S3D3 SW_S4 SW_D4 SW_S4D4 GND
*
*convert analog RC to 1/0 digital
ELVDD_DIG LVDD_DIG GND VALUE = {IF (V(LVDD,GND)>0.63,1, 0) }
ELSEL1_DIG LSEL1_DIG GND VALUE = {IF (V(LSEL1,GND)>0.63,1, 0) }
ELSEL2_DIG LSEL2_DIG GND VALUE = {IF (V(LSEL2,GND)>0.63,1, 0) }
ELSEL3_DIG LSEL3_DIG GND VALUE = {IF (V(LSEL3,GND)>0.63,1, 0) }
ELSEL4_DIG LSEL4_DIG GND VALUE = {IF (V(LSEL4,GND)>0.63,1, 0) }
*Create an inverse of all inputs in case they need to be used
ELVDD_DIGN LVDD_DIGN GND VALUE = { 1 - V(LVDD_DIG, GND)}
ELSEL1_DIGN LSEL1_DIGN GND VALUE = { 1 - V(LSEL1_DIG, GND)}
ELSEL2_DIGN LSEL2_DIGN GND VALUE = { 1 - V(LSEL2_DIG, GND)}
ELSEL3_DIGN LSEL3_DIGN GND VALUE = { 1 - V(LSEL3_DIG, GND)}
ELSEL4_DIGN LSEL4_DIGN GND VALUE = { 1 - V(LSEL4_DIG, GND)}
*
*Determine output states and rectify outputs
ELSW_S1 LSW_S1 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND
+ ) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S1 SW_S1 GND VALUE = { IF (V(LSW_S1, GND)>0.5,1,0) }
ELSW_D1 LSW_D1 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND
+ ) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_D1 SW_D1 GND VALUE = { IF (V(LSW_D1, GND)>0.5,1,0) }
ELSW_S1D1 LSW_S1D1 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG
+ ,GND) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S1D1 SW_S1D1 GND VALUE = { IF (V(LSW_S1D1, GND)>0.5,1,0) }
ELSW_S2 LSW_S2 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND) 
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S2 SW_S2 GND VALUE = { IF (V(LSW_S2, GND)>0.5,1,0) }
ELSW_D2 LSW_D2 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND) 
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_D2 SW_D2 GND VALUE = { IF (V(LSW_D2, GND)>0.5,1,0) }
ELSW_S2D2 LSW_S2D2 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,G
+ ND) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S2D2 SW_S2D2 GND VALUE = { IF (V(LSW_S2D2, GND)>0.5,1,0) }
ELSW_S3 LSW_S3 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) 
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S3 SW_S3 GND VALUE = { IF (V(LSW_S3, GND)>0.5,1,0) }
ELSW_D3 LSW_D3 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) 
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_D3 SW_D3 GND VALUE = { IF (V(LSW_D3, GND)>0.5,1,0) }
ELSW_S3D3 LSW_S3D3 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,G
+ ND) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIG,GND) }
ESW_S3D3 SW_S3D3 GND VALUE = { IF (V(LSW_S3D3, GND)>0.5,1,0) }
ELSW_S4 LSW_S4 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND
+ ) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND) }
ESW_S4 SW_S4 GND VALUE = { IF (V(LSW_S4, GND)>0.5,1,0) }
ELSW_D4 LSW_D4 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND
+ ) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND) }
ESW_D4 SW_D4 GND VALUE = { IF (V(LSW_D4, GND)>0.5,1,0) }
ELSW_S4D4 LSW_S4D4 GND VALUE = { V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN
+ ,GND) + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIGN,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIGN,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIGN,GND) * V(LSEL4_DIGN,GND)
+ + V(LVDD_DIG,GND) * V(LSEL1_DIG,GND) * V(LSEL2_DIG,GND) * V(LSEL3_DIG,GND) * V(LSEL4_DIGN,GND) }
ESW_S4D4 SW_S4D4 GND VALUE = { IF (V(LSW_S4D4, GND)>0.5,1,0) }
*
.ENDS
*$
*These circuits add a RC delay in series to the In and OUT signal
*split delays depending on if IN is going high to low or low to high
*if IN is going high to low, the R needs to be adjusted by /0.46471 to convert the 0.37% time to 0.63%
*TON_TOFF_SUPPLY
.SUBCKT Delay_VDD  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (5,1000.0)
+ (100,1000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (5,1075.948)
+ (100,1075.948)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_SEL1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,5000.0)
+ (100,5000.0)
+ (36,5000.0)
+ (50,5000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,430.3792)
+ (100,430.3792)
+ (36,430.3792)
+ (50,430.3792)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_SEL2  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,5000.0)
+ (100,5000.0)
+ (36,5000.0)
+ (50,5000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,430.3792)
+ (100,430.3792)
+ (36,430.3792)
+ (50,430.3792)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_SEL3  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,5000.0)
+ (100,5000.0)
+ (36,5000.0)
+ (50,5000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,430.3792)
+ (100,430.3792)
+ (36,430.3792)
+ (50,430.3792)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_SEL4  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,5000.0)
+ (100,5000.0)
+ (36,5000.0)
+ (50,5000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,430.3792)
+ (100,430.3792)
+ (36,430.3792)
+ (50,430.3792)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_SEL1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,10.0)
+ (100,10.0)
+ (36,10.0)
+ (50,10.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,21.519)
+ (100,21.519)
+ (36,21.519)
+ (50,21.519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_SEL2  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,10.0)
+ (100,10.0)
+ (36,10.0)
+ (50,10.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,21.519)
+ (100,21.519)
+ (36,21.519)
+ (50,21.519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_SEL3  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,10.0)
+ (100,10.0)
+ (36,10.0)
+ (50,10.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,21.519)
+ (100,21.519)
+ (36,21.519)
+ (50,21.519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_SEL4  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,10.0)
+ (100,10.0)
+ (36,10.0)
+ (50,10.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,21.519)
+ (100,21.519)
+ (36,21.519)
+ (50,21.519)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_D1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_D2  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_D3  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_D4  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1D1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2D2  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3D3  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4D4  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
.SUBCKT SWITCH_S1 SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.16
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,5.09)
+ (-35.3,5.09)
+ (-34.6,5.09)
+ (-33.8,5.09)
+ (-33.1,5.09)
+ (-32.4,5.09)
+ (-31.7,5.09)
+ (-31.0,5.09)
+ (-30.2,5.09)
+ (-29.5,5.09)
+ (-28.8,5.09)
+ (-28.1,5.09)
+ (-27.4,5.1)
+ (-26.6,5.1)
+ (-25.9,5.1)
+ (-25.2,5.1)
+ (-24.5,5.1)
+ (-23.8,5.1)
+ (-23.0,5.1)
+ (-22.3,5.1)
+ (-21.6,5.1)
+ (-20.9,5.1)
+ (-20.2,5.1)
+ (-19.4,5.1)
+ (-18.7,5.1)
+ (-18.0,5.1)
+ (-17.3,5.1)
+ (-16.6,5.1)
+ (-15.8,5.1)
+ (-15.1,5.1)
+ (-14.4,5.1)
+ (-13.7,5.1)
+ (-13.0,5.1)
+ (-12.2,5.1)
+ (-11.5,5.1)
+ (-10.8,5.1)
+ (-10.1,5.11)
+ (-9.36,5.11)
+ (-8.64,5.11)
+ (-7.92,5.11)
+ (-7.2,5.11)
+ (-6.48,5.11)
+ (-5.76,5.12)
+ (-5.04,5.12)
+ (-4.32,5.12)
+ (-3.6,5.12)
+ (-2.88,5.13)
+ (-2.16,5.13)
+ (-1.44,5.13)
+ (-0.72,5.13)
+ (0.0,5.14)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.14)
+ (5.76,5.13)
+ (6.48,5.14)
+ (7.2,5.14)
+ (7.92,5.14)
+ (8.64,5.14)
+ (9.36,5.14)
+ (10.1,5.14)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.15)
+ (20.2,5.15)
+ (20.9,5.15)
+ (21.6,5.15)
+ (22.3,5.15)
+ (23.0,5.15)
+ (23.8,5.15)
+ (24.5,5.15)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.2)
+ (32.4,5.36)
+ (33.1,5.65)
+ (33.8,6.44)
+ (34.6,12.0)
+ (35.3,12.0)
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.13)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.13)
+ (5.76,5.13)
+ (6.48,5.13)
+ (7.2,5.13)
+ (7.92,5.13)
+ (8.64,5.13)
+ (9.36,5.13)
+ (10.1,5.13)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.14)
+ (20.2,5.14)
+ (20.9,5.14)
+ (21.6,5.14)
+ (22.3,5.14)
+ (23.0,5.14)
+ (23.8,5.15)
+ (24.5,5.14)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.15)
+ (32.4,5.15)
+ (33.1,5.15)
+ (33.8,5.15)
+ (34.6,5.15)
+ (35.3,5.15)
+ (36.0,5.15)
+ (36.7,5.15)
+ (37.4,5.15)
+ (38.2,5.15)
+ (38.9,5.15)
+ (39.6,5.15)
+ (40.3,5.15)
+ (41.0,5.15)
+ (41.8,5.15)
+ (42.5,5.15)
+ (43.2,5.15)
+ (43.9,5.15)
+ (44.6,5.15)
+ (45.4,5.15)
+ (46.1,5.15)
+ (46.8,5.15)
+ (47.5,5.15)
+ (48.2,5.15)
+ (49.0,5.15)
+ (49.7,5.15)
+ (50.4,5.15)
+ (51.1,5.15)
+ (51.8,5.15)
+ (52.6,5.15)
+ (53.3,5.15)
+ (54.0,5.15)
+ (54.7,5.15)
+ (55.4,5.15)
+ (56.2,5.15)
+ (56.9,5.15)
+ (57.6,5.15)
+ (58.3,5.15)
+ (59.0,5.15)
+ (59.8,5.15)
+ (60.5,5.15)
+ (61.2,5.15)
+ (61.9,5.15)
+ (62.6,5.15)
+ (63.4,5.15)
+ (64.1,5.15)
+ (64.8,5.15)
+ (65.5,5.15)
+ (66.2,5.15)
+ (67.0,5.15)
+ (67.7,5.2)
+ (68.4,5.36)
+ (69.1,5.65)
+ (69.8,6.44)
+ (70.6,12.0)
+ (71.3,12.0)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.14)
+ (1.0,5.14)
+ (2.0,5.14)
+ (3.0,5.14)
+ (4.0,5.14)
+ (5.0,5.14)
+ (6.0,5.14)
+ (7.0,5.14)
+ (8.0,5.14)
+ (9.0,5.14)
+ (10.0,5.14)
+ (11.0,5.14)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.15)
+ (16.0,5.15)
+ (17.0,5.15)
+ (18.0,5.15)
+ (19.0,5.15)
+ (20.0,5.15)
+ (21.0,5.15)
+ (22.0,5.15)
+ (23.0,5.15)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.16)
+ (35.0,5.16)
+ (36.0,5.16)
+ (37.0,5.16)
+ (38.0,5.16)
+ (39.0,5.16)
+ (40.0,5.16)
+ (41.0,5.16)
+ (42.0,5.16)
+ (43.0,5.16)
+ (44.0,5.16)
+ (45.0,5.16)
+ (46.0,5.16)
+ (47.0,5.16)
+ (48.0,5.16)
+ (49.0,5.16)
+ (50.0,5.16)
+ (51.0,5.16)
+ (52.0,5.16)
+ (53.0,5.16)
+ (54.0,5.16)
+ (55.0,5.16)
+ (56.0,5.16)
+ (57.0,5.16)
+ (58.0,5.16)
+ (59.0,5.16)
+ (60.0,5.16)
+ (61.0,5.16)
+ (62.0,5.17)
+ (63.0,5.16)
+ (64.0,5.17)
+ (65.0,5.16)
+ (66.0,5.16)
+ (67.0,5.17)
+ (68.0,5.17)
+ (69.0,5.17)
+ (70.0,5.17)
+ (71.0,5.17)
+ (72.0,5.17)
+ (73.0,5.17)
+ (74.0,5.17)
+ (75.0,5.17)
+ (76.0,5.17)
+ (77.0,5.17)
+ (78.0,5.17)
+ (79.0,5.17)
+ (80.0,5.17)
+ (81.0,5.17)
+ (82.0,5.17)
+ (83.0,5.17)
+ (84.0,5.17)
+ (85.0,5.17)
+ (86.0,5.17)
+ (87.0,5.17)
+ (88.0,5.17)
+ (89.0,5.17)
+ (90.0,5.17)
+ (91.0,5.17)
+ (92.0,5.17)
+ (93.0,5.17)
+ (94.0,5.17)
+ (95.0,5.17)
+ (96.0,5.27)
+ (97.0,5.6)
+ (98.0,6.87)
+ (99.0,12.0)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,5.1)
+ (-49.0,5.1)
+ (-48.0,5.1)
+ (-47.0,5.1)
+ (-46.0,5.1)
+ (-45.0,5.1)
+ (-44.0,5.1)
+ (-43.0,5.1)
+ (-42.0,5.1)
+ (-41.0,5.1)
+ (-40.0,5.1)
+ (-39.0,5.1)
+ (-38.0,5.1)
+ (-37.0,5.1)
+ (-36.0,5.1)
+ (-35.0,5.1)
+ (-34.0,5.11)
+ (-33.0,5.11)
+ (-32.0,5.11)
+ (-31.0,5.11)
+ (-30.0,5.11)
+ (-29.0,5.11)
+ (-28.0,5.11)
+ (-27.0,5.11)
+ (-26.0,5.11)
+ (-25.0,5.11)
+ (-24.0,5.11)
+ (-23.0,5.11)
+ (-22.0,5.11)
+ (-21.0,5.11)
+ (-20.0,5.11)
+ (-19.0,5.11)
+ (-18.0,5.11)
+ (-17.0,5.11)
+ (-16.0,5.11)
+ (-15.0,5.11)
+ (-14.0,5.11)
+ (-13.0,5.11)
+ (-12.0,5.11)
+ (-11.0,5.11)
+ (-10.0,5.12)
+ (-9.0,5.12)
+ (-8.0,5.12)
+ (-7.0,5.12)
+ (-6.0,5.12)
+ (-5.0,5.13)
+ (-4.0,5.13)
+ (-3.0,5.13)
+ (-2.0,5.13)
+ (-1.0,5.14)
+ (0.0,5.15)
+ (1.0,5.14)
+ (2.0,5.15)
+ (3.0,5.15)
+ (4.0,5.15)
+ (5.0,5.15)
+ (6.0,5.15)
+ (7.0,5.15)
+ (8.0,5.15)
+ (9.0,5.15)
+ (10.0,5.15)
+ (11.0,5.15)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.16)
+ (16.0,5.16)
+ (17.0,5.16)
+ (18.0,5.16)
+ (19.0,5.16)
+ (20.0,5.16)
+ (21.0,5.16)
+ (22.0,5.16)
+ (23.0,5.16)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.17)
+ (35.0,5.17)
+ (36.0,5.17)
+ (37.0,5.17)
+ (38.0,5.17)
+ (39.0,5.17)
+ (40.0,5.17)
+ (41.0,5.17)
+ (42.0,5.17)
+ (43.0,5.17)
+ (44.0,5.17)
+ (45.0,5.17)
+ (46.0,5.27)
+ (47.0,5.6)
+ (48.0,6.86)
+ (49.0,12.0)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S2 SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -0.19
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,5.09)
+ (-35.3,5.09)
+ (-34.6,5.09)
+ (-33.8,5.09)
+ (-33.1,5.09)
+ (-32.4,5.09)
+ (-31.7,5.09)
+ (-31.0,5.09)
+ (-30.2,5.09)
+ (-29.5,5.09)
+ (-28.8,5.09)
+ (-28.1,5.09)
+ (-27.4,5.1)
+ (-26.6,5.1)
+ (-25.9,5.1)
+ (-25.2,5.1)
+ (-24.5,5.1)
+ (-23.8,5.1)
+ (-23.0,5.1)
+ (-22.3,5.1)
+ (-21.6,5.1)
+ (-20.9,5.1)
+ (-20.2,5.1)
+ (-19.4,5.1)
+ (-18.7,5.1)
+ (-18.0,5.1)
+ (-17.3,5.1)
+ (-16.6,5.1)
+ (-15.8,5.1)
+ (-15.1,5.1)
+ (-14.4,5.1)
+ (-13.7,5.1)
+ (-13.0,5.1)
+ (-12.2,5.1)
+ (-11.5,5.1)
+ (-10.8,5.1)
+ (-10.1,5.11)
+ (-9.36,5.11)
+ (-8.64,5.11)
+ (-7.92,5.11)
+ (-7.2,5.11)
+ (-6.48,5.11)
+ (-5.76,5.12)
+ (-5.04,5.12)
+ (-4.32,5.12)
+ (-3.6,5.12)
+ (-2.88,5.13)
+ (-2.16,5.13)
+ (-1.44,5.13)
+ (-0.72,5.13)
+ (0.0,5.14)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.14)
+ (5.76,5.13)
+ (6.48,5.14)
+ (7.2,5.14)
+ (7.92,5.14)
+ (8.64,5.14)
+ (9.36,5.14)
+ (10.1,5.14)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.15)
+ (20.2,5.15)
+ (20.9,5.15)
+ (21.6,5.15)
+ (22.3,5.15)
+ (23.0,5.15)
+ (23.8,5.15)
+ (24.5,5.15)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.2)
+ (32.4,5.36)
+ (33.1,5.65)
+ (33.8,6.44)
+ (34.6,12.0)
+ (35.3,12.0)
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.13)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.13)
+ (5.76,5.13)
+ (6.48,5.13)
+ (7.2,5.13)
+ (7.92,5.13)
+ (8.64,5.13)
+ (9.36,5.13)
+ (10.1,5.13)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.14)
+ (20.2,5.14)
+ (20.9,5.14)
+ (21.6,5.14)
+ (22.3,5.14)
+ (23.0,5.14)
+ (23.8,5.15)
+ (24.5,5.14)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.15)
+ (32.4,5.15)
+ (33.1,5.15)
+ (33.8,5.15)
+ (34.6,5.15)
+ (35.3,5.15)
+ (36.0,5.15)
+ (36.7,5.15)
+ (37.4,5.15)
+ (38.2,5.15)
+ (38.9,5.15)
+ (39.6,5.15)
+ (40.3,5.15)
+ (41.0,5.15)
+ (41.8,5.15)
+ (42.5,5.15)
+ (43.2,5.15)
+ (43.9,5.15)
+ (44.6,5.15)
+ (45.4,5.15)
+ (46.1,5.15)
+ (46.8,5.15)
+ (47.5,5.15)
+ (48.2,5.15)
+ (49.0,5.15)
+ (49.7,5.15)
+ (50.4,5.15)
+ (51.1,5.15)
+ (51.8,5.15)
+ (52.6,5.15)
+ (53.3,5.15)
+ (54.0,5.15)
+ (54.7,5.15)
+ (55.4,5.15)
+ (56.2,5.15)
+ (56.9,5.15)
+ (57.6,5.15)
+ (58.3,5.15)
+ (59.0,5.15)
+ (59.8,5.15)
+ (60.5,5.15)
+ (61.2,5.15)
+ (61.9,5.15)
+ (62.6,5.15)
+ (63.4,5.15)
+ (64.1,5.15)
+ (64.8,5.15)
+ (65.5,5.15)
+ (66.2,5.15)
+ (67.0,5.15)
+ (67.7,5.2)
+ (68.4,5.36)
+ (69.1,5.65)
+ (69.8,6.44)
+ (70.6,12.0)
+ (71.3,12.0)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.14)
+ (1.0,5.14)
+ (2.0,5.14)
+ (3.0,5.14)
+ (4.0,5.14)
+ (5.0,5.14)
+ (6.0,5.14)
+ (7.0,5.14)
+ (8.0,5.14)
+ (9.0,5.14)
+ (10.0,5.14)
+ (11.0,5.14)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.15)
+ (16.0,5.15)
+ (17.0,5.15)
+ (18.0,5.15)
+ (19.0,5.15)
+ (20.0,5.15)
+ (21.0,5.15)
+ (22.0,5.15)
+ (23.0,5.15)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.16)
+ (35.0,5.16)
+ (36.0,5.16)
+ (37.0,5.16)
+ (38.0,5.16)
+ (39.0,5.16)
+ (40.0,5.16)
+ (41.0,5.16)
+ (42.0,5.16)
+ (43.0,5.16)
+ (44.0,5.16)
+ (45.0,5.16)
+ (46.0,5.16)
+ (47.0,5.16)
+ (48.0,5.16)
+ (49.0,5.16)
+ (50.0,5.16)
+ (51.0,5.16)
+ (52.0,5.16)
+ (53.0,5.16)
+ (54.0,5.16)
+ (55.0,5.16)
+ (56.0,5.16)
+ (57.0,5.16)
+ (58.0,5.16)
+ (59.0,5.16)
+ (60.0,5.16)
+ (61.0,5.16)
+ (62.0,5.17)
+ (63.0,5.16)
+ (64.0,5.17)
+ (65.0,5.16)
+ (66.0,5.16)
+ (67.0,5.17)
+ (68.0,5.17)
+ (69.0,5.17)
+ (70.0,5.17)
+ (71.0,5.17)
+ (72.0,5.17)
+ (73.0,5.17)
+ (74.0,5.17)
+ (75.0,5.17)
+ (76.0,5.17)
+ (77.0,5.17)
+ (78.0,5.17)
+ (79.0,5.17)
+ (80.0,5.17)
+ (81.0,5.17)
+ (82.0,5.17)
+ (83.0,5.17)
+ (84.0,5.17)
+ (85.0,5.17)
+ (86.0,5.17)
+ (87.0,5.17)
+ (88.0,5.17)
+ (89.0,5.17)
+ (90.0,5.17)
+ (91.0,5.17)
+ (92.0,5.17)
+ (93.0,5.17)
+ (94.0,5.17)
+ (95.0,5.17)
+ (96.0,5.27)
+ (97.0,5.6)
+ (98.0,6.87)
+ (99.0,12.0)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,5.1)
+ (-49.0,5.1)
+ (-48.0,5.1)
+ (-47.0,5.1)
+ (-46.0,5.1)
+ (-45.0,5.1)
+ (-44.0,5.1)
+ (-43.0,5.1)
+ (-42.0,5.1)
+ (-41.0,5.1)
+ (-40.0,5.1)
+ (-39.0,5.1)
+ (-38.0,5.1)
+ (-37.0,5.1)
+ (-36.0,5.1)
+ (-35.0,5.1)
+ (-34.0,5.11)
+ (-33.0,5.11)
+ (-32.0,5.11)
+ (-31.0,5.11)
+ (-30.0,5.11)
+ (-29.0,5.11)
+ (-28.0,5.11)
+ (-27.0,5.11)
+ (-26.0,5.11)
+ (-25.0,5.11)
+ (-24.0,5.11)
+ (-23.0,5.11)
+ (-22.0,5.11)
+ (-21.0,5.11)
+ (-20.0,5.11)
+ (-19.0,5.11)
+ (-18.0,5.11)
+ (-17.0,5.11)
+ (-16.0,5.11)
+ (-15.0,5.11)
+ (-14.0,5.11)
+ (-13.0,5.11)
+ (-12.0,5.11)
+ (-11.0,5.11)
+ (-10.0,5.12)
+ (-9.0,5.12)
+ (-8.0,5.12)
+ (-7.0,5.12)
+ (-6.0,5.12)
+ (-5.0,5.13)
+ (-4.0,5.13)
+ (-3.0,5.13)
+ (-2.0,5.13)
+ (-1.0,5.14)
+ (0.0,5.15)
+ (1.0,5.14)
+ (2.0,5.15)
+ (3.0,5.15)
+ (4.0,5.15)
+ (5.0,5.15)
+ (6.0,5.15)
+ (7.0,5.15)
+ (8.0,5.15)
+ (9.0,5.15)
+ (10.0,5.15)
+ (11.0,5.15)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.16)
+ (16.0,5.16)
+ (17.0,5.16)
+ (18.0,5.16)
+ (19.0,5.16)
+ (20.0,5.16)
+ (21.0,5.16)
+ (22.0,5.16)
+ (23.0,5.16)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.17)
+ (35.0,5.17)
+ (36.0,5.17)
+ (37.0,5.17)
+ (38.0,5.17)
+ (39.0,5.17)
+ (40.0,5.17)
+ (41.0,5.17)
+ (42.0,5.17)
+ (43.0,5.17)
+ (44.0,5.17)
+ (45.0,5.17)
+ (46.0,5.27)
+ (47.0,5.6)
+ (48.0,6.86)
+ (49.0,12.0)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S3 SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.22
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,5.09)
+ (-35.3,5.09)
+ (-34.6,5.09)
+ (-33.8,5.09)
+ (-33.1,5.09)
+ (-32.4,5.09)
+ (-31.7,5.09)
+ (-31.0,5.09)
+ (-30.2,5.09)
+ (-29.5,5.09)
+ (-28.8,5.09)
+ (-28.1,5.09)
+ (-27.4,5.1)
+ (-26.6,5.1)
+ (-25.9,5.1)
+ (-25.2,5.1)
+ (-24.5,5.1)
+ (-23.8,5.1)
+ (-23.0,5.1)
+ (-22.3,5.1)
+ (-21.6,5.1)
+ (-20.9,5.1)
+ (-20.2,5.1)
+ (-19.4,5.1)
+ (-18.7,5.1)
+ (-18.0,5.1)
+ (-17.3,5.1)
+ (-16.6,5.1)
+ (-15.8,5.1)
+ (-15.1,5.1)
+ (-14.4,5.1)
+ (-13.7,5.1)
+ (-13.0,5.1)
+ (-12.2,5.1)
+ (-11.5,5.1)
+ (-10.8,5.1)
+ (-10.1,5.11)
+ (-9.36,5.11)
+ (-8.64,5.11)
+ (-7.92,5.11)
+ (-7.2,5.11)
+ (-6.48,5.11)
+ (-5.76,5.12)
+ (-5.04,5.12)
+ (-4.32,5.12)
+ (-3.6,5.12)
+ (-2.88,5.13)
+ (-2.16,5.13)
+ (-1.44,5.13)
+ (-0.72,5.13)
+ (0.0,5.14)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.14)
+ (5.76,5.13)
+ (6.48,5.14)
+ (7.2,5.14)
+ (7.92,5.14)
+ (8.64,5.14)
+ (9.36,5.14)
+ (10.1,5.14)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.15)
+ (20.2,5.15)
+ (20.9,5.15)
+ (21.6,5.15)
+ (22.3,5.15)
+ (23.0,5.15)
+ (23.8,5.15)
+ (24.5,5.15)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.2)
+ (32.4,5.36)
+ (33.1,5.65)
+ (33.8,6.44)
+ (34.6,12.0)
+ (35.3,12.0)
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.13)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.13)
+ (5.76,5.13)
+ (6.48,5.13)
+ (7.2,5.13)
+ (7.92,5.13)
+ (8.64,5.13)
+ (9.36,5.13)
+ (10.1,5.13)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.14)
+ (20.2,5.14)
+ (20.9,5.14)
+ (21.6,5.14)
+ (22.3,5.14)
+ (23.0,5.14)
+ (23.8,5.15)
+ (24.5,5.14)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.15)
+ (32.4,5.15)
+ (33.1,5.15)
+ (33.8,5.15)
+ (34.6,5.15)
+ (35.3,5.15)
+ (36.0,5.15)
+ (36.7,5.15)
+ (37.4,5.15)
+ (38.2,5.15)
+ (38.9,5.15)
+ (39.6,5.15)
+ (40.3,5.15)
+ (41.0,5.15)
+ (41.8,5.15)
+ (42.5,5.15)
+ (43.2,5.15)
+ (43.9,5.15)
+ (44.6,5.15)
+ (45.4,5.15)
+ (46.1,5.15)
+ (46.8,5.15)
+ (47.5,5.15)
+ (48.2,5.15)
+ (49.0,5.15)
+ (49.7,5.15)
+ (50.4,5.15)
+ (51.1,5.15)
+ (51.8,5.15)
+ (52.6,5.15)
+ (53.3,5.15)
+ (54.0,5.15)
+ (54.7,5.15)
+ (55.4,5.15)
+ (56.2,5.15)
+ (56.9,5.15)
+ (57.6,5.15)
+ (58.3,5.15)
+ (59.0,5.15)
+ (59.8,5.15)
+ (60.5,5.15)
+ (61.2,5.15)
+ (61.9,5.15)
+ (62.6,5.15)
+ (63.4,5.15)
+ (64.1,5.15)
+ (64.8,5.15)
+ (65.5,5.15)
+ (66.2,5.15)
+ (67.0,5.15)
+ (67.7,5.2)
+ (68.4,5.36)
+ (69.1,5.65)
+ (69.8,6.44)
+ (70.6,12.0)
+ (71.3,12.0)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.14)
+ (1.0,5.14)
+ (2.0,5.14)
+ (3.0,5.14)
+ (4.0,5.14)
+ (5.0,5.14)
+ (6.0,5.14)
+ (7.0,5.14)
+ (8.0,5.14)
+ (9.0,5.14)
+ (10.0,5.14)
+ (11.0,5.14)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.15)
+ (16.0,5.15)
+ (17.0,5.15)
+ (18.0,5.15)
+ (19.0,5.15)
+ (20.0,5.15)
+ (21.0,5.15)
+ (22.0,5.15)
+ (23.0,5.15)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.16)
+ (35.0,5.16)
+ (36.0,5.16)
+ (37.0,5.16)
+ (38.0,5.16)
+ (39.0,5.16)
+ (40.0,5.16)
+ (41.0,5.16)
+ (42.0,5.16)
+ (43.0,5.16)
+ (44.0,5.16)
+ (45.0,5.16)
+ (46.0,5.16)
+ (47.0,5.16)
+ (48.0,5.16)
+ (49.0,5.16)
+ (50.0,5.16)
+ (51.0,5.16)
+ (52.0,5.16)
+ (53.0,5.16)
+ (54.0,5.16)
+ (55.0,5.16)
+ (56.0,5.16)
+ (57.0,5.16)
+ (58.0,5.16)
+ (59.0,5.16)
+ (60.0,5.16)
+ (61.0,5.16)
+ (62.0,5.17)
+ (63.0,5.16)
+ (64.0,5.17)
+ (65.0,5.16)
+ (66.0,5.16)
+ (67.0,5.17)
+ (68.0,5.17)
+ (69.0,5.17)
+ (70.0,5.17)
+ (71.0,5.17)
+ (72.0,5.17)
+ (73.0,5.17)
+ (74.0,5.17)
+ (75.0,5.17)
+ (76.0,5.17)
+ (77.0,5.17)
+ (78.0,5.17)
+ (79.0,5.17)
+ (80.0,5.17)
+ (81.0,5.17)
+ (82.0,5.17)
+ (83.0,5.17)
+ (84.0,5.17)
+ (85.0,5.17)
+ (86.0,5.17)
+ (87.0,5.17)
+ (88.0,5.17)
+ (89.0,5.17)
+ (90.0,5.17)
+ (91.0,5.17)
+ (92.0,5.17)
+ (93.0,5.17)
+ (94.0,5.17)
+ (95.0,5.17)
+ (96.0,5.27)
+ (97.0,5.6)
+ (98.0,6.87)
+ (99.0,12.0)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,5.1)
+ (-49.0,5.1)
+ (-48.0,5.1)
+ (-47.0,5.1)
+ (-46.0,5.1)
+ (-45.0,5.1)
+ (-44.0,5.1)
+ (-43.0,5.1)
+ (-42.0,5.1)
+ (-41.0,5.1)
+ (-40.0,5.1)
+ (-39.0,5.1)
+ (-38.0,5.1)
+ (-37.0,5.1)
+ (-36.0,5.1)
+ (-35.0,5.1)
+ (-34.0,5.11)
+ (-33.0,5.11)
+ (-32.0,5.11)
+ (-31.0,5.11)
+ (-30.0,5.11)
+ (-29.0,5.11)
+ (-28.0,5.11)
+ (-27.0,5.11)
+ (-26.0,5.11)
+ (-25.0,5.11)
+ (-24.0,5.11)
+ (-23.0,5.11)
+ (-22.0,5.11)
+ (-21.0,5.11)
+ (-20.0,5.11)
+ (-19.0,5.11)
+ (-18.0,5.11)
+ (-17.0,5.11)
+ (-16.0,5.11)
+ (-15.0,5.11)
+ (-14.0,5.11)
+ (-13.0,5.11)
+ (-12.0,5.11)
+ (-11.0,5.11)
+ (-10.0,5.12)
+ (-9.0,5.12)
+ (-8.0,5.12)
+ (-7.0,5.12)
+ (-6.0,5.12)
+ (-5.0,5.13)
+ (-4.0,5.13)
+ (-3.0,5.13)
+ (-2.0,5.13)
+ (-1.0,5.14)
+ (0.0,5.15)
+ (1.0,5.14)
+ (2.0,5.15)
+ (3.0,5.15)
+ (4.0,5.15)
+ (5.0,5.15)
+ (6.0,5.15)
+ (7.0,5.15)
+ (8.0,5.15)
+ (9.0,5.15)
+ (10.0,5.15)
+ (11.0,5.15)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.16)
+ (16.0,5.16)
+ (17.0,5.16)
+ (18.0,5.16)
+ (19.0,5.16)
+ (20.0,5.16)
+ (21.0,5.16)
+ (22.0,5.16)
+ (23.0,5.16)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.17)
+ (35.0,5.17)
+ (36.0,5.17)
+ (37.0,5.17)
+ (38.0,5.17)
+ (39.0,5.17)
+ (40.0,5.17)
+ (41.0,5.17)
+ (42.0,5.17)
+ (43.0,5.17)
+ (44.0,5.17)
+ (45.0,5.17)
+ (46.0,5.27)
+ (47.0,5.6)
+ (48.0,6.86)
+ (49.0,12.0)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S4 SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -0.18
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 5.032921211719517e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,5.09)
+ (-35.3,5.09)
+ (-34.6,5.09)
+ (-33.8,5.09)
+ (-33.1,5.09)
+ (-32.4,5.09)
+ (-31.7,5.09)
+ (-31.0,5.09)
+ (-30.2,5.09)
+ (-29.5,5.09)
+ (-28.8,5.09)
+ (-28.1,5.09)
+ (-27.4,5.1)
+ (-26.6,5.1)
+ (-25.9,5.1)
+ (-25.2,5.1)
+ (-24.5,5.1)
+ (-23.8,5.1)
+ (-23.0,5.1)
+ (-22.3,5.1)
+ (-21.6,5.1)
+ (-20.9,5.1)
+ (-20.2,5.1)
+ (-19.4,5.1)
+ (-18.7,5.1)
+ (-18.0,5.1)
+ (-17.3,5.1)
+ (-16.6,5.1)
+ (-15.8,5.1)
+ (-15.1,5.1)
+ (-14.4,5.1)
+ (-13.7,5.1)
+ (-13.0,5.1)
+ (-12.2,5.1)
+ (-11.5,5.1)
+ (-10.8,5.1)
+ (-10.1,5.11)
+ (-9.36,5.11)
+ (-8.64,5.11)
+ (-7.92,5.11)
+ (-7.2,5.11)
+ (-6.48,5.11)
+ (-5.76,5.12)
+ (-5.04,5.12)
+ (-4.32,5.12)
+ (-3.6,5.12)
+ (-2.88,5.13)
+ (-2.16,5.13)
+ (-1.44,5.13)
+ (-0.72,5.13)
+ (0.0,5.14)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.14)
+ (5.76,5.13)
+ (6.48,5.14)
+ (7.2,5.14)
+ (7.92,5.14)
+ (8.64,5.14)
+ (9.36,5.14)
+ (10.1,5.14)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.15)
+ (20.2,5.15)
+ (20.9,5.15)
+ (21.6,5.15)
+ (22.3,5.15)
+ (23.0,5.15)
+ (23.8,5.15)
+ (24.5,5.15)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.2)
+ (32.4,5.36)
+ (33.1,5.65)
+ (33.8,6.44)
+ (34.6,12.0)
+ (35.3,12.0)
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.13)
+ (0.72,5.13)
+ (1.44,5.13)
+ (2.16,5.13)
+ (2.88,5.13)
+ (3.6,5.13)
+ (4.32,5.13)
+ (5.04,5.13)
+ (5.76,5.13)
+ (6.48,5.13)
+ (7.2,5.13)
+ (7.92,5.13)
+ (8.64,5.13)
+ (9.36,5.13)
+ (10.1,5.13)
+ (10.8,5.14)
+ (11.5,5.14)
+ (12.2,5.14)
+ (13.0,5.14)
+ (13.7,5.14)
+ (14.4,5.14)
+ (15.1,5.14)
+ (15.8,5.14)
+ (16.6,5.14)
+ (17.3,5.14)
+ (18.0,5.14)
+ (18.7,5.14)
+ (19.4,5.14)
+ (20.2,5.14)
+ (20.9,5.14)
+ (21.6,5.14)
+ (22.3,5.14)
+ (23.0,5.14)
+ (23.8,5.15)
+ (24.5,5.14)
+ (25.2,5.15)
+ (25.9,5.15)
+ (26.6,5.15)
+ (27.4,5.15)
+ (28.1,5.15)
+ (28.8,5.15)
+ (29.5,5.15)
+ (30.2,5.15)
+ (31.0,5.15)
+ (31.7,5.15)
+ (32.4,5.15)
+ (33.1,5.15)
+ (33.8,5.15)
+ (34.6,5.15)
+ (35.3,5.15)
+ (36.0,5.15)
+ (36.7,5.15)
+ (37.4,5.15)
+ (38.2,5.15)
+ (38.9,5.15)
+ (39.6,5.15)
+ (40.3,5.15)
+ (41.0,5.15)
+ (41.8,5.15)
+ (42.5,5.15)
+ (43.2,5.15)
+ (43.9,5.15)
+ (44.6,5.15)
+ (45.4,5.15)
+ (46.1,5.15)
+ (46.8,5.15)
+ (47.5,5.15)
+ (48.2,5.15)
+ (49.0,5.15)
+ (49.7,5.15)
+ (50.4,5.15)
+ (51.1,5.15)
+ (51.8,5.15)
+ (52.6,5.15)
+ (53.3,5.15)
+ (54.0,5.15)
+ (54.7,5.15)
+ (55.4,5.15)
+ (56.2,5.15)
+ (56.9,5.15)
+ (57.6,5.15)
+ (58.3,5.15)
+ (59.0,5.15)
+ (59.8,5.15)
+ (60.5,5.15)
+ (61.2,5.15)
+ (61.9,5.15)
+ (62.6,5.15)
+ (63.4,5.15)
+ (64.1,5.15)
+ (64.8,5.15)
+ (65.5,5.15)
+ (66.2,5.15)
+ (67.0,5.15)
+ (67.7,5.2)
+ (68.4,5.36)
+ (69.1,5.65)
+ (69.8,6.44)
+ (70.6,12.0)
+ (71.3,12.0)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,5.14)
+ (1.0,5.14)
+ (2.0,5.14)
+ (3.0,5.14)
+ (4.0,5.14)
+ (5.0,5.14)
+ (6.0,5.14)
+ (7.0,5.14)
+ (8.0,5.14)
+ (9.0,5.14)
+ (10.0,5.14)
+ (11.0,5.14)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.15)
+ (16.0,5.15)
+ (17.0,5.15)
+ (18.0,5.15)
+ (19.0,5.15)
+ (20.0,5.15)
+ (21.0,5.15)
+ (22.0,5.15)
+ (23.0,5.15)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.16)
+ (35.0,5.16)
+ (36.0,5.16)
+ (37.0,5.16)
+ (38.0,5.16)
+ (39.0,5.16)
+ (40.0,5.16)
+ (41.0,5.16)
+ (42.0,5.16)
+ (43.0,5.16)
+ (44.0,5.16)
+ (45.0,5.16)
+ (46.0,5.16)
+ (47.0,5.16)
+ (48.0,5.16)
+ (49.0,5.16)
+ (50.0,5.16)
+ (51.0,5.16)
+ (52.0,5.16)
+ (53.0,5.16)
+ (54.0,5.16)
+ (55.0,5.16)
+ (56.0,5.16)
+ (57.0,5.16)
+ (58.0,5.16)
+ (59.0,5.16)
+ (60.0,5.16)
+ (61.0,5.16)
+ (62.0,5.17)
+ (63.0,5.16)
+ (64.0,5.17)
+ (65.0,5.16)
+ (66.0,5.16)
+ (67.0,5.17)
+ (68.0,5.17)
+ (69.0,5.17)
+ (70.0,5.17)
+ (71.0,5.17)
+ (72.0,5.17)
+ (73.0,5.17)
+ (74.0,5.17)
+ (75.0,5.17)
+ (76.0,5.17)
+ (77.0,5.17)
+ (78.0,5.17)
+ (79.0,5.17)
+ (80.0,5.17)
+ (81.0,5.17)
+ (82.0,5.17)
+ (83.0,5.17)
+ (84.0,5.17)
+ (85.0,5.17)
+ (86.0,5.17)
+ (87.0,5.17)
+ (88.0,5.17)
+ (89.0,5.17)
+ (90.0,5.17)
+ (91.0,5.17)
+ (92.0,5.17)
+ (93.0,5.17)
+ (94.0,5.17)
+ (95.0,5.17)
+ (96.0,5.27)
+ (97.0,5.6)
+ (98.0,6.87)
+ (99.0,12.0)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,5.1)
+ (-49.0,5.1)
+ (-48.0,5.1)
+ (-47.0,5.1)
+ (-46.0,5.1)
+ (-45.0,5.1)
+ (-44.0,5.1)
+ (-43.0,5.1)
+ (-42.0,5.1)
+ (-41.0,5.1)
+ (-40.0,5.1)
+ (-39.0,5.1)
+ (-38.0,5.1)
+ (-37.0,5.1)
+ (-36.0,5.1)
+ (-35.0,5.1)
+ (-34.0,5.11)
+ (-33.0,5.11)
+ (-32.0,5.11)
+ (-31.0,5.11)
+ (-30.0,5.11)
+ (-29.0,5.11)
+ (-28.0,5.11)
+ (-27.0,5.11)
+ (-26.0,5.11)
+ (-25.0,5.11)
+ (-24.0,5.11)
+ (-23.0,5.11)
+ (-22.0,5.11)
+ (-21.0,5.11)
+ (-20.0,5.11)
+ (-19.0,5.11)
+ (-18.0,5.11)
+ (-17.0,5.11)
+ (-16.0,5.11)
+ (-15.0,5.11)
+ (-14.0,5.11)
+ (-13.0,5.11)
+ (-12.0,5.11)
+ (-11.0,5.11)
+ (-10.0,5.12)
+ (-9.0,5.12)
+ (-8.0,5.12)
+ (-7.0,5.12)
+ (-6.0,5.12)
+ (-5.0,5.13)
+ (-4.0,5.13)
+ (-3.0,5.13)
+ (-2.0,5.13)
+ (-1.0,5.14)
+ (0.0,5.15)
+ (1.0,5.14)
+ (2.0,5.15)
+ (3.0,5.15)
+ (4.0,5.15)
+ (5.0,5.15)
+ (6.0,5.15)
+ (7.0,5.15)
+ (8.0,5.15)
+ (9.0,5.15)
+ (10.0,5.15)
+ (11.0,5.15)
+ (12.0,5.15)
+ (13.0,5.15)
+ (14.0,5.15)
+ (15.0,5.16)
+ (16.0,5.16)
+ (17.0,5.16)
+ (18.0,5.16)
+ (19.0,5.16)
+ (20.0,5.16)
+ (21.0,5.16)
+ (22.0,5.16)
+ (23.0,5.16)
+ (24.0,5.16)
+ (25.0,5.16)
+ (26.0,5.16)
+ (27.0,5.16)
+ (28.0,5.16)
+ (29.0,5.16)
+ (30.0,5.16)
+ (31.0,5.16)
+ (32.0,5.16)
+ (33.0,5.16)
+ (34.0,5.17)
+ (35.0,5.17)
+ (36.0,5.17)
+ (37.0,5.17)
+ (38.0,5.17)
+ (39.0,5.17)
+ (40.0,5.17)
+ (41.0,5.17)
+ (42.0,5.17)
+ (43.0,5.17)
+ (44.0,5.17)
+ (45.0,5.17)
+ (46.0,5.27)
+ (47.0,5.6)
+ (48.0,6.86)
+ (49.0,12.0)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT QC_S1 SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,2400)
+ (6,6750)
+ (36,1320)
+ (50,900)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S2 SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,2400)
+ (6,6750)
+ (36,1320)
+ (50,900)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S3 SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,2400)
+ (6,6750)
+ (36,1320)
+ (50,900)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S4 SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,2400)
+ (6,6750)
+ (36,1320)
+ (50,900)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT S1_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,9e-11)
+ (72,5e-11)
+ (100,9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,5e-11)
+ (72,3e-11)
+ (100,5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S2_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,9e-11)
+ (72,5e-11)
+ (100,9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,5e-11)
+ (72,3e-11)
+ (100,5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S3_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,9e-11)
+ (72,5e-11)
+ (100,9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,5e-11)
+ (72,3e-11)
+ (100,5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S4_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,9e-11)
+ (72,5e-11)
+ (100,9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,5e-11)
+ (72,3e-11)
+ (100,5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT D1_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-9e-11)
+ (72,-5e-11)
+ (100,-9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-5e-11)
+ (72,-3e-11)
+ (100,-5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT D2_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-9e-11)
+ (72,-5e-11)
+ (100,-9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-5e-11)
+ (72,-3e-11)
+ (100,-5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT D3_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-9e-11)
+ (72,-5e-11)
+ (100,-9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-5e-11)
+ (72,-3e-11)
+ (100,-5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT D4_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.248353939414024p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-9e-11)
+ (72,-5e-11)
+ (100,-9e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-3e-11)
+ (50,-5e-11)
+ (72,-3e-11)
+ (100,-5e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
