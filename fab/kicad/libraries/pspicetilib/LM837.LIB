* LM837
*****************************************************************************
* (C) Copyright 2014 Texas Instruments Incorporated. All rights reserved.
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer.
*****************************************************************************
*
** Released by: WEBENCH(R) Design Center, Texas Instruments Inc.
* Part: LM837
* Date: 10/23/2014
* Model Type: All In One
* Simulator: PSPICE 
* Simulator Version: 16.2.0.p001
* EVM Order Number: N/A 
* EVM Users Guide:  N/A 
* Datasheet: SNOSBZ6C –MAY 1999–REVISED MARCH 2013
*
* Model Version: 1.0
*
*****************************************************************************
*
* Updates:
*
* Version 1.0 : Release to Web
*
*****************************************************************************
* Notes:
* 1. The following parameters are modeled: 
*    Input offset voltage, Input offset current, Input bias current, Aol, 
*    Output voltage swing, Common Mode INput Voltage, CMRR, PSRR, Power 
*    Supply Current, Slew Rate, GBW, Input Voltage Noise, Input Current 
*    Noise, Phase Margin.
*
* 2. The following parameters are not modeled: 
*    Harmonic Distortion
*
*****************************************************************************



.subckt LM837 VCC VEE VINM VINP VOUT
XI0 VCC VEE VINM VINP VOUT LM837_HT1
.ends







.subckt ANALOG_BUFFER VOUT VIN
R0 VIN 0 1e9
R1 VOUT 0 1e9
E0 VOUT 0 VIN 0 1
.ends ANALOG_BUFFER


.subckt LM837_HT1 VCC VEE VINM VINP VOUT
E2 NET44 NET0105 POLY(1) VCC VEE  50e-3  1e-9
E1 NET40 NET069 POLY(1) VCC VEE  50e-3  1e-9
XAHDLINV0 NET081 NET083 VCC_INT VEE_INT HPA_INV_IDEAL
L0 NET073 NET069 2e-9
XI44 NET090 NET085 VIMON LM837_Rout_HT1
XAHDLI43 NET067 NET0205 NET081 VCC_INT VEE_INT HPA_OR2
XAHDLI41 VOUT NET082 NET067 VCC_INT VEE_INT HPA_COMP_IDEAL
XAHDLI42 NET084 VOUT NET0205 VCC_INT VEE_INT HPA_COMP_IDEAL
XI21 NET066 NET065 LM837_CMRR_HT1
XI19 VCC_INT VEE_INT NET8 NET066 LM837_PSRR_HT1
XI18 NET058 NET8 LM837_Inoise_HT1
XI17 NET048 NET058 LM837_Vnoise_HT1
XI10 VCC VEE VIMON LM837_ILOAD_HT1
H2 VIMON 0 VCURSOURCEDETECT  1
I5 VCC VEE 9.5e-3
I0 NET041 0 -495e-9
I3 NET065 0 -505e-9
R5 NET048 NET8 1e9
R3 NET086 NET0110 1
R12 NET075 NET073 1.5
R9 VINP NET048 100e-3
R10 VINM NET8 100e-3
R1 VIMON 0 1e9
R0 NET66 NET39 2.013e6
R4 NET069 NET45 1
C3 NET085 NET075 10e-6
C1 NET086 0 12.5e-9
C7 0 NET048 1e-15
C8 NET8 0 1e-15
C6 NET048 NET8 1e-15
C0 NET39 NET66 1e-9
XI23 NET0110 NET0170 ANALOG_BUFFER
XI13 VEE_INT VEE ANALOG_BUFFER
XI12 VCC_INT VCC ANALOG_BUFFER
XI11 NET0105 NET45 ANALOG_BUFFER
XI2 NET085 NET086 ANALOG_BUFFER
D13 VOL NET45 DIDEAL1
D14 NET45 VOH DIDEAL1
D7 NET0168 NET0116 DIDEAL1
D6 NET0135 NET0168 DIDEAL1
D2 NET46 NET041 DIDEAL1
D1 NET041 NET25 DIDEAL1
D4 NET065 NET27 DIDEAL1
D3 NET48 NET065 DIDEAL1
D9 NET069 NET44 DIDEAL1
D8 NET0105 NET40 DIDEAL1
V22 VOH NET082 10e-3
V23 NET084 VOL 10e-3
V20 NET0145 VEE_INT 800e-3
V21 VCC_INT NET0183 800e-3
V18 NET090 NET073 0
V7 NET041 NET058 300e-6
V12 VCC_INT NET0116 -30
V14 NET0135 VEE_INT -30
V1 NET67 NET39
V2 NET66 0 0
V3 NET46 VEE_INT 1
V6 NET48 VEE_INT 1
V0 NET39 NET0170
V5 VCC_INT NET27 1
V4 VCC_INT NET25 1
VCURSOURCEDETECT NET45 NET59 0
VCURSINKDETECT VOUT NET59 0
GAHDLI6 NET66 NET67 VALUE { LIMIT(V(NET041,NET065)*157e-3, -10e-3, 10e-3) }
H5 NET0183 VOH POLY(1) Vcursourcedetect  0  70  0  0  1e-9  0  0  0  0  0  1e-9
H6 VOL NET0145 POLY(1) Vcursinkdetect  0  70  0  0  1e-9  0  0  0  0  0  1e-9
.ends LM837_HT1




.SUBCKT HPA_OR2 1 2 3 VDD VSS
E1 4 0 VALUE = { IF( ((V(1)< (V(VDD)+V(VSS))/2 ) & (V(2)< (V(VDD)+V(VSS))/2 )), V(VSS), V(VDD) ) }
R1 4 3 1
C1 3 0 1e-12
.ENDS


.SUBCKT HPA_INV_IDEAL 1 2 VDD VSS
E1 2 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
.ENDS


.SUBCKT HPA_COMP_IDEAL INP INN OUT VDD VSS
E1 OUT 0 VALUE = { IF( (V(INP) > V(INN)), V(VDD), V(VSS) ) }
.ENDS


.MODEL DIDEAL1 D N=0.1m
.MODEL NMOS1 NMOS LEVEL=1 KP=100

.SUBCKT LM837_Rout_HT1 A B VIMON
.PARAM Ro_Iout_0A = 125
.PARAM Multiplier = 0


G1 A B VALUE = { V(A,B) * 1/(Ro_Iout_0A - Multiplier * ABS(V(VIMON)) )  }

.ENDS


.SUBCKT LM837_ILOAD_HT1  VDD VSS VIMON
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0,V(VIMON),0)}
G2 VSS 0 VALUE = {IF(V(VIMON) < 0,V(VIMON),0)}
.ENDS


.SUBCKT LM837_Vnoise_HT1 A B
.PARAM X = { 20  }
.PARAM Y = { 10 }
.PARAM Z = { 4.5  }
X1 A B VNSE PARAMS: NLF = { Y } FLW = { X }  NVR = { Z }
.ENDS


.SUBCKT LM837_Inoise_HT1 A B
.PARAM X = { 35    }
.PARAM Y = { 1.0e6 }
.PARAM Z = { 0.7e6 }
X1 A B FEMT PARAMS: NLFF = { Y }  FLWF = { X } NVRF = { Z }
.ENDS


.SUBCKT LM837_PSRR_HT1 VDD VSS A B

X1 VDD VSS A B 0 PSRR_DUAL_NEW
+ PARAMS: PSRRP = 110 FPSRRP = 3k
+ PSRRN = 93 FPSRRN = 500
.ENDS


.SUBCKT LM837_CMRR_HT1 A B

X1 A B 0 CMRR_NEW PARAMS: CMRR = 100 FCMRR = 3K
.ENDS



.SUBCKT VNSE  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS



.SUBCKT FEMT  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS






.SUBCKT PSRR_SINGLE   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}
E1  VO VI 1 GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_SINGLE_NEW   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VO VI 1a GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

E1  VO VI VALUE = {V(1,GNDF) + V(3,GNDF)}
C3  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL_NEW   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}

G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}


G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}


E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS



.SUBCKT CMRR   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
E1  VI VO 1 GNDF 1
.ENDS

.SUBCKT CMRR_NEW   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VI VO 1a GNDF 1
.ENDS







