*$
* LMZ23603
*****************************************************************************
* (C) Copyright 2013 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer
*****************************************************************************
*
* This model is subject to change without notice. Texas Instruments
* Incorporated is not responsible for updating this model.
*
*****************************************************************************
*
** Released by: WEBENCH Design Center, Texas Instruments Inc.
* Part: LMZ23603
* Date: 03JAN2013
* Model Type: AVERAGE
* Simulator: PSPICE
* Simulator Version: 16.2.0.p001
* EVM Order Number: AN-2085 LMZ23605/03 LMZ22005/03
* EVM Users Guide: SNVA457A Revised March 2011
* Datasheet: SNVS711G – Revised August 2012
*
* Model Version: Final 1.00
*
*****************************************************************************
*
* Updates:
*
* Final 1.00
* Release to Web.
*
****************************************************************************
.SUBCKT LMZ23603_AVG VIN AGND FB VOUT PARAMS: VIN=18 VOUT=3.3
.PARAM c1_den = {-1*{VOUT}/({VIN}*800000)}
RDCR 21 VOUT 10M
L1 VSW 21 2.2E-6
E_BEFF VIN VINP value = {(1-0.99)*V(VIN)}
GM1 AGND VC REF FB 200U
G_B4 AGND VSWX value = { IF(V(IV)>0 ,V(ILS) ,V(IL))}
CC3 29 AGND 50P
E_BAVERAGE IL AGND value = { 2.2E-6 * 800000.0 *(V(IP)**2-V(IV)**2)/2*(1/V(VSW) + 1/V(VON))}
XAHS IL ILS S_XFER PARAMS: c1_den = {c1_den}
RC4 VC 29 5MEG
C4 VSW 21 12P
E_BRAMPX VC VR value = {V(VINP)*(1/(3MEG * 32P * 800000.0 ))*V(D)}
E_BPEAKX IPX AGND value = { V(VR)/0.01}
E_BVALLEY IV AGND value = {V(IVX)}
E_BDUTY D AGND value = { IF(V(DX) < 0 , 0 , V(DX))}
E_BDUTYX DX AGND value = { IF(( 2.2E-6 * 800000.0 *(V(IP)-V(IV))/V(VON)) > 0.99 , 
+ 0.99 , ( 2.2E-6 * 800000.0*(V(IP)-V(IV))/V(VON)))}
E_BPEAK IP AGND value = { IF(V(IPX) > 0 , V(IPX) , 0)}
E_BVALLEYX IVX AGND value = {(V(IP)-V(VSW)*(1-V(VSW)/V(VINP))/( 2.2E-6 * 800000.0 ))}
XBUFF1 29 18 GAIN_0
R9 VC 18 12K
R8 31 VC 268K
V2 REF AGND DC=0.8
G_BIN VINP AGND value = {V(VSW)*I(VIL1)/(V(VINP))}
VIL1 VSWX VSW DC=0
C7 VC AGND 1P
D1X VSWX VINP _D1_MOD
.MODEL _D1_MOD D AF=1 BV=50 CJO=5.37397E-11 EG=0.849639  FC=0.5 IBV=0.000002 
+ IS=9.82502E-09 KF=0 M=0.515449  N=1.57715 RS=0.0304421 TT=0 VJ=1.24876 XTI=0.5
C8 31 AGND 40P
E_BON VON AGND value = {V(VINP,VSW)}
.ENDS LMZ23603_AVG
*$
.SUBCKT S_XFER 1 2 PARAMS: IN_OFFSET=0	GAIN=1 c0_num=1 c2_den=1.583143494411528E-13 
+ c1_den=-2.2916666666666666E-7 c0_den=1 out_ic=0 denorm_freq=1
ES_XFER 2 0 LAPLACE {IN_OFFSET+GAIN*V(1)}={(c0_num/(c2_den*s*s+c1_den*s+c0_den))}
.ENDS
*$
.SUBCKT GAIN_0 1 2
E1 2 0 1 0 1.0
.ENDS
*$
.SUBCKT Cout 2 4
R1 2 3 0.015
C1 3 1 1.672E-4 
R3 5 4 150
R2 2 4 5980861.244019139
R4 3 26 7.9209497081382733E17
R6 3 7 7.920949708138274E11
C5 7 1 1.583143494411528E-13 
R7 3 10 7.920949708138274E11
C6 10 1 1.583143494411528E-13 
R8 3 13 7.920949708138274E11
C7 13 1 1.583143494411528E-13 
C2 26 1 1.583143494411528E-13 
R9 3 28 7.920949708138274E15
C3 28 1 1.583143494411528E-13 
R10 3 29 7.920949708138273E13
C4 29 1 1.583143494411528E-13 
L8 1 5 0.2e-9
R24 1 5 0.045
L12 5 4 10e-12
.ENDS
*$