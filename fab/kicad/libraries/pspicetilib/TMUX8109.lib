.SUBCKT TMUX8109 A0 EN VSS S1A S2A S3A S4A DA DB S4B S3B S2B S1B VDD GND A1 
*Supply currents
X_U1    VSS GND I_VSS
X_U2    VDD GND I_VDD
*I/O diodes
X_U3    VSS S1A ESD_diode
X_U4    S1A VDD ESD_diode
X_U5    VSS S2A ESD_diode
X_U6    S2A VDD ESD_diode
X_U7    VSS S3A ESD_diode
X_U8    S3A VDD ESD_diode
X_U9    VSS S4A ESD_diode
X_U10    S4A VDD ESD_diode
X_U11    VSS S1B ESD_diode
X_U12    S1B VDD ESD_diode
X_U13    VSS S2B ESD_diode
X_U14    S2B VDD ESD_diode
X_U15    VSS S3B ESD_diode
X_U16    S3B VDD ESD_diode
X_U17    VSS S4B ESD_diode
X_U18    S4B VDD ESD_diode
X_U19    VSS DA ESD_diode
X_U20    DA VDD ESD_diode
X_U21    VSS DB ESD_diode
X_U22    DB VDD ESD_diode
*Comparators (VIH/VIL)
X_U23    VDD_L VDD VDD_NL GND COMPARATOR_VDD
X_U24    EN_L EN EN_NL GND COMPARATOR_EN
X_U25    A0_L A0 A0_NL GND COMPARATOR_A0
X_U26    A1_L A1 A1_NL GND COMPARATOR_A1
*Input delays
X_U27    VDD_NL VDD GND VDD_L Delay_VDD
R1    VDD_L  GND    50
X_U28    EN_NL VDD GND EN_L Delay_EN
R2    EN_L  GND    50
X_U29    A1_NL VDD GND A1_L Delay_A1
R3    A1_L  GND    50
X_U30    A0_NL VDD GND A0_L Delay_A0
R4    A0_L  GND    50
*LOGIC
X_U31    VDD_L EN_L A1_L A0_L SW_S1A_L SW_S2A_L SW_S3A_L SW_S4A_L SW_S1B_L SW_S2B_L SW_S3B_L SW_S4B_L SW_DA_L SW_DB_L SW_S1ADA_L SW_S2ADA_L SW_S3ADA_L SW_S4ADA_L SW_S1BDB_L SW_S2BDB_L SW_S3BDB_L SW_S4BDB_L GND LOGIC
*Output delays
X_U32    SW_S1A_L VDD GND SW_S1A Delay_SW_S1A
X_U33    SW_S2A_L VDD GND SW_S2A Delay_SW_S2A
X_U34    SW_S3A_L VDD GND SW_S3A Delay_SW_S3A
X_U35    SW_S4A_L VDD GND SW_S4A Delay_SW_S4A
X_U36    SW_S1B_L VDD GND SW_S1B Delay_SW_S1B
X_U37    SW_S2B_L VDD GND SW_S2B Delay_SW_S2B
X_U38    SW_S3B_L VDD GND SW_S3B Delay_SW_S3B
X_U39    SW_S4B_L VDD GND SW_S4B Delay_SW_S4B
X_U40    SW_DA_L VDD GND SW_DA Delay_SW_DA
X_U41    SW_DB_L VDD GND SW_DB Delay_SW_DB
X_U42    SW_S1ADA_L VDD GND SW_S1ADA Delay_SW_S1ADA
X_U43    SW_S2ADA_L VDD GND SW_S2ADA Delay_SW_S2ADA
X_U44    SW_S3ADA_L VDD GND SW_S3ADA Delay_SW_S3ADA
X_U45    SW_S4ADA_L VDD GND SW_S4ADA Delay_SW_S4ADA
X_U46    SW_S1BDB_L VDD GND SW_S1BDB Delay_SW_S1BDB
X_U47    SW_S2BDB_L VDD GND SW_S2BDB Delay_SW_S2BDB
X_U48    SW_S3BDB_L VDD GND SW_S3BDB Delay_SW_S3BDB
X_U49    SW_S4BDB_L VDD GND SW_S4BDB Delay_SW_S4BDB
*Switch I/O (COFF, CON, ION, IOFF, BW)
X_U50    S1A VSS VDD SW_S1A GND S1A_IO
X_U51    S2A VSS VDD SW_S2A GND S2A_IO
X_U52    S3A VSS VDD SW_S3A GND S3A_IO
X_U53    S4A VSS VDD SW_S4A GND S4A_IO
X_U54    S1B VSS VDD SW_S1B GND S1B_IO
X_U55    S2B VSS VDD SW_S2B GND S2B_IO
X_U56    S3B VSS VDD SW_S3B GND S3B_IO
X_U57    S4B VSS VDD SW_S4B GND S4B_IO
X_U58    DA VSS VDD SW_DA GND DA_IO
X_U59    DB VSS VDD SW_DB GND DB_IO
*Switch blocks (Ron, OISO)
X_U60    S1A DA VSS VDD GND SW_S1ADA SWITCH_S1A
X_U61    S2A DA VSS VDD GND SW_S2ADA SWITCH_S2A
X_U62    S3A DA VSS VDD GND SW_S3ADA SWITCH_S3A
X_U63    S4A DA VSS VDD GND SW_S4ADA SWITCH_S4A
X_U64    S1B DB VSS VDD GND SW_S1BDB SWITCH_S1B
X_U65    S2B DB VSS VDD GND SW_S2BDB SWITCH_S2B
X_U66    S3B DB VSS VDD GND SW_S3BDB SWITCH_S3B
X_U67    S4B DB VSS VDD GND SW_S4BDB SWITCH_S4B
*switch to switch capacitance (XTALK)
C1 S1A S2A 1.0474207760217132e-14
C2 S1A S3A 1.0474207760217132e-14
C3 S1A S4A 1.0474207760217132e-14
C4 S1A S4B 1.0474207760217132e-14
C5 S1A S3B 1.0474207760217132e-14
C6 S1A S2B 1.0474207760217132e-14
C7 S1A S1B 1.0474207760217132e-14
C8 S2A S3A 1.0474207760217132e-14
C9 S2A S4A 1.0474207760217132e-14
C10 S2A S4B 1.0474207760217132e-14
C11 S2A S3B 1.0474207760217132e-14
C12 S2A S2B 1.0474207760217132e-14
C13 S2A S1B 1.0474207760217132e-14
C14 S3A S4A 1.0474207760217132e-14
C15 S3A S4B 1.0474207760217132e-14
C16 S3A S3B 1.0474207760217132e-14
C17 S3A S2B 1.0474207760217132e-14
C18 S3A S1B 1.0474207760217132e-14
C19 S4A S4B 1.0474207760217132e-14
C20 S4A S3B 1.0474207760217132e-14
C21 S4A S2B 1.0474207760217132e-14
C22 S4A S1B 1.0474207760217132e-14
C23 S4B S3B 1.0474207760217132e-14
C24 S4B S2B 1.0474207760217132e-14
C25 S4B S1B 1.0474207760217132e-14
C26 S3B S2B 1.0474207760217132e-14
C27 S3B S1B 1.0474207760217132e-14
C28 S2B S1B 1.0474207760217132e-14
C29 DA DB 1.0474207760217132e-14
*Charge injection blocks (Qc)
X_U68    S1A VSS VDD DA SW_S1ADA GND GND QC_S1A
X_U69    S2A VSS VDD DA SW_S2ADA GND GND QC_S2A
X_U70    S3A VSS VDD DA SW_S3ADA GND GND QC_S3A
X_U71    S4A VSS VDD DA SW_S4ADA GND GND QC_S4A
X_U72    S1B VSS VDD DB SW_S1BDB GND GND QC_S1B
X_U73    S2B VSS VDD DB SW_S2BDB GND GND QC_S2B
X_U74    S3B VSS VDD DB SW_S3BDB GND GND QC_S3B
X_U75    S4B VSS VDD DB SW_S4BDB GND GND QC_S4B
.ENDS TMUX8109 
*$
*These circuits add a series diode that simulates an ESD diode from IN (-) to OUT (+)
*This diode will not cause a failure when IN > OUT but may show a large increase in current consumption 
*$
.SUBCKT ESD_Diode IN OUT
*
.MODEL DCLAMP D(IS=1E-15 IBV=1E-13 ISR = 1E-15)
D1 IN OUT DCLAMP
*
.ENDS
*$
*These circuits add a parallel current source/sink to simulate supply current consumption, based on the table
*
.SUBCKT I_VDD VDD GND
*
EI_VDD NVDD GND TABLE {V(VDD,GND)} = 
+ (0.0,0.0)
+ (4.4,0.0001)
+ (4.5,0.00011)
+ (72.0,0.00028)
+ (100.0,0.00028)
*
GVDD VDD GND VALUE = {(V(NVDD)+1p)}
*
.ENDS
.SUBCKT I_VSS VSS GND
*
EI_VSS NVSS GND TABLE {V(VSS,GND)} = 
+ (-50.0,-0.00028)
+ (-36.0,-0.00028)
+ (-5.0,-0.00011)
+ (0.0,0.0)
*
GVSS VSS GND VALUE = {(V(NVSS)+1p)}
*
.ENDS
*
*These circuits compare the current state and the input voltage to find the new state
*if the current state is on (1) then we will change states if VIN goes below VIL (1 to 0)
*if the current state is on (0) then we will change states if VIN goes above VIH (0 to 1)
.SUBCKT COMPARATOR_VDD  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (4.399,0)
+ (4.4,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (4.199,0)
+ (4.2,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_EN  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_A0  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
.SUBCKT COMPARATOR_A1  STATE VIN NEWSTATE GND
EVIH VIH GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (1.249,0)
+ (1.25,1)
EVIL VIL GND TABLE {V(VIN,GND)} = 
+ (0,0)
+ (0.849,0)
+ (0.85,1)
EOUT NEWSTATE GND VALUE = { IF (V(STATE, GND)>0.63, V(VIH,GND), V(VIL,GND) ) }
.ENDS
*$
*These circuits handle all the logic for the device
*this does NOT handle timing delays or VIH VIL, all signals here are 1/0 logic
*VDD EN A1 A0    SW_S1A SW_S2A SW_S3A SW_S4A SW_S1B SW_S2B SW_S3B SW_S4B SW_DA SW_DB SW_S1ADA SW_S2ADA SW_S3ADA SW_S4ADA SW_S1BDB SW_S2BDB SW_S3BDB SW_S4BDB 
*1   1  0  0     1      0      0      0      1      0      0      0      1     1     1        0        0        0        1        0        0        0        
*1   1  0  1     0      1      0      0      0      1      0      0      1     1     0        1        0        0        0        1        0        0        
*1   1  1  0     0      0      1      0      0      0      1      0      1     1     0        0        1        0        0        0        1        0        
*1   1  1  1     0      0      0      1      0      0      0      1      1     1     0        0        0        1        0        0        0        1        
*$
.SUBCKT LOGIC  LVDD LEN LA1 LA0 SW_S1A SW_S2A SW_S3A SW_S4A SW_S1B SW_S2B SW_S3B SW_S4B SW_DA SW_DB SW_S1ADA SW_S2ADA SW_S3ADA SW_S4ADA SW_S1BDB SW_S2BDB SW_S3BDB SW_S4BDB GND
*
*convert analog RC to 1/0 digital
ELVDD_DIG LVDD_DIG GND VALUE = {IF (V(LVDD,GND)>0.63,1, 0) }
ELEN_DIG LEN_DIG GND VALUE = {IF (V(LEN,GND)>0.63,1, 0) }
ELA1_DIG LA1_DIG GND VALUE = {IF (V(LA1,GND)>0.63,1, 0) }
ELA0_DIG LA0_DIG GND VALUE = {IF (V(LA0,GND)>0.63,1, 0) }
*Create an inverse of all inputs in case they need to be used
ELVDD_DIGN LVDD_DIGN GND VALUE = { 1 - V(LVDD_DIG, GND)}
ELEN_DIGN LEN_DIGN GND VALUE = { 1 - V(LEN_DIG, GND)}
ELA1_DIGN LA1_DIGN GND VALUE = { 1 - V(LA1_DIG, GND)}
ELA0_DIGN LA0_DIGN GND VALUE = { 1 - V(LA0_DIG, GND)}
*
*Determine output states and rectify outputs
ELSW_S1A LSW_S1A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S1A SW_S1A GND VALUE = { IF (V(LSW_S1A, GND)>0.5,1,0) }
ELSW_S2A LSW_S2A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S2A SW_S2A GND VALUE = { IF (V(LSW_S2A, GND)>0.5,1,0) }
ELSW_S3A LSW_S3A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S3A SW_S3A GND VALUE = { IF (V(LSW_S3A, GND)>0.5,1,0) }
ELSW_S4A LSW_S4A GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S4A SW_S4A GND VALUE = { IF (V(LSW_S4A, GND)>0.5,1,0) }
ELSW_S1B LSW_S1B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S1B SW_S1B GND VALUE = { IF (V(LSW_S1B, GND)>0.5,1,0) }
ELSW_S2B LSW_S2B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S2B SW_S2B GND VALUE = { IF (V(LSW_S2B, GND)>0.5,1,0) }
ELSW_S3B LSW_S3B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S3B SW_S3B GND VALUE = { IF (V(LSW_S3B, GND)>0.5,1,0) }
ELSW_S4B LSW_S4B GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S4B SW_S4B GND VALUE = { IF (V(LSW_S4B, GND)>0.5,1,0) }
ELSW_DA LSW_DA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) 
+ * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_DA SW_DA GND VALUE = { IF (V(LSW_DA, GND)>0.5,1,0) }
ELSW_DB LSW_DB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) 
+ * V(LA0_DIGN,GND) + V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_DB SW_DB GND VALUE = { IF (V(LSW_DB, GND)>0.5,1,0) }
ELSW_S1ADA LSW_S1ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S1ADA SW_S1ADA GND VALUE = { IF (V(LSW_S1ADA, GND)>0.5,1,0) }
ELSW_S2ADA LSW_S2ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S2ADA SW_S2ADA GND VALUE = { IF (V(LSW_S2ADA, GND)>0.5,1,0) }
ELSW_S3ADA LSW_S3ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S3ADA SW_S3ADA GND VALUE = { IF (V(LSW_S3ADA, GND)>0.5,1,0) }
ELSW_S4ADA LSW_S4ADA GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S4ADA SW_S4ADA GND VALUE = { IF (V(LSW_S4ADA, GND)>0.5,1,0) }
ELSW_S1BDB LSW_S1BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIGN,GND) }
ESW_S1BDB SW_S1BDB GND VALUE = { IF (V(LSW_S1BDB, GND)>0.5,1,0) }
ELSW_S2BDB LSW_S2BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIGN,GND) * V(LA0_DIG,GND) }
ESW_S2BDB SW_S2BDB GND VALUE = { IF (V(LSW_S2BDB, GND)>0.5,1,0) }
ELSW_S3BDB LSW_S3BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIGN,GND) }
ESW_S3BDB SW_S3BDB GND VALUE = { IF (V(LSW_S3BDB, GND)>0.5,1,0) }
ELSW_S4BDB LSW_S4BDB GND VALUE = { V(LVDD_DIG,GND) * V(LEN_DIG,GND) * V(LA1_DIG,GND) * V(LA0_DIG,GND) }
ESW_S4BDB SW_S4BDB GND VALUE = { IF (V(LSW_S4BDB, GND)>0.5,1,0) }
*
.ENDS
*$
*These circuits add a RC delay in series to the In and OUT signal
*split delays depending on if IN is going high to low or low to high
*if IN is going high to low, the R needs to be adjusted by /0.46471 to convert the 0.37% time to 0.63%
*TON_TOFF_SUPPLY
.SUBCKT Delay_VDD  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (5,1000.0)
+ (100,1000.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (5,1075.948)
+ (100,1075.948)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TON_TOFF_EN
.SUBCKT Delay_EN  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_A0  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,150.0)
+ (100,150.0)
+ (36,150.0)
+ (50,150.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,322.7844)
+ (100,322.7844)
+ (36,322.7844)
+ (50,322.7844)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TTRAN
.SUBCKT Delay_A1  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,150.0)
+ (100,150.0)
+ (36,150.0)
+ (50,150.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,322.7844)
+ (100,322.7844)
+ (36,322.7844)
+ (50,322.7844)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4A  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4B  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_DA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*BUFFER
.SUBCKT Delay_SW_DB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,100.0)
+ (100,100.0)
+ (36,100.0)
+ (50,100.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,215.1896)
+ (100,215.1896)
+ (36,215.1896)
+ (50,215.1896)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4ADA  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S1BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S2BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S3BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
*TBBM
.SUBCKT Delay_SW_S4BDB  IN VDD GND OUT
*
C1 OUT_ONDLY GND 1e-09
ERON NRON GND TABLE {V(VDD,GND)} =
+ (72,1350.0)
+ (100,1350.0)
+ (36,1350.0)
+ (50,1350.0)
R1 OUT_ONDLY IN 10e9
GRON OUT_ONDLY IN VALUE = {V(OUT_ONDLY,IN)/V(NRON)}
*
EOUT_ONREC OUT_ONREC GND VALUE = { V(OUT_ONDLY, GND)}
*
S_ON OUT_ONREC OUT IN GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
C2 OUT_OFFDLY GND 1e-09
EROFF NROFF GND TABLE {V(VDD,GND)} =
+ (72,1183.5428)
+ (100,1183.5428)
+ (36,1183.5428)
+ (50,1183.5428)
R2 OUT_OFFDLY IN 10e9
GROFF OUT_OFFDLY IN VALUE = {V(OUT_OFFDLY,IN)/V(NROFF)}
*
EOUT_OFFREC OUT_OFFREC GND VALUE = { V(OUT_OFFDLY, GND)}
*
S_OFF OUT_OFFREC OUT IN GND  SWOFF
.MODEL SWOFF VSWITCH Roff=1e9 Ron=0.001 Voff=0.63V Von=0.37V
*
.ENDS
*
.SUBCKT SWITCH_S1A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.45
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S2A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -0.53
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S3A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.47
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S4A SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -0.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S1B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = -0.58
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S2B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.43
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S3B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.5
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT SWITCH_S4B SX DX VSS VDD GND SWx
*
.PARAM Ron_offset = 0.49
*
*Cap S to D
**see documentation for CTHRU calculation based on OISO
CTHRU SX DX 1.0474207760217132e-14
*
*ONOFF switches
S_ON DX DX_SWON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
*Ron tables
ERON_P72m0 NRON_P72m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (36.0,37)
+ (43.2,37)
+ (50.400000000000006,37)
+ (57.60000000000001,37)
+ (64.80000000000001,37)
+ (66.0,37)
+ (67.0,37)
+ (68.0,37)
+ (69.0,45)
+ (71.0,250)
+ (72.00000000000001,300)
ERON_P100m0 NRON_P100m0 GND TABLE {V(SX,GND)} = 
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (50.0,37)
+ (60.0,37)
+ (70.0,37)
+ (80.0,37)
+ (90.0,37)
+ (95.0,37)
+ (96.0,37)
+ (97.0,37)
+ (98.0,45)
+ (99.0,250)
+ (100.0,300)
ERON_P36m36 NRON_P36m36 GND TABLE {V(SX,GND)} = 
+ (-36.0,37)
+ (-28.8,37)
+ (-21.6,37)
+ (-14.400000000000002,37)
+ (-7.200000000000002,37)
+ (0.0,37)
+ (7.2,37)
+ (14.4,37)
+ (21.6,37)
+ (28.8,37)
+ (31.0,37)
+ (32.0,37)
+ (33.0,37)
+ (34.0,45)
+ (35.0,250)
+ (36.0,300)
ERON_P50m50 NRON_P50m50 GND TABLE {V(SX,GND)} = 
+ (-50.0,37)
+ (-40.0,37)
+ (-30.0,37)
+ (-20.0,37)
+ (-10.0,37)
+ (0.0,37)
+ (10.0,37)
+ (20.0,37)
+ (30.0,37)
+ (40.0,37)
+ (42.0,37)
+ (44.0,37)
+ (46.0,37)
+ (48.0,45)
+ (49.0,250)
+ (50.0,300)
*
*RON modeled as a current depending on S to D voltage
GRON SX DX_SWON VALUE = {V(SX,DX_SWON)/(
+ IF (V(SWx,GND) < 0.63, 50e15,
+ IF (V(VSS,GND) >= 0 ,
+ IF (V(VDD,GND) <= 72, V(NRON_P72m0) - Ron_offset,
+ IF (V(VDD,GND) <= 100, V(NRON_P100m0) - Ron_offset,
+ 50e15 )),
+ IF (V(VDD,GND) <= 36, V(NRON_P36m36) - Ron_offset,
+ IF (V(VDD,GND) <= 50, V(NRON_P50m50) - Ron_offset,
+ 50e15 ))

+ ))) }
*
.ENDS
*$
.SUBCKT QC_S1A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S2A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S3A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S4A SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S1B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S2B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S3B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT QC_S4B SX VSS VDD DX SWx GND LO
*
*C1 and C2 can be increased to increase the range of the Qc and EQC_V is a ratio (0% to 100%) 
*
C1 SX QC_mid 1.5pF
C2 DX QC_mid 1.5pF
EQC_VSW QC_VSW GND TABLE {V(SWx, GND)} = 
+(0,0)
+(0.37,0)
+(0.63, 1)
+(1, 1)
EQC_VS QC_VS GND TABLE {V(SX, GND)} = 
+ (0,380)
+ (6,1100)
+ (36,220)
+ (50,150)
*
EQC_mid QC_mid LO_1 VALUE = { V(VDD, GND) * V(QC_VSW, GND) * V(QC_VS, GND)/100 }
RQC_mid LO_1 LO 50
*
.ENDS
*$
.SUBCKT S1A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S2A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S3A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S4A_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S1B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S2B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S3B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT S4B_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 11.405732130158047p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,3e-11)
+ (50,4e-11)
+ (72,4e-11)
+ (100,6e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,5e-12)
+ (50,8e-11)
+ (72,5e-11)
+ (100,8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT DA_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 6.937154753438698p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-5e-11)
+ (50,-8e-11)
+ (72,-5e-11)
+ (100,-8e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,-1e-14)
+ (36,-5e-12)
+ (50,-8e-11)
+ (72,-5e-11)
+ (100,-8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
.SUBCKT DB_IO IN VSS VDD SWx GND
*
*static cap to gnd (COFF)
**see documentation for COFF calculation based on OISO
COFF IN GND 6.937154753438698p
*
*Cap IN to GND additional cap when ON
**see documentation for CON calculation based on BW
CON_2 IN_CAPON GND 0.0005p
S_ON IN IN_CAPON SWx GND  SWON
.MODEL SWON VSWITCH Roff=1e9 Ron=0.001 Voff=0.37V Von=0.63V
*
* Leakage table IOFF
EIOFF NIOFF GND TABLE {V(VDD,VSS)} = 
+ (0,1e-14)
+ (36,-5e-11)
+ (50,-8e-11)
+ (72,-5e-11)
+ (100,-8e-11)
*
* Leakage table ION
EION NION GND TABLE {V(VDD,VSS)} = 
+ (0,-1e-14)
+ (36,-5e-12)
+ (50,-8e-11)
+ (72,-5e-11)
+ (100,-8e-11)
*
GLEAK IN GND VALUE = { IF (V(SWx, GND)>0.63,V(NION),V(NIOFF)) }
*
.ENDS
*$
