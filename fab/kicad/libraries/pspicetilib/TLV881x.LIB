*$
* TLV881x
*****************************************************************************
* (C) Copyright 2022 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer
*****************************************************************************
*
* This model is subject to change without notice. Texas Instruments
* Incorporated is not responsible for updating this model.
*
*****************************************************************************
*
** Released by: Online Design Tools, Texas Instruments Inc.
* Part: TLV881x
* Date: 25FEB2022
* Model Type: Generic (suitable for all analysis types)
* EVM Order Number: N/A 
* EVM Users Guide:  N/A 
* Datasheet: SNOSD35A -OCTOBER 2016-REVISED NOVEMBER 2016
*
* Model Version: Final 1.2
*
*****************************************************************************
*
* Updates:
*
* Final 1.2
* 1. Updated the model name from TLV8811 to TLV881x.
*
* Final 1.1
* 1. Connect the VINRANGE block's power supply to VCC and VEE rather than 
*    VCC_INT and VEE_INT so that diode leakage can be seen through power  
*    supply line.
*
* Final 1.0 
* Release to Web.
*
*****************************************************************************
* Model Usage Notes:
* 1. The following parameters are modeled: 
*    Aol,GBW,PM,SR,Vos,Ibias,Ioffset,IbiasP,IbiasN,CMRR_TLV881x,PSRR,
*    Voltage Noise,Current Noise,zincm,Zindiff,Zool,Zocl,Voh,Vol,Vih,Vil
*    Iq/channel,Isc(I_source),Isc(I_sink)
* 2. TLV881x model is available in single core(TLV8811) and dual core(TLV8812). 
*****************************************************************************
.SUBCKT TLV881x +INA -INA V+ V- OUTA 
*****************************************************************************
XI0 V- V+ -INA +INA OUTA PD DALLASAMP_HT4_TLV881x
VPD V+ PD 
.ENDS TLV881x
*
.SUBCKT ANALOG_BUFFER_TLV881x VOUT VIN
R0 VIN 0 1e9
R1 VOUT 0 1e9
E0 VOUT 0 VIN 0 1
.ENDS ANALOG_BUFFER_TLV881x
*
.SUBCKT DALLASAMP_DOMPOLE_HT4_TLV881x A B
R0 B A 2.705e+06
C0 A B 5.55e-05
.ENDS DALLASAMP_DOMPOLE_HT4_TLV881x
*
.SUBCKT DALLASAMP_NONDOMPOLE_HT4_TLV881x VIN VOUT
XI23 NET4 VIN ANALOG_BUFFER_TLV881x
C1 VOUT 0 5.25e-06
R1 VOUT NET4 1
.ENDS DALLASAMP_NONDOMPOLE_HT4_TLV881x
*
.SUBCKT DALLASAMP_OUTPUTCIR_HT4_TLV881x PD VCC VCCMAIN VEE VEEMAIN VIN VOUT
XI21 NET75 NET76 VCC VEE DallasAmp_OutputCir_IsourceVlimit_HT4_TLV881x
XI20 NET79 NET092 VCC VEE DallasAmp_OutputCir_IsinkVlimit_HT4_TLV881x
XI17 VOL VEE VIMONINV DallasAmp_OutputCir_VOL_HT4_TLV881x
XI16 VCC VOH VIMON DallasAmp_OutputCir_VOH_HT4_TLV881x
DISOURCE NET092 NET75 OutputCir_Isc_DIDEAL
DISINK NET76 NET79 OutputCir_Isc_DIDEAL
XI14 NET070 NET15 DallasAmp_DiodeIdeal_HT4_TLV881x
XI15 NET068 VOL DallasAmp_DiodeIdeal_HT4_TLV881x
XI0 VCCMAIN VEEMAIN VIMON PD DallasAmp_OutputCir_ILOAD_HT4_TLV881x
XI6 NET22 NET0100 0 NET043 VCC VEE RECOVERYSIGNAL DallasAmp_OutputCir_RecoveryAssist_HT4_TLV881x
XAHDLI43 NET055 NET054 RECOVERYSIGNAL VCC VEE HPA_OR2_TLV881x
XAHDLI41 VOUT NET067 NET055 VCC VEE HPA_COMP_IDEALL_TLV881x
XAHDLI42 NET059 VOUT NET054 VCC VEE HPA_COMP_IDEALL_TLV881x
HVIMONINV VIMONINV 0 VCURSINKDETECT  1
HVIMON VIMON 0 VCURSOURCEDETECT  1
RVIMONINV VIMONINV 0 1e9
RVIMON VIMON 0 1e9
RISC NET092 NET15 1
XI11 NET76 NET15 ANALOG_BUFFER_TLV881x
XI2 NET22 VIN ANALOG_BUFFER_TLV881x
VPROBE3 NET070 VOH 0
VPROBE2 NET043 NET0100 0
VTRIGGERVOL NET059 VOL 10e-3
VTRIGGERVOH VOH NET067 10e-3
VPROBE4 NET068 NET15 0
VCURSOURCEDETECT NET15 NET34 0
VCURSINKDETECT VOUT NET34 0
VPROBE1 NET53 NET17 0
XI1 NET53 NET22 VIMON DallasAmp_OutputCir_Rout_HT4_TLV881x
COUT NET22 NET0100 0.78e-3
ROUTMINOR NET0100 NET17 390
LOUT1 NET17 NET17092  16
CBYP  NET17 NET1717092  100n
RBYP  NET1717092 NET17092  200k
LOUT2 NET17092 NET092 1n
CP2 NET092 NET0920 17.5p
RP2 NET0920 0 10k
.ENDS DALLASAMP_OUTPUTCIR_HT4_TLV881x
*
.SUBCKT DALLASAMP_VINRANGE_HT4_TLV881x VCC VEE VIN VOUT
XIDVIH NET12 NET16 DallasAmp_DiodeIdeal_HT4_TLV881x
XIDVIL NET16 NET20 DallasAmp_DiodeIdeal_HT4_TLV881x
R0 VIN NET16 1e-3
V0 NET16 VOUT 0
VIL NET20 VEE 0
VIH VCC NET12 0
.ENDS DALLASAMP_VINRANGE_HT4_TLV881x
*
.SUBCKT DALLASAMP_ZIN_HT4_TLV881x IN1 IN2 OUT1 OUT2
R5 IN2 OUT2 100e-3
R4 IN1 OUT1 100e-3
C3 OUT1 OUT2 7.05e-12
C2 OUT2 0 1.9e-12
C1 OUT1 0 1.9e-12
GR2 OUT2 0 OUT2 0 1e-18
GR1 0 OUT1 0 OUT1 1e-18
GR3 OUT1 OUT2 OUT1 OUT2 1e-18
.ENDS DALLASAMP_ZIN_HT4_TLV881x
*
.SUBCKT DALLASAMP_HT4_TLV881x VEE VCC VINM VINP VOUT PD
XI13 VEE_INT VEE ANALOG_BUFFER_TLV881x
XI12 VCC_INT VCC ANALOG_BUFFER_TLV881x
XI58 HIGHZ NET32 DALLASAMP_DOMPOLE_HT4_TLV881x
VI28 NET41 NET51 0
XI26 NET51 NET61 DALLASAMP_NONDOMPOLE_HT4_TLV881x
XI30 POWER VCC_INT VCC VEE_INT VEE NET61 VOUT DALLASAMP_OUTPUTCIR_HT4_TLV881x
IBIASP VINP_INT 0 148e-15
IBIASM VINM_INT 0 50e-15
XI56 VCC VEE NET22 VINM_INT DALLASAMP_VINRANGE_HT4_TLV881x
XI54 VCC VEE NET21 VINP_INT DALLASAMP_VINRANGE_HT4_TLV881x
XI53 VINP VINM NET1 NET2 DALLASAMP_ZIN_HT4_TLV881x
XI40 VCC VEE POWER VEE_INT VCC_INT DallasAmp_Iq_HT4_TLV881x
XI52 VINP_INT VINM_INT NET32 NET31 VEE_INT VCC_INT POWER DallasAmp_GmItail_HT4_TLV881x
XAHDLINV3 PD PDINV VCC_INT VEE_INT HPA_INV_IDEAL_TLV881x
XAHDLINV1 PDINV POWER VCC_INT VEE_INT HPA_INV_IDEAL_TLV881x
XI21 NET12 NET22 NET12 DallasAmp_CMRR_TLV881x_HT4_TLV881x
XI19 VCC_INT VEE_INT NET2 NET12 DallasAmp_PSRR_HT4_TLV881x
XI18 NET11 0 DallasAmp_Inoise_HT4_TLV881x
XI18_NEW NET2 0 DallasAmp_Inoise_HT4_TLV881x
XI17 NET1 NET11 DallasAmp_Vnoise_HT4_TLV881x
R14 VCC_INT PD 10e6
VINOFFSET NET21 NET11 55e-6
VPROBE1 NET31 HIGHZ
VDOMPOLEBIAS NET32 0 0
VPROBE2 HIGHZ NET41
.ENDS DALLASAMP_HT4_TLV881x
*
.SUBCKT HPA_OR2_TLV881x 1 2 3 VDD VSS
E1 4 0 VALUE = { IF( ((V(1)< (V(VDD)+V(VSS))/2 ) & (V(2)< (V(VDD)+V(VSS))/2 )), V(VSS), V(VDD) ) }
R1 4 3 1
C1 3 0 1e-12
.ENDS HPA_OR2_TLV881x
*
.SUBCKT HPA_INV_IDEAL_TLV881x 1 2 VDD VSS
E1 2 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
.ENDS HPA_INV_IDEAL_TLV881x
*
.SUBCKT HPA_COMP_IDEALL_TLV881x INP INN OUT VDD VSS
E1 OUT 0 VALUE = { IF( (V(INP) > V(INN)), V(VDD), V(VSS) ) }
.ENDS HPA_COMP_IDEALL_TLV881x
*
.SUBCKT DallasAmp_CMRR_TLV881x_HT4_TLV881x A B C
.PARAM CMRR_TLV881x_DC 	             = -108
.PARAM CMRR_TLV881x_f3dB             = 22.58925
.PARAM CMRR_TLV881x_f3dB_FudgeFactor = 10
.PARAM CMRR_TLV881x       = {0-CMRR_TLV881x_DC}
.PARAM FCMRR_TLV881x	  = {CMRR_TLV881x_f3dB * CMRR_TLV881x_f3dB_FudgeFactor}
X1 A B C 0 CMRR_TLV881x_NEW_TLV881x PARAMS: CMRR_TLV881x = {CMRR_TLV881x} FCMRR_TLV881x = {FCMRR_TLV881x}
.ENDS DallasAmp_CMRR_TLV881x_HT4_TLV881x
*
.SUBCKT DallasAmp_DiodeIdeal_HT4_TLV881x NEG POS
G1 POS NEG VALUE = { IF ( V(POS,NEG) <= 0 , 0, V(POS,NEG)*0.01G ) }
R0 POS NEG 1000G
.ENDS DallasAmp_DiodeIdeal_HT4_TLV881x
*
.SUBCKT DallasAmp_GmItail_HT4_TLV881x  Vinp Vinm Ioutp Ioutm VEE VCC PD
X1 PD PDINV VCC VEE LOGIC1 0 DLS_TLV881xINV_TLV881x
VLOGIC1 LOGIC1 0 1
.PARAM ITAILMAX_X1 = { 3.0 }
.PARAM ITAILMAX_Y1 = { 100e-3 }
.PARAM ITAILMAX_X2 = { 5.0 }
.PARAM ITAILMAX_Y2 = { 100e-3 }
.PARAM ITAILMAX_SLOPE = 
+ { ( ITAILMAX_Y2 - ITAILMAX_Y1 ) / ( ITAILMAX_X2 - ITAILMAX_X1 ) }
.PARAM ITAILMAX_INTCP = 
+ { ITAILMAX_Y1 - ITAILMAX_SLOPE * ITAILMAX_X1 }
EITAILMAX ITAILMAX 0 VALUE = 
+ { ITAILMAX_SLOPE * V(VCC,VEE) + ITAILMAX_INTCP  }
.PARAM ITAILMIN_X1 = { 3.0 }
.PARAM ITAILMIN_Y1 = { 94.31e-3 }
.PARAM ITAILMIN_X2 = { 5.0 }
.PARAM ITAILMIN_Y2 = { 94.31e-3 }
.PARAM ITAILMIN_SLOPE = 
+ { ( ITAILMIN_Y2 - ITAILMIN_Y1 ) / ( ITAILMIN_X2 - ITAILMIN_X1 ) }
.PARAM ITAILMIN_INTCP = 
+ { ITAILMIN_Y1 - ITAILMIN_SLOPE * ITAILMIN_X1 }
EITAILMIN ITAILMIN 0 VALUE = 
+ { ITAILMIN_SLOPE * V(VCC,VEE) + ITAILMIN_INTCP  }
G1 IOUTP IOUTM VALUE = { LIMIT ( 2.445 * V(VINP,VINM) * ( 1-V(PDINV) ) , -V(ITAILMIN),
+ V(ITAILMAX) ) }
.ENDS DallasAmp_GmItail_HT4_TLV881x
*
.SUBCKT DallasAmp_Inoise_HT4_TLV881x A B
.PARAM X = { 0.1 }
.PARAM Y = { 16.5}
.PARAM Z = { 46.47 }
X1 A B FEMT_TLV881x PARAMS: NLFF = { Y }  FLWF = { X } NVRF = { Z }
.ENDS DallasAmp_Inoise_HT4_TLV881x
*
.SUBCKT DallasAmp_Iq_HT4_TLV881x VCCmain VEEmain PD VEE VCC
.PARAM IOFF = { 1n }
.PARAM ION_X1 = { 0.0 }
.PARAM ION_Y1 = { 450e-9 }
.PARAM ION_X2 = { 1.6 }
.PARAM ION_Y2 = { 450e-9 }
.PARAM ION_X3 = { 1.9 }
.PARAM ION_Y3 = { 450e-9 }
.PARAM ION_X4 = { 12.0 }
.PARAM ION_Y4 = { 450e-9 }
EION_SEG1 ION_SEG1 0 VALUE = { IF ( 		          V(VCC,VEE) <= ION_X2, 1, 0 ) }
EION_SEG2 ION_SEG2 0 VALUE = { IF ( V(VCC,VEE) > ION_X2 & V(VCC,VEE) <= ION_X3, 1, 0 ) }
EION_SEG3 ION_SEG3 0 VALUE = { IF ( V(VCC,VEE) > ION_X3		              , 1, 0 ) }
.PARAM ION_SEG1_SLOPE = { ( ION_Y2 - ION_Y1 ) / ( ION_X2 - ION_X1 ) }
.PARAM ION_SEG1_INTCP = { ION_Y1 - ION_SEG1_SLOPE * ION_X1 }
.PARAM ION_SEG2_SLOPE = { ( ION_Y3 - ION_Y2 ) / ( ION_X3 - ION_X2 ) }
.PARAM ION_SEG2_INTCP = { ION_Y2 - ION_SEG2_SLOPE * ION_X2 }
.PARAM ION_SEG3_SLOPE = { ( ION_Y4 - ION_Y3 ) / ( ION_X4 - ION_X3 ) }
.PARAM ION_SEG3_INTCP = { ION_Y3 - ION_SEG3_SLOPE * ION_X3 }
EION ION 0 VALUE = { 	V(ION_SEG1) * ( ION_SEG1_SLOPE * V(VCC,VEE) + ION_SEG1_INTCP ) +
+			V(ION_SEG2) * ( ION_SEG2_SLOPE * V(VCC,VEE) + ION_SEG2_INTCP ) +
+ 			V(ION_SEG3) * ( ION_SEG3_SLOPE * V(VCC,VEE) + ION_SEG3_INTCP ) 	}
X1 PD PDINV VCC VEE LOGIC1 0 DLS_TLV881xINV_TLV881x
VLOGIC1 LOGIC1 0 1
G1 VCCMAIN VEEMAIN VALUE = { V(ION) * ( 1-V(PDINV) ) + IOFF * V(PDINV) }  
.ENDS DallasAmp_Iq_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_ILOAD_HT4_TLV881x  VDD VSS VIMON PD
X1 PD PDINV VDD VSS LOGIC1 0 DLS_TLV881xINV_TLV881x
VLOGIC1 LOGIC1 0 1
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0, V(VIMON)*( 1-V(PDINV) ), 0)}
G2 VSS 0 VALUE = {IF(V(VIMON)  < 0, V(VIMON)*( 1-V(PDINV) ), 0)}
.ENDS DallasAmp_OutputCir_ILOAD_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_IscVlimit_HT4_TLV881x A B VCC VEE PARAMS:
+RIsc 		 = { 100m }
+IscVsVsupply_X1 = { 3.0 }
+IscVsVsupply_Y1 = { 75m }
+IscVsVsupply_X2 = { 5.0 }
+IscVsVsupply_Y2 = { 100m }
.PARAM IscVsVsupply_SLOPE = 
+ { ( IscVsVsupply_Y2 - IscVsVsupply_Y1 ) / ( IscVsVsupply_X2 - IscVsVsupply_X1 ) }
.PARAM IscVsVsupply_INTCP = 
+ { IscVsVsupply_Y1 - IscVsVsupply_SLOPE * IscVsVsupply_X1 }
EIscVsVsupply IscVsVsupply 0 VALUE = 
+ { IscVsVsupply_SLOPE * V(VCC,VEE) + IscVsVsupply_INTCP  }
E1 A B VALUE = { V(IscVsVsupply) * RIsc }
.ENDS DallasAmp_OutputCir_IscVlimit_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_IsinkVlimit_HT4_TLV881x A B VCC VEE
X1 A B VCC VEE DallasAmp_OutputCir_IscVlimit_HT4_TLV881x PARAMS:
+RIsc 		 = { 1 }
+IscVsVsupply_X1 = { 3.0 }
+IscVsVsupply_Y1 = { ABS(-6m) }
+IscVsVsupply_X2 = { 5.0 }
+IscVsVsupply_Y2 = { ABS(-6m) }
.ENDS DallasAmp_OutputCir_IsinkVlimit_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_IsourceVlimit_HT4_TLV881x A B VCC VEE
X1 A B VCC VEE DallasAmp_OutputCir_IscVlimit_HT4_TLV881x PARAMS:
+RIsc 		 = { 1 }
+IscVsVsupply_X1 = { 3.0 }
+IscVsVsupply_Y1 = { ABS(4m) }
+IscVsVsupply_X2 = { 5.0 }
+IscVsVsupply_Y2 = { ABS(4m) }
.ENDS DallasAmp_OutputCir_IsourceVlimit_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_RecoveryAssist_HT4_TLV881x  VINP VINM IOUTP IOUTM VCC VEE RecoverySignal
X1 RecoverySignal RS VCC VEE LOGIC1 0 DLS_TLV881x
VLOGIC1 LOGIC1 0 1
G1 IOUTP IOUTM VALUE = { LIMIT ( 1m * V(VINP,VINM) *  V(RS) , -100m, 100m ) }
.ENDS DallasAmp_OutputCir_RecoveryAssist_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_Rout_HT4_TLV881x B A VIMON
.PARAM Ro_Iout_0A = 168702
.PARAM RIsc = 1
.PARAM Isc = 5m
.PARAM Islope = { 1/100 * Isc }
G1 A B VALUE = { V(A,B) * 1 / ( (Ro_Iout_0A - RIsc) * Islope / ( Islope + ABS(V(VIMON)) ) )   }
.ENDS DallasAmp_OutputCir_Rout_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_VOHVOL_HT4_TLV881x A B C  PARAMS:
+ VSUPPLYREF    = {2.5} 
+ VOUTvsIOUT_X1 = { 0 }
+ VOUTvsIOUT_Y1 = { 2.4 }
+ VOUTvsIOUT_X2 = { 100m }
+ VOUTvsIOUT_Y2 = { 2.1 }
.PARAM VDROPvsIOUT_X1 = { VOUTvsIOUT_X1 }
.PARAM VDROPvsIOUT_Y1 = { ABS(VSUPPLYREF-VOUTvsIOUT_Y1) }
.PARAM VDROPvsIOUT_X2 = { VOUTvsIOUT_X2 }
.PARAM VDROPvsIOUT_Y2 = { ABS(VSUPPLYREF-VOUTvsIOUT_Y2) }
.PARAM VDROPvsIOUT_SLOPE = 
+ { ( VDROPvsIOUT_Y2 - VDROPvsIOUT_Y1 ) / ( VDROPvsIOUT_X2 - VDROPvsIOUT_X1 ) }
.PARAM VDROPvsIOUT_INTCP = 
+ { VDROPvsIOUT_Y1 - VDROPvsIOUT_SLOPE * VDROPvsIOUT_X1 }
EVDROPvsIOUT VDROPvsIOUT 0 VALUE = 
+ { VDROPvsIOUT_SLOPE * V(C) + VDROPvsIOUT_INTCP  }
E1 A B VALUE = { V(VDROPvsIOUT) }
.ENDS DallasAmp_OutputCir_VOHVOL_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_VOH_HT4_TLV881x A B C 
X1 A B C DallasAmp_OutputCir_VOHVOL_HT4_TLV881x PARAMS:
+ VSUPPLYREF    = {5} 
+ VOUTvsIOUT_X1 = { ABS(0) }
+ VOUTvsIOUT_Y1 = { 5 }
+ VOUTvsIOUT_X2 = { ABS(1m) }
+ VOUTvsIOUT_Y2 = { 4.78 }
.ENDS DallasAmp_OutputCir_VOH_HT4_TLV881x
*
.SUBCKT DallasAmp_OutputCir_VOL_HT4_TLV881x A B C
X1 A B C DallasAmp_OutputCir_VOHVOL_HT4_TLV881x PARAMS:
+ VSUPPLYREF    = {0} 
+ VOUTvsIOUT_X1 = { ABS(0) }
+ VOUTvsIOUT_Y1 = { 0 }
+ VOUTvsIOUT_X2 = { ABS(-1m) }
+ VOUTvsIOUT_Y2 = { 0.175 }
.ENDS DallasAmp_OutputCir_VOL_HT4_TLV881x
*
.SUBCKT DallasAmp_PSRR_HT4_TLV881x VDD VSS A B
.PARAM PSRRP_DC    = -116
.PARAM PSRRP_f3dB  = 0.126791
.PARAM PSRRN_DC    = -116
.PARAM PSRRN_f3dB  = 0.126791
.PARAM PSRRP       = {0-PSRRP_DC}
.PARAM PSRRN       = {0-PSRRN_DC}
.PARAM FPSRRP      = {PSRRP_f3dB}
.PARAM FPSRRN      = {PSRRN_f3dB}
X1 VDD VSS A B 0 PSRR_DUAL_TLV881x_NEW_TLV881x PARAMS:
+ PSRRP = {PSRRP} FPSRRP = {FPSRRP}
+ PSRRN = {PSRRN} FPSRRN = {FPSRRN}
.ENDS DallasAmp_PSRR_HT4_TLV881x
*
.SUBCKT DallasAmp_Vnoise_HT4_TLV881x A B
.PARAM X = { 0.5  }
.PARAM Y = { 450 }
.PARAM Z = { 343  }
X1 A B VNSE_HT4_TLV881x PARAMS: NLF = { Y } FLW = { X }  NVR = { Z }
.ENDS DallasAmp_Vnoise_HT4_TLV881x
*
.SUBCKT VNSE_HT4_TLV881x  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS VNSE_HT4_TLV881x
*
.SUBCKT FEMT_TLV881x  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS FEMT_TLV881x
*
.SUBCKT PSRR_DUAL_TLV881x_NEW_TLV881x   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}
EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}
G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}
EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}
E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS PSRR_DUAL_TLV881x_NEW_TLV881x
*
.SUBCKT CMRR_TLV881x_NEW_TLV881x   VI  VO VX GNDF PARAMS: CMRR_TLV881x = 130 FCMRR_TLV881x = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR_TLV881x = 1
.PARAM GCMRR_TLV881x = {PWR(10,-CMRR_TLV881x/20)/RCMRR_TLV881x}
.PARAM LCMRR_TLV881x = {RCMRR_TLV881x/(2*PI*FCMRR_TLV881x)}
G1  GNDF 1 VX GNDF {GCMRR_TLV881x}
R1  1 2 {RCMRR_TLV881x}
L1  2 GNDF {LCMRR_TLV881x}
EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}
E1  VI VO 1a GNDF 1
.ENDS CMRR_TLV881x_NEW_TLV881x
*
.SUBCKT DLS_TLV881x 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) < (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS DLS_TLV881x
*
.SUBCKT DLS_TLV881xINV_TLV881x 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) > (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS DLS_TLV881xINV_TLV881x
*
.MODEL VINRANGE_DIDEAL         D N=1m
.MODEL RECOVERYCIRCUIT_DIDEAL  D N=1m 
.MODEL OUTPUTCIR_ISC_DIDEAL    D N=0.1m 
.MODEL OUTPUTCIR_VOHVOL_DIDEAL D N=1m 
*
