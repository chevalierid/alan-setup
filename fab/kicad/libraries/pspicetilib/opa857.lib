* OPA857
*****************************************************************************
* (C) Copyright 2016 Texas Instruments Incorporated. All rights reserved.
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.
** TI and its licensors and suppliers make no warranties, either expressed
** or implied, with respect to this model, including the warranties of 
** merchantability or fitness for a particular purpose.  The model is
** provided solely on an "as is" basis.  The entire risk as to its quality
** and performance is with the customer.
*****************************************************************************
*
** Released by: WEBENCH(R) Design Center, Texas Instruments Inc.
* Part: OPA857
* Date: 12/13/2016 
* Model Type: All In One
* Simulator: TINA
* Simulator Version: 9
* EVM Order Number: N/A 
* EVM Users Guide:  N/A 
* Datasheet: SBOS630D –DECEMBER 2013–REVISED AUGUST 2016
*
* Model Version: 1.0
*
*****************************************************************************
*
* Updates:
*
* Version 1.0 : Release to Web
*
*****************************************************************************
* Notes:
* 1. The following parameters are modeled: 
*    Small Signal Bandwidth, Slew Rate, Equivalent input-referred current 
*    noise, Overdrive Recovery Time, Closed-Loop Output Impendance, 
*    Transimpendance Gain, Output Offset Voltage, Common-Mode Voltage, 
*    Input Capacitance, Output Voltage Swing, Output Current Drive, 
*    Quiescent Operating Current, PSRR
*
* 2. The following parameters are not modeled: 
*    Temperature Variation, Harmonic Distortion
*
*
*****************************************************************************



.subckt OPA857 CTRL GND IN OUT OUTN VS
XI0 CTRL GND IN OUT OUTN VS OPA857_HT4
.ends







.subckt ANALOG_BUFFER VOUT VIN
R0 VIN 0  1e9
R1 VOUT 0  1e9
E0 VOUT 0 VIN 0 1
.ends ANALOG_BUFFER


.subckt OPA857_AMP_HT4 VCC VEE VINM VINP VOUT
XI21 NET066 NET065 OPA857_Amp_CMRR_HT4
XI19 VCC_INT VEE_INT NET8 NET066 OPA857_Amp_PSRR_HT4
XI18 NET058 NET8 OPA857_Amp_Inoise_HT4
XI17 NET048 NET058 OPA857_Amp_Vnoise_HT4
XI10 VCC VEE VIMON OPA857_Amp_ILOAD_HT4
H2 VIMON 0 VCURSOURCEDETECT  1
I5 VCC VEE 23.2e-3
I0 NET041 0 -568e-9
I3 NET065 0 1e-12
R2 NET51 NET089  1
R9 VINP NET048  100e-3
R10 VINM NET8  100e-3
R1 VIMON 0  1e9
R0 NET66 NET39  530.5e3
R4 NET15 NET45  1
R6 NET15 NET21  100e-3
C7 0 NET048  500e-15
C8 NET8 0  500e-15
C6 NET048 NET8  10e-15
C0 NET39 NET66  4.6e-12
XI16 NET089 NET0137 ANALOG_BUFFER
XI13 VEE_INT VEE ANALOG_BUFFER
XI12 VCC_INT VCC ANALOG_BUFFER
XI11 NET0105 NET45 ANALOG_BUFFER
XI2 NET21 NET51 ANALOG_BUFFER
D7 NET0137 NET0116 DIDEAL1
D6 NET0135 NET0137 DIDEAL1
D2 NET46 NET041 DIDEAL1
D1 NET041 NET25 DIDEAL1
D4 NET065 NET27 DIDEAL1
D3 NET48 NET065 DIDEAL1
D5 NET70 NET51 DIDEAL1
D0 NET51 NET33 DIDEAL1
D9 NET15 NET44 DIDEAL1
D8 NET0105 NET40 DIDEAL1
V7 NET041 NET058 0
V12 VCC_INT NET0116 0
V14 NET0135 VEE_INT 0
V1 NET67 NET39
V9 NET40 NET15 20.2e-3
V2 NET66 0 0
V10 NET44 NET0105 5.2e-3
V3 NET46 VEE_INT 1
V6 NET48 VEE_INT 1
V0 NET39 NET0137
VE1 NET52 VEE_INT 600e-3
V5 VCC_INT NET27 1
V4 VCC_INT NET25 1
VCURSOURCEDETECT NET45 NET59 0
VCURSINKDETECT VOUT NET59 0
V13 VCC_INT NET68 1.4
GAHDLI6 NET66 NET67 VALUE { LIMIT(V(NET041,NET065)*188e-3, -1e-3, 1e-3) }
H0 NET68 NET33 POLY(1) Vcursourcedetect  1e-9  1e-9  0  0  1e-9  0  0  0  0  0  1e-9
H1 NET70 NET52 POLY(1) Vcursinkdetect  1e-9  1e-9  0  0  1e-9  0  0  0  0  0  1e-9
.ends OPA857_AMP_HT4


.subckt OPA857_HT4 CTRL GND IN OUT OUTN VS
XI5 VS GND IN NET7 NET036 OPA857_AMP_HT4
XAHDLI12 NET024 NET029 IN sw_l4 PARAMS: VON=1.1
XAHDLI9 CTRL NET032 IN sw_l4 PARAMS: VON=1.1
XAHDLINV0 CTRL NET024 VS GND HPA_INV_IDEAL
C3 NET029 NET036  290e-15
C2 NET032 NET036  103.5e-15
C5 NET032 0  1.5e-12
C4 NET029 0  500e-15
C0 NET7 GND  20e-12
C1 NET23 GND  50e-12
R5 NET042 OUTN  25
R6 NET032 NET036  20e3
R3 GND NET23  7.5e3
R1 NET23 VS  6e3
R4 NET036 OUT  25
R0 NET029 NET036  5e3
R2 NET7 NET042  1.5e3
XI4 NET042 NET23 ANALOG_BUFFER
.ends OPA857_HT4




.SUBCKT HPA_INV_IDEAL 1 2 VDD VSS
E1 2 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
.ENDS


.SUBCKT sw_l4 S A B PARAMS: VON=1.1
S1 A B S 0 VSWITCH2
.MODEL VSWITCH2 VSWITCH Roff=1e9 Ron=1e-3 Voff=-0.01 Von={VON}
.ENDS


.MODEL DIDEAL1 D N=0.1m

.SUBCKT OPA857_Amp_ILOAD_HT4  VDD VSS VIMON
G1 VDD 0 VALUE = {IF(V(VIMON) >= 0,V(VIMON),0)}
G2 VSS 0 VALUE = {IF(V(VIMON) < 0,V(VIMON),0)}
.ENDS


.SUBCKT OPA857_Amp_Vnoise_HT4 A B
.PARAM X = { 1k  }
.PARAM Y = { 0.4 }
.PARAM Z = { 0.4 }
X1 A B VNSE PARAMS: NLF = { Y } FLW = { X }  NVR = { Z }
.ENDS


.SUBCKT OPA857_Amp_Inoise_HT4 A B
.PARAM X = { 1k  }
.PARAM Y = { 0.4e3 }
.PARAM Z = { 0.4e3 }
X1 A B FEMT PARAMS: NLFF = { Y }  FLWF = { X } NVRF = { Z }
.ENDS


.SUBCKT OPA857_Amp_PSRR_HT4 VDD VSS A B
X1 VDD VSS A B 0 PSRR_DUAL_NEW
+ PARAMS: PSRRP = 80 FPSRRP = 5k
+ PSRRN = 80 FPSRRN = 5k
.ENDS


.SUBCKT OPA857_Amp_CMRR_HT4 A B
V1 A B 0
.ENDS



.SUBCKT VNSE  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS



.SUBCKT FEMT  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS






.SUBCKT PSRR_SINGLE   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}
E1  VO VI 1 GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_SINGLE_NEW   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VO VI 1a GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

E1  VO VI VALUE = {V(1,GNDF) + V(3,GNDF)}
C3  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL_NEW   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}

G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}


G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}


E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS



.SUBCKT CMRR   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
E1  VI VO 1 GNDF 1
.ENDS

.SUBCKT CMRR_NEW   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VI VO 1a GNDF 1
.ENDS
*