dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
get_filenames(2)
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
# need to pad columns with NAs such that dates are aligned...
# create sequence starting at minimum value in filenames
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins <- sapply(mins,as.POSIXct(mins,tz="PDT",origin="1970-01-01 00:00.00 UTC"))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
mins <- sapply(mins,to_posix)
mins
print(mins)
as.POSIXct(x=mins[1],tz="PDT",origin="1970-01-01 00:00.00 UTC")
sapply(mins,to_posix)
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins <- sapply(mins,to_posix)
is.numeric.POSIXt(mins[1])
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
get_filenames(2)
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
# need to pad columns with NAs such that dates are aligned...
# create sequence starting at minimum value in filenames
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins <- sapply(mins,to_posix)
is.numeric.POSIXt(mins[1])
format(mins,"%m-%d-%H")
# create function to count # files for each site
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
get_filenames(2)
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
# need to pad columns with NAs such that dates are aligned...
# create sequence starting at minimum value in filenames
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
format(mins,"%m-%d-%H")
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC","%m-%d-%H")
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC","%m-%d-%H")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins <- sapply(mins,to_posix)
is.numeric.POSIXt(mins[1])
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC","%m-%d-%H")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
is.numeric.POSIXt(filenames[1])
filenames[1]
filenames$X1[1]
is.numeric.POSIXt(filenames$X1[1])
is.POSIXct <- function(x) inherits(x, "POSIXct")
is.POSIXct(filenames$X1[1])
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
get_filenames(2)
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
is.POSIXct(filenames$X1[1])
is.POSIXct <- function(x) inherits(x, "POSIXct")
is.POSIXct <- function(x) inherits(x, "POSIXct")
is.POSIXct(filenames$X1[1])
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
mydir = "~/Documents/ALANizer"
#get_filenames <- function(site) {
site = 1
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
is.POSIXct <- function(x) inherits(x, "POSIXct")
all_files
all_files[1]
is.POSIXct(all_files[1])
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
is.POSIXct(all_dates[1])
is.POSIXct(all_dates[1])
all_dates[1]
is.POSIXct(as.POSIXct(all_dates[1],format="%m-%d-%H",tz="UTC"))
all_dates[[1]]
is.POSIXct(all_dates[[1]])
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
is.POSIXct <- function(x) inherits(x, "POSIXct")
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
get_filenames(2)
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC","%m-%d-%H")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins <- sapply(mins,to_posix)
is.POSIXct(mins[[1]])
mins[[1]]
mins[[2]]
mins
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
is.POSIXct <- function(x) inherits(x, "POSIXct")
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
filenames[[1]]
# get individual column lengths
index <- sapply(filenames,length)
index
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC","%m-%d-%H")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
mins
mins <- sapply(mins,to_posix)
mins[1]
str(mins)
mins$X1
mins.X1
mins[1]
mins
mins <- sapply(filenames,list_min)
mins
is.POSIXct(mins[[1]])
mins[[1]]
mins[1]
to_posix(mins[[1]])
to_posix(1687370400)
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
to_posix(1687370400)
# issue with keeping columns as POSIXct
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- sapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- sapply(mins,to_posix)
is.POSIXct(mins[[1]])
format(mins[[1]],"%m-%d-%H")
format(mins[[1]])
mins[[1]]
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
# issue with keeping columns as POSIXct
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
maxes <- lapply(maxes,to_posix)
maxes <- lapply(filenames,list_max)
maxes <- lapply(maxes,to_posix)
colinfo <- as.data.frame(index,anyna,mins,maxes)
true_min <- min(mins)
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
is.POSIXct <- function(x) inherits(x, "POSIXct")
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
# need to pad columns with NAs such that dates are aligned...
# create sequence starting at minimum value in filenames
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
# issue with keeping columns as POSIXct
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- lapply(filenames,list_min)
mins <- lapply(mins,to_posix)
maxes <- lapply(filenames,list_max)
maxes <- lapply(maxes,to_posix)
colinfo <- as.data.frame(index,anyna,mins,maxes)
index
anyna
mins
mins <- lapply(filenames,list_min)
is.list(mins)
lapply(mins,to_posix)
lapply(unlist(mins),to_posix)
sapply(mins,to_posix)
unlist(lapply(mins,to_posix))
mins <- lapply(filenames,list_min)
unlist(lapply(mins,to_posix))
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
is.POSIXct(unlist(mins[[1]]))
mins <- lapply(filenames,list_min)
mins <- unlist(lapply(mins,to_posix))
mins
is.POSIXct(mins[[1]])
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
mins <- unlist(mins)
is.POSIXct(mins[[1]])
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
mins <- unlist(mins)
is.POSIXct(mins[[1]])
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
do.call("c",mins)
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- lapply(mins,to_posix)
is.POSIXct(mins[[1]])
mins <- do.call("c",mins)
is.POSIXct(mins[[1]])
mins <- lapply(filenames,list_min)
is.POSIXct(mins[[1]])
mins <- do.call("c",lapply(mins,to_posix))
is.POSIXct(mins[[1]])
maxes <- lapply(filenames,list_max)
maxes <- do.call("c",lapply(maxes,to_posix))
colinfo <- as.data.frame(index,anyna,mins,maxes)
index
anyna
mins
maxes
grep("!",filenames,value=TRUE)
grep("!",filenames$X1,value=TRUE)
lapply(filenames,function(x) grep("!",x,value=TRUE))
# create function to count # files for each site
rm(list = ls(all = TRUE))
library(ggplot2)
library(data.table)
is.POSIXct <- function(x) inherits(x, "POSIXct")
mydir = "~/Documents/ALANizer"
get_filenames <- function(site) {
dir_name <- paste("site", formatC(site,width=2,format="d",flag="0"), sep = "")
mypath <- paste(mydir, dir_name, sep = "/")
all_files <- list.files(path = mypath,pattern = "*CSV")
all_files <- lapply(all_files,function(x) gsub("(.CSV)","",as.character(x)))
all_dates <- lapply(all_files,function(x) as.POSIXct(x,format="%m-%d-%H",tz="UTC"))
for.setattr <- function(all_dates)
for (i in seq_along(all_dates))
setattr(all_dates[[i]], name = "tzone", value = "Canada/Pacific")
for.setattr(all_dates)
return(all_dates)
}
# want to run get_filenames on integers 1 thru 12
filenames <- lapply(data.frame(rbind(1:12)),get_filenames)
# get individual column lengths
index <- sapply(filenames,length)
# need to pad columns with NAs such that dates are aligned...
# create sequence starting at minimum value in filenames
any_na <- function(x) any(is.na(x))
all_na <- function(x) all(is.na(x))
# issue with keeping columns as POSIXct
to_posix <- function(x) as.POSIXct(x,tz="PDT",origin="1970-01-01 00:00.00 UTC")
anyna <- sapply(filenames,any_na)
list_min <- function(x) min(unlist(x),na.rm=TRUE)
list_max <- function(x) max(unlist(x),na.rm=TRUE)
mins <- lapply(filenames,list_min)
mins <- do.call("c",lapply(mins,to_posix)) # do.call("c" etc.) unlists without removing POSIXct class
maxes <- lapply(filenames,list_max)
maxes <- do.call("c",lapply(maxes,to_posix))
as.data.frame(index,anyna)
as.data.frame(index)
as.data.frame(anyna)
cbind.data.frame(index)
cbind.data.frame(anyna)
cbind.data.frame(index,anyna)
cbind.data.frame(index,anyna,mins,maxes)
colinfo <- cbind.data.frame(index,anyna,mins,maxes)
?subset
setwd("~/Documents/alan-setup/fab/kicad")
read.csv("WBBOMDesign2.csv")
des1 <- read.csv("WBBOMDesign2.csv")
des2 <- read.csv("WBBOMDesignTPS55289RYQR")
des2 <- read.csv("WBBOMDesignTPS55289RYQR.csv")
?read.csv
?diff
?intersect
intersect(des1$Part.Number,des2$Part.Number)
des2
des2[6,3]
des2[6,3] <- "UWD1V680MCL1GS"
des2
des2[12,3] <- "MSS1210-103MED"
des2
des2[6,3] <- "UUD1V680MCL1GS"
des2
des3 <- read.csv("WBBOMDesign3.csv")
intersect(des2$Part.Number,des3$Part.Number)
length(intersect(des2$Part.Number,des3$Part.Number))
des3[,1]
des3[1,]
?in
??in
?includes
??includes
?intersect
setdiff(des3$Part.Number,des2$Part.Number)
des3
des2
filter(des3,Part.Number != des2$Part.Number)
?filter
des3[des3$Part.Number != des2$Part.Number,]
des3[des3$Part.Number == des2$Part.Number,]
des1 <- read.csv("WBBOMDesign2.csv")
des2 <- read.csv("WBBOMDesignTPS55289RYQR.csv")
des3 <- read.csv("WBBOMDesign3.csv")
cbind(des2$Part.Number,des3$Part.Number)
des3$Part.Number %in% des2$Part.Number
des3
des_5v <- read.csv("5VBOM.csv")
intersect(des_5v$Part.Number,des3$Part.Number)
des_5v
des_5v <- read.csv("5VBOM.csv")
des_5v
des_5v$Part.Number[order(des_5v$Part.Number),]
des_5v$Part.Number[order(des_5v$Part.Number)]
c(des_5v$Part.Number[order(des_5v$Part.Number)])
cbind(des_5v$Part.Number[order(des_5v$Part.Number)])
des_5v
(14.6*0.834)/(2*1.6*8*14.6)
(14.6*0.834)/(2*1.6*10^6*8*14.6)
0.32578*10^(-9)
32.578*10^(-9)
0.032578*10^-6
(14.6*0.834)/(2*1.6*10^6)*8*14.6
(14.6*0.834)/(2*1.6*10^6*8)*14.6
(14.6*0.834)/(2*1.6*10^6*8*14.6)
des_1a <- read.csv("1ABOM.csv")
?intersect
des3
des_1a
setdiff(des3,des_1a)
setdiff(des3$Part.Number,des_1a$Part.Number)
des_1a <- read.csv("1ABOM.csv")
setdiff(des3$Part.Number,des_1a$Part.Number)
setdiff(des_1a$Part.Number,des3$Part.Number)
des_1a
setdiff(des_1a,des3)
des_1a[1,]
?lapply
?filter
?%is%
??%is%
?is
??is
des_1a[des1a$Part.Number %in% des3$Part.Number]
des_1a[des_1a$Part.Number %in% des_1a$Part.Number]
des_1a[des_1a$Part.Number %in% des_1a$Part.Number,]
des_1a[des_1a$Part.Number %in% des3$Part.Number,]
des_1a[des_1a$Part.Number !%in% des3$Part.Number,]
des_1a[des_1a$Part.Number %in% des3$Part.Number,]
des_1a$Part.Number %in% des3$Part.Number
des_1a[!(des_1a$Part.Number %in% des3$Part.Number),]
des3[!(des3$Part.Number %in% des_1a$Part.Number),]
des_1a <- read.csv("1ABOM2.csv")
setdiff(des3$Part.Number,des_1a$Part.Number)
setdiff(des_1a$Part.Number,des3$Part.Number)
des_1a[!(des_1a$Part.Number %in% des3$Part.Number),]
des3[!(des3$Part.Number %in% des_1a$Part.Number),]
des_1a[!(des_1a$Part.Number %in% des3$Part.Number),]
des_1a
des5v <- read.csv("5VBOM.csv")
des5v
des5v2 <- read.csv("5VBOM2.csv")
des5v2[!(des5v2$Part.Number %in% des5v$Part.Number),]
des5v2[!(des5v2$Part.Number %in% des_1a$Part.Number),]
des5v2
