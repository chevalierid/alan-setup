setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := nafill(StartDate, type="locf")]
# metadata$Timestamp    & sensor_data$StartDate
# metadata$Folder       & sensor_data$Folder
# metadata$LabelledSite & sensor_data$LabelledSite
# metadata$Site         & sensor_data$Site (:=)
metadata [, StartDate := as.Date(Timestamp),]
# Timestamp is now redundant and we only want it to refer to the timestamp of a specific observation
# PrescribedTreatment refers to the prescribed treatment, which wasn't always the treatment condition present. We will pull treatment from our observations later on
metadata[, c("Timestamp","PrescribedTreatment") := NULL,]
sensor_data[, StartDate := as.Date(StartDate),]
#    long           short           long
joined_table <- na.omit(metadata)[sensor_data, on=.(StartDate, Folder, LabelledSite)]
joined_table[, Changepoint := NULL,]
# add actual treatment to metadata table
# some site-startdate combos have a few data points under a different treatment
# choose most common treatment for each site-startdate combo
metadata <- joined_table[Site %in% 1:12, .N, by=.(Site, StartDate, Treatment)][, .SD[which.max(N)], by = .(Site, StartDate)][metadata, on = .(Site, StartDate)]
metadata[, N := NULL,]
all.equal(metadata$Treatment[1], metadata$Folder[1])
pdf("../plots/treatments.pdf", w=16, h=9)
ggplot() +
geom_point(data=na.omit(metadata), aes(x=as.Date(StartDate),y=Treatment,colour=as.factor(Treatment))) +
facet_grid(rows = vars(Site))
dev.off()
x_min <- min(sensor_data$Timestamp)
x_max <- max(sensor_data$Timestamp)
x_inter <- seq(floor(as.numeric(x_min)/300)*300,
ceiling(as.numeric(x_max)/300)*300,
by=300)
data_cols <- c(paste("AS", c(1:9), sep="0"), "AS10", "AS11", "Intensity")
interp_table <- joined_table[Site %in% 1:12, lapply(.SD, function(col) approx(x = Timestamp, y = col, xout = x_inter)$y), by=Site, .SDcols = data_cols]
interp_table[, Timestamp := as.POSIXct(x_inter,origin="1970-01-01"), by=Site]
interp_table[, Treatment := joined_table[interp_table, x.Treatment, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, StartDate := joined_table[interp_table, x.StartDate, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, LightOn := joined_table[interp_table, x.On, on=.(Site, Timestamp), roll = "nearest"]]
interp_table
pdf("../plots/interp.pdf", w=16, h=9)
ggplot(data=interp_table[Site == 6 & LightOn == 1 & Timestamp %between% c(as.POSIXct("2023-07-01"), as.POSIXct("2023-08-01"))]) +
geom_point(aes(x=Timestamp,y=Intensity,colour=as.factor(Treatment))) +
geom_point(aes(x=Timestamp,y=AS03),colour="blue") +
geom_point(aes(x=Timestamp,y=AS06),colour="orange")
dev.off()
fwrite(metadata, file="../cleaned_data/metadata.csv")
fwrite(interp_table, file = "../cleaned_data/interpolated_data.csv")
biomass <- read.csv("../data/Pitfall_Trap_Biomass_Data.csv")
biomass <- read.csv("../raw_data/Pitfall_Trap_Biomass_Data.csv")
getwd()
setwd()
?setwd
setwd(".")
getwd()
setwd("~/Documents/alan-setup/prog/refactored/")
setwd("~/Documents/alan-setup/prog/refactored/scripts/")
biomass <- read.csv("../raw_data/Pitfall_Trap_Biomass_Data.csv")
biomass$Date <- as.POSIXct(biomass$Date, format="%Y-%m-%d", origin = "1970-01-01",tz="PDT")
dim(biomass)
biomass$Biomass <- as.numeric(as.character(biomass$Biomass))
class(biomass$Biomass)
dim(biomass)
biomass <- na.omit(biomass)
dim(biomass)
biomass <- read.csv("../raw_data/Pitfall_Trap_Biomass_Data.csv")
biomass$Date <- as.POSIXct(biomass$Date, format="%Y-%m-%d", origin = "1970-01-01",tz="PDT")
biomass$Biomass <- as.numeric(as.character(biomass$Biomass))
class(biomass$Biomass)
interp_table <- fread("../cleaned_data/interpolated_data.csv")
interp_table
sensordata <- fread("../cleaned_data/interpolated_data.csv")
metadata <- fread("../cleaned_data/metadata.csv")
biomass
biomass <- read.csv("../raw_data/Pitfall_Trap_Biomass_Data.csv")
biomass <- fread("../raw_data/Pitfall_Trap_Biomass_Data.csv")
biomass
biomass <- fread("../raw_data/Pitfall_Trap_Biomass_Data.csv")
biomass
biomass$StartDate <- as.POSIXct(biomass$StartDate, format="%Y-%m-%d", origin = "1970-01-01",tz="PST")
biomass
metadata <- fread("../cleaned_data/metadata.csv")
biomass[metadata, .N, by=.(Site, StartDate, Treatment)]
biomass[,.N, by=.(Site, StartDate, Treatment)]
biomass[metadata, Treatment, by=.(Site, StartDate)]
biomass[metadata, Treatment, on=.(Site, StartDate)]
biomass$StartDate <- as.Date(biomass$StartDate, origin = "1970-01-01")
biomass[metadata, Treatment, on=.(Site, StartDate)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := nafill(StartDate, type="locf")]
# metadata$Timestamp    & sensor_data$StartDate
# metadata$Folder       & sensor_data$Folder
# metadata$LabelledSite & sensor_data$LabelledSite
# metadata$Site         & sensor_data$Site (:=)
metadata [, StartDate := as.Date(Timestamp),]
# Timestamp is now redundant and we only want it to refer to the timestamp of a specific observation
# PrescribedTreatment refers to the prescribed treatment, which wasn't always the treatment condition present. We will pull treatment from our observations later on
metadata[, c("Timestamp","PrescribedTreatment") := NULL,]
sensor_data[, StartDate := as.Date(StartDate),]
#    long           short           long
joined_table <- na.omit(metadata)[sensor_data, on=.(StartDate, Folder, LabelledSite)]
joined_table[, Changepoint := NULL,]
# add actual treatment to metadata table
# some site-startdate combos have a few data points under a different treatment
# choose most common treatment for each site-startdate combo
metadata <- joined_table[Site %in% 1:12, .N, by=.(Site, StartDate, Treatment)][, .SD[which.max(N)], by = .(Site, StartDate)][metadata, on = .(Site, StartDate)]
metadata[, N := NULL,]
all.equal(metadata$Treatment[1], metadata$Folder[1])
pdf("../plots/treatments.pdf", w=16, h=9)
ggplot() +
geom_point(data=na.omit(metadata), aes(x=as.Date(StartDate),y=Treatment,colour=as.factor(Treatment))) +
facet_grid(rows = vars(Site))
dev.off()
x_min <- min(sensor_data$Timestamp)
x_max <- max(sensor_data$Timestamp)
x_inter <- seq(floor(as.numeric(x_min)/300)*300,
ceiling(as.numeric(x_max)/300)*300,
by=300)
data_cols <- c(paste("AS", c(1:9), sep="0"), "AS10", "AS11", "Intensity")
interp_table <- joined_table[Site %in% 1:12, lapply(.SD, function(col) approx(x = Timestamp, y = col, xout = x_inter)$y), by=Site, .SDcols = data_cols]
interp_table[, Timestamp := as.POSIXct(x_inter,origin="1970-01-01"), by=Site]
interp_table[, Treatment := joined_table[interp_table, x.Treatment, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, StartDate := joined_table[interp_table, x.StartDate, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, LightOn := joined_table[interp_table, x.On, on=.(Site, Timestamp), roll = "nearest"]]
interp_table
pdf("../plots/interp.pdf", w=16, h=9)
ggplot(data=interp_table[Site == 6 & LightOn == 1 & Timestamp %between% c(as.POSIXct("2023-07-01"), as.POSIXct("2023-08-01"))]) +
geom_point(aes(x=Timestamp,y=Intensity,colour=as.factor(Treatment))) +
geom_point(aes(x=Timestamp,y=AS03),colour="blue") +
geom_point(aes(x=Timestamp,y=AS06),colour="orange")
dev.off()
fwrite(metadata, file="../cleaned_data/metadata.csv")
fwrite(interp_table, file = "../cleaned_data/interpolated_data.csv")
metadata$Treatment
metatable <- fread("../cleaned_data/metadata.csv")
metatable$Treatment
biomass[metatable, i.Treatment, on=.(Site, StartDate)]
?diff
?overlaps
intersect(biomass[metatable, i.Treatment, on=.(Site, StartDate)],
biomass[metatable, Treatment, on=.(Site, StartDate)])
setdiff(biomass[metatable, i.Treatment, on=.(Site, StartDate)],
biomass[metatable, Treatment, on=.(Site, StartDate)])
Map(`%in%`, biomass[metatable, i.Treatment, on=.(Site, StartDate)],
biomass[metatable, Treatment, on=.(Site, StartDate)])
biomass[metatable, Treatment, on=.(Site, StartDate)]
biomass[metatable, NewTreatment := i.Treatment, on=.(Site, StartDate)]
biomass
unique(metatable$Site)
metatable[Site==NA]
metatable[is.na(Site)]
joined_table[is.na(Site)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
names(sensor_data)
names(metadata)
metadata[is.na(Site)]
metadata[!is.na(Site)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
metadata <- metadata[!is.na(Site)]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := nafill(StartDate, type="locf")]
# metadata$Timestamp    & sensor_data$StartDate
# metadata$Folder       & sensor_data$Folder
# metadata$LabelledSite & sensor_data$LabelledSite
# metadata$Site         & sensor_data$Site (:=)
metadata [, StartDate := as.Date(Timestamp),]
# Timestamp is now redundant and we only want it to refer to the timestamp of a specific observation
# PrescribedTreatment refers to the prescribed treatment, which wasn't always the treatment condition present. We will pull treatment from our observations later on
metadata[, c("Timestamp","PrescribedTreatment") := NULL,]
sensor_data[, StartDate := as.Date(StartDate),]
#    long           short           long
joined_table <- na.omit(metadata)[sensor_data, on=.(StartDate, Folder, LabelledSite)]
joined_table[, Changepoint := NULL,]
# add actual treatment to metadata table
# some site-startdate combos have a few data points under a different treatment
# choose most common treatment for each site-startdate combo
metadata <- joined_table[Site %in% 1:12, .N, by=.(Site, StartDate, Treatment)][, .SD[which.max(N)], by = .(Site, StartDate)][metadata, on = .(Site, StartDate)]
metadata[, N := NULL,]
all.equal(metadata$Treatment[1], metadata$Folder[1])
pdf("../plots/treatments.pdf", w=16, h=9)
ggplot() +
geom_point(data=na.omit(metadata), aes(x=as.Date(StartDate),y=Treatment,colour=as.factor(Treatment))) +
facet_grid(rows = vars(Site))
dev.off()
x_min <- min(sensor_data$Timestamp)
x_max <- max(sensor_data$Timestamp)
x_inter <- seq(floor(as.numeric(x_min)/300)*300,
ceiling(as.numeric(x_max)/300)*300,
by=300)
data_cols <- c(paste("AS", c(1:9), sep="0"), "AS10", "AS11", "Intensity")
interp_table <- joined_table[Site %in% 1:12, lapply(.SD, function(col) approx(x = Timestamp, y = col, xout = x_inter)$y), by=Site, .SDcols = data_cols]
interp_table[, Timestamp := as.POSIXct(x_inter,origin="1970-01-01"), by=Site]
interp_table[, Treatment := joined_table[interp_table, x.Treatment, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, StartDate := joined_table[interp_table, x.StartDate, on=.(Site, Timestamp), roll = "nearest"]]
interp_table[, LightOn := joined_table[interp_table, x.On, on=.(Site, Timestamp), roll = "nearest"]]
interp_table
pdf("../plots/interp.pdf", w=16, h=9)
ggplot(data=interp_table[Site == 6 & LightOn == 1 & Timestamp %between% c(as.POSIXct("2023-07-01"), as.POSIXct("2023-08-01"))]) +
geom_point(aes(x=Timestamp,y=Intensity,colour=as.factor(Treatment))) +
geom_point(aes(x=Timestamp,y=AS03),colour="blue") +
geom_point(aes(x=Timestamp,y=AS06),colour="orange")
dev.off()
fwrite(metadata, file="../cleaned_data/metadata.csv")
fwrite(interp_table, file = "../cleaned_data/interpolated_data.csv")
metadata
interp_table
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
sensor_data
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := nafill(StartDate, type="locf")]
``
sensor_data[Site == 7 & StartDate == as.Date("2023-11-28")]
metadata [, StartDate := as.Date(Timestamp),]
metadata[, c("Timestamp","PrescribedTreatment") := NULL,]
sensor_data[, StartDate := as.Date(StartDate),]
#    long           short           long
joined_table <- na.omit(metadata)[sensor_data, on=.(StartDate, Folder, LabelledSite)]
joined_table[, Changepoint := NULL,]
sensor_data[Site == 7 & StartDate == as.Date("2023-11-28")]
names(sensor_data)
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
#metadata <- metadata[!is.na(Site)]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
sensor_data[, StartDate := nafill(StartDate, type="locf")]
names(metadata)
metadata [, StartDate := as.Date(Timestamp),]
metadata[, c("Timestamp","PrescribedTreatment") := NULL,]
sensor_data[, StartDate := as.Date(StartDate),]
#    long           short           long
joined_table <- na.omit(metadata)[sensor_data, on=.(StartDate, Folder, LabelledSite)]
names(joined_table)
joined_table[, Changepoint := NULL,]
names(joined_table)
sensor_data[Site == 7 & StartDate == as.Date("2023-11-28")]
joined_table[Site == 7 & StartDate == as.Date("2023-11-28")]
joined_table[Site == 7]
joined_table[Site == 7- & StartDate == as.Date("2023-06-26")]
joined_table[Site == 7 & StartDate == as.Date("2023-06-26")]
unique(joined_table[Site == 7]$StartDate)
library(data.table)
library(lubridate)
library(remedy)
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
metadata
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(lubridate)
library(remedy)
source("site_assign_label_gen.R")
metadata <- melt(setDT(labels), measure = patterns(c("^dates_out","^sites","^site_settings")),
value.name = c("Timestamp", "LabelledSite", "PrescribedTreatment"))
metadata <- metadata[,.SD,
.SDcols = c("Timestamp", "LabelledSite", "PrescribedTreatment")]
metadata$Timestamp <- with_tz(as.POSIXct(metadata$Timestamp), "PST")
setorder(metadata,Timestamp)
source("reshape.R")
str(status_table)
str(metadata)
summary(status_table)
# trim metadata
metadata <- metadata[Timestamp <= max(status_table$Timestamp)]
# add a column to metadata that indicates the actual status of given site at given interval
# retrieve status_table$Status by matching metadata$Timestamp to status_table$Timestamp and metadata$Site to status_table$Site
metadata[status_table, on = c("Timestamp","LabelledSite"), c("Status","Folder","Site") := list(fcase(
!(i.Status %in% c("", "dep")) | is.na(i.Folder) | is.na(i.Site), 0,
default = 1
), i.Folder, i.Site)]
head(metadata)
ggplot() +
geom_point(data=metadata, aes(x=as.Date(Timestamp),y=PrescribedTreatment,colour=as.factor(PrescribedTreatment))) +
facet_grid(rows = vars(Site))
# geom_vline(data = labels_table, aes(xintercept = Timestamp),alpha=0.3)
start_date <- as.POSIXct("23.06.21.00",format="%y.%m.%d.%H")
end_date <- as.POSIXct("23.12.04.23",format="%y.%m.%d.%H")
all_dates <- seq.POSIXt(start_date, end_date, "hour")
all_dates <- format(all_dates,"%m-%d-%H")
reform <- function (site_files_arg) {
site_files_arg <- gsub(".CSV|\"","",site_files_arg)
site_files_arg <- gsub("^","23-",site_files_arg)
site_files_arg <- as.POSIXct(site_files_arg,format="%y-%m-%d-%H")
format(site_files_arg,"%m-%d-%H")
}
sites <- list.files(path="../raw_data/sensordata", full.names = TRUE)
header <- c("Timestamp", "LabelledSite", "Amber", "White", "On", "Override", "Intensity",
"AS00", "AS01", "AS02", "AS03", "AS04", "AS05", "AS06", "AS07", "AS08",
"AS09", "AS10", "AS11")
get_files <- function(site) {
files_within_bounds <- list.files(site)[reform(list.files(site)) %in% all_dates]
# exclude blank files
files_within_bounds <- files_within_bounds[file.size(paste(site,"/",files_within_bounds,sep=""))>0]
site_table <- do.call(rbind,lapply(files_within_bounds,function(file) {
data <- read.csv(paste(site,"/",file,sep=""))
names(data) <- header
return(data)
}))
}
raw_output <- lapply(sites,get_files)
raw_output <- lapply(raw_output, function(df) {
df$Timestamp <- with_tz(as.POSIXct(as.numeric(df$Timestamp), origin = "1970-01-01"), "PST")
df <- subset(df, Timestamp > start_date & Timestamp < end_date)
})
raw_output <- unique(rbindlist(raw_output,idcol="Folder"))
fwrite(raw_output,"../raw_data/raw_sensor_data_collated.csv")
setnames(metadata, "Timestamp", "StartDate")
fwrite(metadata, "../raw_data/raw_sensor_metadata_collated.csv")
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
metadata
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
#metadata <- metadata[!is.na(Site)]
metadata[StartDate==as.Date("2023-11-28")]
metadata[, StartDate := as.Date(StartDate)]
metadata[StartDate==as.Date("2023-11-28")]
dim(metadata[is.na(Site)])
dim(metadata[!is.na(Site)])
metadata[!is.na(Site)]
metadata <- metadata[!is.na(Site)]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$Timestamp)), by=1:nrow(sensor_data)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
metadata <- metadata[!is.na(Site)]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
# set each value of StartDate to the closest entry in unique(metadata$Timestamp)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$StartDate)), by=1:nrow(sensor_data)]
library(data.table)
library(lubridate)
library(remedy)
sensor_data <- fread("../raw_data/raw_sensor_data_collated.csv")
metadata <- fread("../raw_data/raw_sensor_metadata_collated.csv")
sensor_data <- sensor_data[sensor_data$LabelledSite %in% 1:12,]
metadata <- metadata[!is.na(Site)]
setorder(sensor_data,cols="Timestamp")
sensor_data[, Treatment := fcase(
sensor_data$Amber & sensor_data$White, "C",
sensor_data$Amber & !sensor_data$White, "A",
!sensor_data$Amber & sensor_data$White, "W"
)]
sensor_data <- sensor_data[!is.na(Treatment)]
setorder(sensor_data,LabelledSite,Timestamp)
# here we get the row indices of every change point by site
# have to manually handle firsts, both by folder and site
sensor_data[Treatment != shift(Treatment, 1L, type="lag") | Timestamp %in% sensor_data[!duplicated(sensor_data[,c("LabelledSite","Folder"),with=F])]$Timestamp, Changepoint := Timestamp, by=.(LabelledSite,Folder)]
# set each value of StartDate to the closest entry in unique(metadata$StartDate)
maxless <- function(input, labels) {
return(as.POSIXct(max(as.numeric(labels)[as.numeric(labels) <= as.numeric(input)]),origin="1970-01-01"))
}
sensor_data[, StartDate := maxless(Changepoint, unique(metadata$StartDate)), by=1:nrow(sensor_data)]
metadata
sensor_data
